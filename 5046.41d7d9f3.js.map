{"version":3,"file":"5046.41d7d9f3.js","mappings":"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","sources":["webpack://kas-ui/./src/app/common/MASPageNotFound/MASPageNotFound.tsx","webpack://kas-ui/./src/app/common/MASAlerts/MASAlerts.tsx","webpack://kas-ui/./src/app/common/MASAlerts/MASAlertToastGroup.tsx","webpack://kas-ui/./src/app/common/MASErrorBoundary/MASErrorBoundary.tsx","webpack://kas-ui/./src/app/common/MASLoading/MASLoading.tsx","webpack://kas-ui/./src/app/contexts/federated.ts","webpack://kas-ui/./src/app/modules/InstanceDrawer/contexts/InstanceDrawerContext.tsx","webpack://kas-ui/./src/app/modules/OpenshiftStreams/components/StreamsTableConnected/useKafkaInstances.ts","webpack://kas-ui/./src/app/utils/useDocumentTitle.ts","webpack://kas-ui/./src/app/modules/ServiceAccounts/components/UserUnauthorized.tsx","webpack://kas-ui/./src/app/modules/ServiceAccounts/components/ServiceAccountsEmpty.tsx","webpack://kas-ui/./src/app/modules/ServiceAccounts/components/ServiceAccountsTableView/ServiceAccountsToolbar.tsx","webpack://kas-ui/./src/app/modules/ServiceAccounts/components/ServiceAccountsTableView/ServiceAccountsTableView.tsx","webpack://kas-ui/./src/app/modules/ServiceAccounts/components/ServiceAccountsTableSection.tsx","webpack://kas-ui/./src/app/modules/ServiceAccounts/components/ServiceAccountsTableConnected.tsx","webpack://kas-ui/./src/app/modules/ServiceAccounts/ServiceAccounts.tsx","webpack://kas-ui/./src/app/routes.tsx","webpack://kas-ui/./src/app/modules/OpenshiftStreams/OpenshiftStreamsStandalone.tsx","webpack://kas-ui/./src/app/modules/ServiceAccounts/ServiceAccountsConnected.tsx","webpack://kas-ui/./src/app/bgimages/Patternfly-Logo.svg","webpack://kas-ui/./src/app/auth/keycloak/keycloakAuth.ts","webpack://kas-ui/./src/app/auth/keycloak/KeycloakContext.tsx","webpack://kas-ui/./src/app/AppLayout/AppLayout.tsx","webpack://kas-ui/./src/app/index.tsx","webpack://kas-ui/./src/bootstrap.tsx"],"sourcesContent":["import { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { PageSection, Button } from \"@patternfly/react-core\";\nimport { useHistory } from \"react-router-dom\";\nimport { MASEmptyState, MASEmptyStateVariant } from \"@app/common\";\n\nconst MASPageNotFound: FunctionComponent = () => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n\n  function GoHomeBtn() {\n    const history = useHistory();\n    function handleClick() {\n      history.push(\"/\");\n    }\n    return <Button onClick={handleClick}>{t(\"return_to_home_page\")}</Button>;\n  }\n\n  return (\n    <PageSection padding={{ default: \"noPadding\" }} isFilled>\n      <MASEmptyState\n        emptyStateProps={{ variant: MASEmptyStateVariant.PageNotFound }}\n        titleProps={{ title: t(\"404_page_does_not_exist\") }}\n        emptyStateBodyProps={{\n          body: t(\"we_cannot_find_the_page_you_are_looking_for\"),\n        }}\n      >\n        <GoHomeBtn />\n      </MASEmptyState>\n    </PageSection>\n  );\n};\n\nexport { MASPageNotFound };\n","import { FunctionComponent, useEffect, useState } from \"react\";\nimport { MASAlertToastGroup } from \"@app/common\";\nimport { AlertContext, AlertProps } from \"@rhoas/app-services-ui-shared\";\n\ntype TimeOut = {\n  key: string | undefined;\n  timeOut: ReturnType<typeof setTimeout> | undefined;\n};\n\nexport const AlertProvider: FunctionComponent = ({ children }) => {\n  const [alerts, setAlerts] = useState<AlertProps[]>([]);\n  const [timers, setTimers] = useState<TimeOut[]>([]);\n\n  useEffect(() => {\n    const timersKeys = timers.map((timer) => timer.key);\n    const timeOuts = alerts\n      .filter((alert) => !timersKeys.includes(alert?.id))\n      .map((alert) => {\n        const { id = \"\" } = alert;\n        const timeOut: ReturnType<typeof setTimeout> = setTimeout(\n          () => hideAlert(id),\n          8000\n        );\n        return { key: alert.id, timeOut } as TimeOut;\n      });\n    setTimers([...timers, ...timeOuts]);\n    return () =>\n      timers.forEach((timer) => timer?.timeOut && clearTimeout(timer.timeOut));\n  }, [alerts, timers]);\n\n  const createId = () => new Date().getTime();\n\n  const hideAlert = (key: string | undefined) => {\n    setAlerts((alerts) => [...alerts.filter((el) => el.id !== key)]);\n    setTimers((timers) => [...timers.filter((timer) => timer.key === key)]);\n  };\n\n  const addAlert = (props: AlertProps) => {\n    const id = createId().toString();\n    setAlerts([...alerts, { ...props, id }]);\n  };\n\n  return (\n    <AlertContext.Provider value={{ addAlert }}>\n      <MASAlertToastGroup alerts={alerts} onCloseAlert={hideAlert} />\n      {children}\n    </AlertContext.Provider>\n  );\n};\n","import { FunctionComponent } from \"react\";\nimport { AlertProps } from \"@rhoas/app-services-ui-shared\";\nimport {\n  AlertGroup,\n  Alert,\n  AlertActionCloseButton,\n  AlertVariant,\n} from \"@patternfly/react-core\";\n\ntype AlertToastGroupProps = {\n  alerts: AlertProps[];\n  onCloseAlert: (key: string | undefined) => void;\n};\n\nexport const MASAlertToastGroup: FunctionComponent<AlertToastGroupProps> = ({\n  alerts,\n  onCloseAlert,\n}: AlertToastGroupProps) => {\n  return (\n    <AlertGroup isToast>\n      {alerts.map(\n        ({ id, variant, title, description, dataTestId, ...rest }) => (\n          <Alert\n            key={id}\n            isLiveRegion\n            variant={AlertVariant[variant]}\n            variantLabel=\"\"\n            title={title}\n            actionClose={\n              <AlertActionCloseButton\n                title={title}\n                onClose={() => onCloseAlert(id)}\n              />\n            }\n            data-testid={dataTestId}\n            {...rest}\n          >\n            {description}\n          </Alert>\n        )\n      )}\n    </AlertGroup>\n  );\n};\n","import { Component, ErrorInfo, ReactNode } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { PageSection, Button } from \"@patternfly/react-core\";\nimport { MASEmptyState, MASEmptyStateVariant } from \"@app/common\";\nimport \"./MASErrorBoundary.css\";\n\ntype Props = WithTranslation &\n  RouteComponentProps & {\n    children?: ReactNode;\n  };\n\ntype State = {\n  hasError?: boolean;\n};\n\nclass MASErrorBoundary extends Component<Props, State> {\n  state: State = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error(\"error:\", error, errorInfo);\n  }\n\n  onClickButton = () => {\n    const { history } = this.props;\n    this.setState({ hasError: false });\n    history && history.push(\"/\");\n  };\n\n  render() {\n    const { t } = this.props;\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return (\n        <PageSection padding={{ default: \"noPadding\" }} isFilled>\n          <MASEmptyState\n            emptyStateProps={{\n              variant: MASEmptyStateVariant.UnexpectedError,\n            }}\n            emptyStateIconProps={{\n              className: \"icon-color\",\n            }}\n            titleProps={{\n              title: t(\"common.something_went_wrong\"),\n            }}\n            emptyStateBodyProps={{\n              body: t(\"unexpected_error\"),\n            }}\n          >\n            <Button onClick={this.onClickButton}>\n              {t(\"go_to_kafka_instances\")}\n            </Button>\n          </MASEmptyState>\n        </PageSection>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nconst MASErrorBoundaryComponent = withRouter(\n  withTranslation()(MASErrorBoundary)\n);\nexport { MASErrorBoundaryComponent as MASErrorBoundary };\n","import { FunctionComponent } from \"react\";\nimport {\n  Bullseye,\n  BullseyeProps,\n  Spinner,\n  SpinnerProps,\n} from \"@patternfly/react-core\";\n\nexport type MASLoadingProps = {\n  bullseyeProps?: Omit<BullseyeProps, \"children\">;\n  spinnerProps?: SpinnerProps;\n};\n\nexport const MASLoading: FunctionComponent<MASLoadingProps> = ({\n  bullseyeProps,\n  spinnerProps,\n}: MASLoadingProps) => (\n  <Bullseye {...bullseyeProps}>\n    <Spinner {...spinnerProps} />\n  </Bullseye>\n);\n","import { createContext, useContext } from \"react\";\nimport { Principal } from \"@rhoas/app-services-ui-shared\";\n\nexport type FederatedProps = {\n  preCreateInstance?: (isOpen: boolean) => Promise<boolean>;\n  shouldOpenCreateModal: () => Promise<boolean>;\n  getAllUserAccounts?: () => Principal[];\n};\n\nexport const FederatedContext = createContext<FederatedProps>(\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  null!\n);\nexport const useFederated = (): FederatedProps => useContext(FederatedContext);\n","import { createContext, FunctionComponent, useContext } from \"react\";\nimport { InstanceDrawerTab } from \"@app/modules/InstanceDrawer/tabs\";\nimport { KafkaInstanceEnhanced } from \"@app/modules/OpenshiftStreams/components/StreamsTableConnected/useKafkaInstances\";\n\nexport type InstanceDrawerContextProps = {\n  isDrawerOpen: boolean;\n  drawerInstance: KafkaInstanceEnhanced | undefined;\n  setDrawerInstance: (instance: KafkaInstanceEnhanced) => void;\n  drawerActiveTab: InstanceDrawerTab | undefined;\n  setDrawerActiveTab: (tab: InstanceDrawerTab) => void;\n  openDrawer: (tab?: InstanceDrawerTab) => void;\n  closeDrawer: () => void;\n  tokenEndPointUrl: string;\n};\n\nexport const InstanceDrawerContext = createContext<\n  InstanceDrawerContextProps | undefined\n>(undefined);\n\nexport const useInstanceDrawer = (): InstanceDrawerContextProps => {\n  const answer = useContext(InstanceDrawerContext);\n  if (answer === undefined) {\n    throw new Error(\"must be used inside a InstanceDrawerContext provider\");\n  }\n  return answer;\n};\n\nexport const InstanceDrawerContextProvider: FunctionComponent<\n  InstanceDrawerContextProps\n> = ({ children, ...props }) => {\n  return (\n    <InstanceDrawerContext.Provider value={props}>\n      {children}\n    </InstanceDrawerContext.Provider>\n  );\n};\n","import { useKms } from \"@app/api\";\nimport { useCallback } from \"react\";\nimport type {\n  CloudProvider,\n  KafkaInstance,\n  KafkaInstancesProps,\n  Plan,\n  Status,\n} from \"@rhoas/app-services-ui-components\";\nimport { SimplifiedStatuses } from \"@rhoas/app-services-ui-components\";\nimport { KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport { AxiosCacheRequestConfig } from \"axios-simple-cache-adapter\";\nimport {\n  useGetSizes,\n  useStandardQuota,\n} from \"@app/modules/OpenshiftStreams/dialogs/CreateInstance/hooks\";\n\nexport type KafkaInstanceEnhanced = Required<KafkaInstance> & {\n  request: KafkaRequest;\n};\n\nexport function useKafkaInstances() {\n  const getKms = useKms();\n  const { kafkaRequestToKafkaInstance } = useEnrichedKafkaInstance();\n  return useCallback<\n    KafkaInstancesProps<KafkaInstanceEnhanced>[\"getInstances\"]\n  >(\n    async (page, perPage, query, sort, direction) => {\n      // const filterQuery = getFilterQuery();\n      const apisService = getKms();\n\n      type columns = NonNullable<typeof sort>;\n      const uiColumnMapping: { [key in columns]: string } = {\n        name: \"name\",\n        owner: \"owner\",\n        provider: \"cloud_provider\",\n        region: \"region\",\n        createdAt: \"created_at\",\n      };\n\n      try {\n        const { name, status, owner } = query;\n\n        const querystring = [\n          valuesToQuery(\"name\", name, \"%\"),\n          valuesToQuery(\"owner\", owner, \"%\"),\n          valuesToQuery(\n            \"status\",\n            status.flatMap((s) => SimplifiedStatuses[s]),\n            \"=\"\n          ),\n        ]\n          .filter(Boolean)\n          .map((q) => `(${q})`)\n          .join(\" and \");\n\n        const res = await apisService.getKafkas(\n          page.toString(10),\n          perPage.toString(10),\n          sort ? `${uiColumnMapping[sort]} ${direction}` : undefined,\n          querystring,\n          {\n            cache: false,\n          } as AxiosCacheRequestConfig\n        );\n        const rawInstances = res.data.items;\n        const count = res.data.total;\n        const instances = await Promise.all(\n          rawInstances.map(kafkaRequestToKafkaInstance)\n        );\n        return {\n          instances,\n          count,\n        };\n      } catch (error) {\n        // handleServerError(error);\n        return {\n          instances: [],\n          count: 0,\n        };\n      }\n    },\n    [getKms, kafkaRequestToKafkaInstance]\n  );\n}\n\nexport function useEnrichedKafkaInstance() {\n  const getQuota = useStandardQuota();\n  const getDeveloperSizes = useGetSizes(\"developer\");\n  const getStandardSizes = useGetSizes(\"standard\");\n\n  const kafkaRequestToKafkaInstance = useCallback(\n    async (data: KafkaRequest): Promise<KafkaInstanceEnhanced> => {\n      const d = data as Required<KafkaRequest>;\n\n      const { marketplaceSubscriptions } = await getQuota();\n\n      const enhancedInstance: KafkaInstanceEnhanced = {\n        billing: undefined,\n        connectionRate: 0,\n        connections: 0,\n        createdAt: d.created_at,\n        egress: 0,\n        expiryDate: d.expires_at as string | undefined,\n        id: d.id,\n        ingress: 0,\n        maxPartitions: 0,\n        messageSize: 0,\n        name: d.name,\n        owner: d.owner,\n        plan: d.billing_model as Plan,\n        provider: d.cloud_provider as CloudProvider,\n        region: d.region,\n        size: \"1\",\n        status: apiStatusToUIStatus(d.status),\n        storage: 0,\n        updatedAt: d.updated_at,\n        request: d,\n      };\n\n      // update the billing info\n      try {\n        const marketplaceForBilling = marketplaceSubscriptions.find((ms) =>\n          ms.subscriptions.find((s) => s === d.billing_cloud_account_id)\n        )?.marketplace;\n\n        const billing: KafkaInstanceEnhanced[\"billing\"] =\n          d.billing_model === \"standard\"\n            ? \"prepaid\"\n            : marketplaceForBilling\n            ? {\n                marketplace: marketplaceForBilling,\n                subscription: d.billing_cloud_account_id,\n              }\n            : undefined;\n        enhancedInstance.billing = billing;\n      } catch (e) {\n        console.warn(\n          \"kafkaRequestToKafkaInstance\",\n          `couldn't retrieve the billing info for`,\n          d\n        );\n      }\n\n      // update the limits\n      try {\n        const limits =\n          d.instance_type === \"developer\"\n            ? await getDeveloperSizes(\n                d.cloud_provider as CloudProvider,\n                d.region\n              )\n            : await getStandardSizes(\n                d.cloud_provider as CloudProvider,\n                d.region\n              );\n        const thisInstanceLimits = limits.find((l) => l.id === d.size_id);\n        if (thisInstanceLimits) {\n          enhancedInstance.size = thisInstanceLimits.displayName;\n          enhancedInstance.ingress = thisInstanceLimits.ingress;\n          enhancedInstance.egress = thisInstanceLimits.egress;\n          enhancedInstance.storage = d.max_data_retention_size.bytes;\n          enhancedInstance.connections = thisInstanceLimits.connections;\n          enhancedInstance.connectionRate = thisInstanceLimits.connectionRate;\n          enhancedInstance.maxPartitions = thisInstanceLimits.maxPartitions;\n          enhancedInstance.messageSize = thisInstanceLimits.messageSize;\n        }\n      } catch (e) {\n        console.warn(\n          \"kafkaRequestToKafkaInstance\",\n          `couldn't retrieve the limits info for`,\n          d\n        );\n      }\n\n      return enhancedInstance;\n    },\n    [getDeveloperSizes, getQuota, getStandardSizes]\n  );\n\n  return {\n    kafkaRequestToKafkaInstance,\n  };\n}\n\nfunction valuesToQuery(\n  field: string,\n  values: string[],\n  comparison: \"%\" | \"=\"\n): string | undefined {\n  return values\n    .map((v) =>\n      comparison === \"%\"\n        ? `${field} like %${v.trim()}%`\n        : `${field} = ${v.trim()}`\n    )\n    .join(\" or \");\n}\n\nfunction apiStatusToUIStatus(status: string): Status {\n  const mapping: { [key: string]: Status } = {\n    accepted: \"accepted\",\n    preparing: \"preparing\",\n    provisioning: \"provisioning\",\n    ready: \"ready\",\n    failed: \"degraded\",\n    deprovision: \"deprovision\",\n    deleting: \"deleting\",\n    suspended: \"suspended\",\n    suspending: \"suspending\",\n    resuming: \"resuming\",\n  };\n  return mapping[status] || \"degraded\";\n}\n","import { useEffect } from \"react\";\n\n// a custom hook for setting the page title\nexport function useDocumentTitle(title: string): void {\n  useEffect(() => {\n    const originalTitle = document.title;\n    document.title = title;\n\n    return () => {\n      document.title = originalTitle;\n    };\n  }, [title]);\n}\n","import { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { PageSection, PageSectionVariants } from \"@patternfly/react-core\";\nimport { MASEmptyState } from \"@app/common\";\nimport LockIcon from \"@patternfly/react-icons/dist/js/icons/lock-icon\";\n\nexport const UserUnauthorized: FunctionComponent = () => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n  return (\n    <PageSection\n      variant={PageSectionVariants.default}\n      padding={{ default: \"noPadding\" }}\n      isFilled\n    >\n      <MASEmptyState\n        titleProps={{\n          title: t(\n            \"serviceAccount.unauthorized_access_to_service_accounts_title\"\n          ),\n          headingLevel: \"h2\",\n        }}\n        emptyStateIconProps={{\n          icon: LockIcon,\n        }}\n        emptyStateBodyProps={{\n          body: t(\n            \"serviceAccount.unauthorized_access_to_service_accounts_info\"\n          ),\n        }}\n      />\n    </PageSection>\n  );\n};\n","import { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { PageSection } from \"@patternfly/react-core\";\nimport { MASEmptyState, MASEmptyStateVariant } from \"@app/common\";\nimport { ModalType, useModal } from \"@rhoas/app-services-ui-shared\";\n\nexport type ServiceAccountsEmptyProps = {\n  fetchServiceAccounts: () => Promise<void>;\n};\nexport const ServiceAccountsEmpty: FunctionComponent<\n  ServiceAccountsEmptyProps\n> = ({ fetchServiceAccounts }) => {\n  const { showModal } = useModal<ModalType.KasCreateServiceAccount>();\n\n  const handleCreateModal = () => {\n    showModal(ModalType.KasCreateServiceAccount, {\n      onCreate: fetchServiceAccounts,\n    });\n  };\n\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n  return (\n    <PageSection padding={{ default: \"noPadding\" }} isFilled>\n      <MASEmptyState\n        emptyStateProps={{\n          variant: MASEmptyStateVariant.NoItems,\n        }}\n        titleProps={{\n          title: t(\"serviceAccount.you_do_not_have_any_service_accounts_yet\"),\n        }}\n        emptyStateBodyProps={{\n          body: t(\"serviceAccount.create_service_account_to_get_started\"),\n        }}\n        buttonProps={{\n          title: t(\"serviceAccount.create_service_account\"),\n          onClick: handleCreateModal,\n          [\"data-testid\"]: \"emptyStateStreams-buttonCreateServiceAccount\",\n        }}\n      />\n    </PageSection>\n  );\n};\n","import { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"@patternfly/react-core\";\nimport { MASToolbar, ToolbarItemProps } from \"@app/common\";\n\nexport type ServiceAccountsToolbarProps = {\n  onCreateServiceAccount: () => void;\n};\n\nconst ServiceAccountsToolbar: FC<ServiceAccountsToolbarProps> = ({\n  onCreateServiceAccount: onCreateServiceAccount,\n}: ServiceAccountsToolbarProps) => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n  const toolbarItems: ToolbarItemProps[] = [\n    {\n      item: (\n        <Button\n          variant=\"primary\"\n          onClick={onCreateServiceAccount}\n          data-testid={\"tableServiceAccounts-buttonCreateServiceAccount\"}\n          ouiaId={\"button-create-account\"}\n        >\n          {t(\"serviceAccount.create_service_account\")}\n        </Button>\n      ),\n    },\n  ];\n  /**\n   * Todo: uncomment code when API start support pagination\n   */\n  // if (total && total > 0 && toolbarItems.length === 1) {\n  //   toolbarItems.push({\n  //     item: (\n  //       <MASPagination\n  //         widgetId=\"pagination-options-menu-top\"\n  //         itemCount={total}\n  //         page={page}\n  //         perPage={perPage}\n  //         isCompact={true}\n  //         titles={{\n  //           paginationTitle: t('minimal_pagination'),\n  //           perPageSuffix: t('per_page_suffix'),\n  //           toFirstPage: t('to_first_page'),\n  //           toPreviousPage: t('to_previous_page'),\n  //           toLastPage: t('to_last_page'),\n  //           toNextPage: t('to_next_page'),\n  //           optionsToggle: t('options_toggle'),\n  //           currPage: t('curr_page'),\n  //         }}\n  //       />\n  //     ),\n  //     variant: 'pagination',\n  //     alignment: { default: 'alignRight' },\n  //   });\n  // }\n\n  return (\n    <MASToolbar\n      toolbarProps={{\n        id: \"instance-toolbar\",\n        collapseListedFiltersBreakpoint: \"md\",\n        inset: { xl: \"insetLg\" },\n      }}\n      toolbarItems={toolbarItems}\n    />\n  );\n};\n\nexport { ServiceAccountsToolbar };\n","import { FC, MouseEvent, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  cellWidth,\n  IAction,\n  IRowData,\n  ISeparator,\n  ISortBy,\n  OnSort,\n  SortByDirection,\n} from \"@patternfly/react-table\";\nimport { Skeleton } from \"@patternfly/react-core\";\nimport { MASEmptyState, MASEmptyStateVariant, MASTable } from \"@app/common\";\nimport {\n  getFormattedDate,\n  getLoadingRowsCount,\n  getSkeletonForRows,\n} from \"@app/utils\";\nimport {\n  ServiceAccountsToolbar,\n  ServiceAccountsToolbarProps,\n} from \"./ServiceAccountsToolbar\";\nimport { useAuth } from \"@rhoas/app-services-ui-shared\";\nimport { ServiceAccountData } from \"@rhoas/service-accounts-sdk\";\nimport { format } from \"date-fns\";\n\nexport type ServiceAccountsTableViewProps = ServiceAccountsToolbarProps & {\n  expectedTotal: number;\n  serviceAccountsDataLoaded?: boolean;\n  serviceAccountItems?: ServiceAccountData[];\n  orderBy?: string;\n  setOrderBy?: (order: string) => void;\n  onResetCredentials?: (serviceAccount: ServiceAccountData) => void;\n  onDeleteServiceAccount?: (serviceAccount: ServiceAccountData) => void;\n  onCreateServiceAccount: () => void;\n  page: number;\n  perPage: number;\n};\n\nconst ServiceAccountsTableView: FC<ServiceAccountsTableViewProps> = ({\n  page,\n  perPage,\n  expectedTotal,\n  serviceAccountsDataLoaded,\n  serviceAccountItems,\n  onResetCredentials,\n  onDeleteServiceAccount,\n  orderBy,\n  setOrderBy,\n  onCreateServiceAccount,\n}: ServiceAccountsTableViewProps) => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n  const auth = useAuth();\n\n  const [loggedInUser, setLoggedInUser] = useState<string | undefined>(\n    undefined\n  );\n  const [isOrgAdmin, setIsOrgAdmin] = useState<boolean>();\n\n  useEffect(() => {\n    auth?.getUsername()?.then((username) => setLoggedInUser(username));\n  }, [auth]);\n\n  useEffect(() => {\n    auth?.isOrgAdmin()?.then((isOrgAdmin) => setIsOrgAdmin(isOrgAdmin));\n  }, [auth]);\n\n  const tableColumns = [\n    { title: t(\"common.name\") },\n    { title: t(\"common.clientID\") },\n    { title: t(\"common.owner\"), transforms: [cellWidth(20)] },\n    { title: t(\"time_created\") },\n  ];\n\n  const resetCredentials = (\n    event: MouseEvent,\n    originalData: ServiceAccountData\n  ) => {\n    onResetCredentials && onResetCredentials(originalData);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    event?.target?.parentElement?.parentElement?.previousSibling?.focus();\n  };\n\n  const deleteAccount = (\n    event: MouseEvent,\n    originalData: ServiceAccountData\n  ) => {\n    onDeleteServiceAccount && onDeleteServiceAccount(originalData);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    event?.target?.parentElement?.parentElement?.previousSibling?.focus();\n  };\n\n  const preparedTableCells = () => {\n    const tableRow: (IRowData | string[])[] | undefined = [];\n    const loadingCount: number = getLoadingRowsCount(\n      page,\n      perPage,\n      expectedTotal\n    );\n    if (!serviceAccountsDataLoaded) {\n      return getSkeletonForRows({\n        loadingCount,\n        skeleton: <Skeleton />,\n        length: tableColumns.length,\n      });\n    }\n\n    serviceAccountItems?.forEach((row: IRowData) => {\n      const { name, createdBy, clientId, createdAt } = row;\n\n      const dateTime = format(new Date(createdAt * 1000), \"PPpp\");\n      tableRow.push({\n        cells: [\n          name,\n          clientId,\n          createdBy,\n          { title: getFormattedDate(dateTime, t(\"ago\")) },\n        ],\n        originalData: row,\n      });\n    });\n    return tableRow;\n  };\n\n  const buildActionResolver = (rowData: IRowData) => {\n    if (!serviceAccountsDataLoaded) {\n      return [];\n    }\n\n    const originalData: ServiceAccountData = rowData.originalData;\n    const isUserSameAsLoggedIn =\n      (loggedInUser !== undefined && originalData.createdBy === loggedInUser) ||\n      (isOrgAdmin !== undefined && isOrgAdmin === true);\n\n    let additionalProps: Partial<IAction> = {};\n\n    if (!isUserSameAsLoggedIn) {\n      additionalProps = {\n        tooltip: true,\n        isDisabled: true,\n        style: {\n          pointerEvents: \"auto\",\n          cursor: \"default\",\n        },\n      };\n    }\n\n    const resolver: (IAction | ISeparator)[] = [\n      {\n        title: t(\"common.reset_credentials\"),\n        id: \"reset-credentials\",\n        [\"data-testid\"]: \"tableServiceAccounts-actionResetCredentials\",\n        [\"data-ouia-component-id\"]: \"kebab-menu-reset-creds\",\n        onClick: (event) =>\n          isUserSameAsLoggedIn && resetCredentials(event, originalData),\n        ...additionalProps,\n        tooltipProps: {\n          position: \"left\",\n          content: t(\"serviceAccount.no_permission_to_reset_service_account\"),\n        },\n      } as IAction,\n      {\n        title: t(\"serviceAccount.delete_service_account\"),\n        id: \"delete-account\",\n        [\"data-testid\"]: \"tableServiceAccounts-actionDeleteAccount\",\n        [\"data-ouia-component-id\"]: \"kebab-menu-delete-sa\",\n        onClick: (event) =>\n          isUserSameAsLoggedIn && deleteAccount(event, originalData),\n        ...additionalProps,\n        tooltipProps: {\n          position: \"left\",\n          content: t(\"serviceAccount.no_permission_to_delete_service_account\"),\n        },\n      } as IAction,\n    ];\n    return resolver;\n  };\n\n  const getParameterForSortIndex = (index: number) => {\n    switch (index) {\n      case 0:\n        return \"name\";\n      case 1:\n        return \"client_id\";\n      case 2:\n        return \"owner\";\n      case 3:\n        return \"description\";\n      case 4:\n        return \"created_at\";\n      default:\n        return \"\";\n    }\n  };\n\n  const getindexForSortParameter = (parameter: string) => {\n    switch (parameter.toLowerCase()) {\n      case \"name\":\n        return 0;\n      case \"client_id\":\n        return 1;\n      case \"owner\":\n        return 2;\n      case \"description\":\n        return 3;\n      case \"created_at\":\n        return 4;\n      default:\n        return undefined;\n    }\n  };\n\n  const onSort: OnSort = (_event, columnIndex, sortByDirection) => {\n    setOrderBy &&\n      setOrderBy(`${getParameterForSortIndex(columnIndex)} ${sortByDirection}`);\n  };\n\n  const sortBy = (): ISortBy | undefined => {\n    const sort: string[] = orderBy?.split(\" \") || [];\n    if (sort.length > 1) {\n      return {\n        index: getindexForSortParameter(sort[0]),\n        direction:\n          sort[1] === SortByDirection.asc\n            ? SortByDirection.asc\n            : SortByDirection.desc,\n      };\n    }\n    return;\n  };\n\n  return (\n    <>\n      <ServiceAccountsToolbar onCreateServiceAccount={onCreateServiceAccount} />\n      <MASTable\n        tableProps={{\n          cells: tableColumns,\n          rows: preparedTableCells(),\n          \"aria-label\": t(\"serviceAccount.service_account_list\"),\n          actionResolver: (rowData) => buildActionResolver(rowData),\n          onSort: onSort,\n          sortBy: sortBy(),\n          ouiaId: \"table\",\n        }}\n      />\n      {serviceAccountItems &&\n        serviceAccountItems?.length < 1 &&\n        serviceAccountsDataLoaded && (\n          <MASEmptyState\n            emptyStateProps={{\n              variant: MASEmptyStateVariant.NoResult,\n            }}\n            titleProps={{\n              title: t(\"no_results_found\"),\n            }}\n            emptyStateBodyProps={{\n              body: t(\"adjust_your_filters_and_try_again\"),\n            }}\n          />\n        )}\n      {/* {total && total > 0 && (\n        <MASPagination\n          widgetId=\"pagination-options-menu-bottom\"\n          itemCount={total}\n          variant={PaginationVariant.bottom}\n          page={page}\n          perPage={perPage}\n          titles={{\n            paginationTitle: t('full_pagination'),\n            perPageSuffix: t('per_page_suffix'),\n            toFirstPage: t('to_first_page'),\n            toPreviousPage: t('to_previous_page'),\n            toLastPage: t('to_last_page'),\n            toNextPage: t('to_next_page'),\n            optionsToggle: t('options_toggle'),\n            currPage: t('curr_page'),\n          }}\n        />\n      )} */}\n    </>\n  );\n};\n\nexport { ServiceAccountsTableView };\n","import { usePagination } from \"@app/common\";\nimport { FunctionComponent, useState } from \"react\";\nimport { Card, PageSection, PageSectionVariants } from \"@patternfly/react-core\";\nimport { ServiceAccountsTableView } from \"@app/modules/ServiceAccounts/components/ServiceAccountsTableView\";\nimport { ModalType, useModal } from \"@rhoas/app-services-ui-shared\";\nimport { ServiceAccountData } from \"@rhoas/service-accounts-sdk\";\n\nexport type ServiceAccountTableSectionProps = {\n  fetchServiceAccounts: () => Promise<void>;\n  serviceAccountItems: ServiceAccountData[];\n};\n\nexport const ServiceAccountsTableSection: FunctionComponent<\n  ServiceAccountTableSectionProps\n> = ({ fetchServiceAccounts, serviceAccountItems }) => {\n  const { showModal: showResetCredentialsModal } =\n    useModal<ModalType.KasResetServiceAccountCredentials>();\n  const { showModal: showCreateServiceAccountModal } =\n    useModal<ModalType.KasCreateServiceAccount>();\n  const { showModal: showDeleteServiceAccountModal } =\n    useModal<ModalType.KasDeleteServiceAccount>();\n\n  const [orderBy, setOrderBy] = useState<string>(\"name asc\");\n\n  const { page = 1, perPage = 10 } = usePagination() || {};\n\n  const onResetCredentials = (serviceAccount: ServiceAccountData) => {\n    showResetCredentialsModal(ModalType.KasResetServiceAccountCredentials, {\n      serviceAccount,\n    });\n  };\n\n  const onCreateServiceAccount = () => {\n    showCreateServiceAccountModal(ModalType.KasCreateServiceAccount, {\n      onCreate: fetchServiceAccounts,\n    });\n  };\n\n  const onDeleteServiceAccount = (serviceAccount: ServiceAccountData) => {\n    showDeleteServiceAccountModal(ModalType.KasDeleteServiceAccount, {\n      serviceAccount,\n      onDelete: fetchServiceAccounts,\n    });\n  };\n\n  return (\n    <PageSection\n      className=\"mk--main-page__page-section--table pf-m-padding-on-xl\"\n      variant={PageSectionVariants.default}\n      padding={{ default: \"noPadding\" }}\n      data-ouia-component-id={\"page-ServiceAccounts\"}\n    >\n      <Card>\n        <ServiceAccountsTableView\n          page={page}\n          perPage={perPage}\n          expectedTotal={0}\n          serviceAccountsDataLoaded={true}\n          serviceAccountItems={serviceAccountItems}\n          orderBy={orderBy}\n          setOrderBy={setOrderBy}\n          onResetCredentials={onResetCredentials}\n          onDeleteServiceAccount={onDeleteServiceAccount}\n          onCreateServiceAccount={onCreateServiceAccount}\n        />\n      </Card>\n    </PageSection>\n  );\n};\n","import { useAuth, useConfig } from \"@rhoas/app-services-ui-shared\";\nimport { FunctionComponent, useCallback, useEffect, useState } from \"react\";\nimport {\n  Configuration,\n  ServiceAccountsApi,\n  ServiceAccountData,\n} from \"@rhoas/service-accounts-sdk\";\n\nimport { ErrorCodes, isServiceApiError } from \"@app/utils\";\nimport { PageSection, PageSectionVariants } from \"@patternfly/react-core\";\nimport { UserUnauthorized } from \"@app/modules/ServiceAccounts/components/UserUnauthorized\";\nimport { MASLoading } from \"@app/common\";\nimport { ServiceAccountsEmpty } from \"@app/modules/ServiceAccounts/components/ServiceAccountsEmpty\";\nimport { ServiceAccountsTableSection } from \"@app/modules/ServiceAccounts/components/ServiceAccountsTableSection\";\n\nexport const ServiceAccountsTableConnected: FunctionComponent = () => {\n  const auth = useAuth();\n  const config = useConfig();\n\n  const [serviceAccountItems, setServiceAccountItems] = useState<\n    ServiceAccountData[] | undefined\n  >();\n  const [isUserUnauthorized, setIsUserUnauthorized] = useState<boolean>(false);\n\n  const handleServerError = (error: Error) => {\n    let errorCode: string | undefined;\n    if (isServiceApiError(error)) {\n      errorCode = error.response?.data?.code;\n    }\n    if (errorCode === ErrorCodes.UNAUTHORIZED_USER) {\n      setIsUserUnauthorized(true);\n    }\n  };\n\n  const fetchServiceAccounts = useCallback(async () => {\n    const accessToken = await auth?.sas_ui.getToken();\n    if (accessToken && config) {\n      try {\n        const apisService = new ServiceAccountsApi(\n          new Configuration({\n            accessToken,\n            basePath: config?.sas_ui.apiBasePath,\n          })\n        );\n        await apisService.getServiceAccounts().then((response) => {\n          const serviceAccounts: ServiceAccountData[] = response?.data;\n          const sortedServiceAccounts: ServiceAccountData[] | undefined =\n            serviceAccounts?.sort((a, b) =>\n              a.createdAt && b.createdAt\n                ? String(b.createdAt).localeCompare(String(a.createdAt))\n                : -1\n            );\n          setServiceAccountItems(sortedServiceAccounts);\n        });\n      } catch (error: unknown) {\n        if (error instanceof Error) {\n          handleServerError(error);\n        }\n      }\n    }\n  }, [auth, config]);\n\n  useEffect(() => {\n    fetchServiceAccounts();\n  }, [fetchServiceAccounts]);\n\n  if (isUserUnauthorized) {\n    return <UserUnauthorized />;\n  }\n\n  if (serviceAccountItems === undefined) {\n    return (\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n      >\n        <MASLoading />\n      </PageSection>\n    );\n  }\n  if (serviceAccountItems.length < 1) {\n    return <ServiceAccountsEmpty fetchServiceAccounts={fetchServiceAccounts} />;\n  }\n  return (\n    <ServiceAccountsTableSection\n      fetchServiceAccounts={fetchServiceAccounts}\n      serviceAccountItems={serviceAccountItems}\n    />\n  );\n};\n","import { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { ServiceAccountsTableConnected } from \"@app/modules/ServiceAccounts/components/ServiceAccountsTableConnected\";\nimport \"@app/modules/styles.css\";\n\nconst ServiceAccounts: FC = () => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n  return (\n    <>\n      <PageSection\n        variant={PageSectionVariants.light}\n        className=\"pf-m-padding-on-xl\"\n        padding={{ default: \"noPadding\" }}\n      >\n        <TextContent>\n          <Text component=\"h1\"> {t(\"serviceAccount.service_accounts\")}</Text>\n          <Text component=\"p\">\n            {t(\"serviceAccount.service_accounts_title_header_info\")}\n          </Text>\n        </TextContent>\n      </PageSection>\n      <ServiceAccountsTableConnected />\n    </>\n  );\n};\n\nexport { ServiceAccounts };\n","import { ComponentType, ReactElement } from \"react\";\nimport { Route, RouteComponentProps, Switch } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { MASPageNotFound } from \"@app/common/MASPageNotFound/MASPageNotFound\";\nimport { useDocumentTitle } from \"@app/utils/useDocumentTitle\";\n// import {\n//   LastLocationProvider,\n//   useLastLocation,\n// } from 'react-router-last-location';\nimport { OpenshiftStreamsStandalone } from \"@app/modules/OpenshiftStreams\";\nimport { ServiceAccountsConnected } from \"@app/modules/ServiceAccounts\";\n\nexport interface IAppRoute {\n  label?: string; // Excluding the label will exclude the route from the nav sidebar in AppLayout\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n  exact?: boolean;\n  path: string;\n  title: string;\n  isAsync?: boolean;\n  routes?: undefined;\n}\n\nexport interface IAppRouteGroup {\n  label: string;\n  routes: IAppRoute[];\n}\n\nexport type AppRouteConfig = IAppRoute | IAppRouteGroup;\n\nconst routes: AppRouteConfig[] = [\n  {\n    component: OpenshiftStreamsStandalone,\n    exact: true,\n    // t('kafka_instances')\n    label: \"Kafka Instances\",\n    path: \"/\",\n    title: \"Kafka Instances\",\n  },\n  {\n    component: ServiceAccountsConnected,\n    exact: true,\n    label: \"Service Accounts\",\n    path: \"/service-accounts\",\n    title: \"Service Accounts\",\n  },\n];\n\n// a custom hook for sending focus to the primary content container\n// after a view has loaded so that subsequent press of tab key\n// sends focus directly to relevant content\n\n// TODO: restore when react-router-last-location officially supports react 17\n\n// const useA11yRouteChange = (isAsync: boolean) => {\n//   const lastNavigation = useLastLocation();\n//   React.useEffect(() => {\n//     if (!isAsync && lastNavigation !== null) {\n//       routeFocusTimer = accessibleRouteChangeHandler();\n//     }\n//     return () => {\n//       window.clearTimeout(routeFocusTimer);\n//     };\n//   }, [isAsync, lastNavigation]);\n// };\n\nconst RouteWithTitleUpdates = ({\n  component: Component,\n  // isAsync = false,\n  title,\n  ...rest\n}: IAppRoute) => {\n  // useA11yRouteChange(isAsync);\n  useDocumentTitle(title);\n\n  function routeWithTitle(routeProps: RouteComponentProps) {\n    return <Component {...rest} {...routeProps} />;\n  }\n\n  return <Route render={routeWithTitle} />;\n};\n\nconst PageNotFound = ({ title }: { title: string }) => {\n  useDocumentTitle(title);\n  return <Route component={MASPageNotFound} />;\n};\n\nconst flattenedRoutes: IAppRoute[] = routes.reduce(\n  (flattened, route) => [\n    ...flattened,\n    ...(route.routes ? route.routes : [route]),\n  ],\n  [] as IAppRoute[]\n);\n\nconst AppRoutes = (): ReactElement => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n  return (\n    // <LastLocationProvider>\n    <Switch>\n      {flattenedRoutes.map(\n        ({ path, exact, component, title, isAsync }, idx) => (\n          <RouteWithTitleUpdates\n            path={path}\n            exact={exact}\n            component={component}\n            key={idx}\n            title={title}\n            isAsync={isAsync}\n          />\n        )\n      )}\n      <PageNotFound title={t(\"404_page_does_not_exist\")} />\n    </Switch>\n    // </LastLocationProvider>\n  );\n};\n\nexport { AppRoutes, routes };\n","import { FunctionComponent } from \"react\";\nimport { ModalProvider } from \"@rhoas/app-services-ui-components\";\nimport { KasModalLoader } from \"@app/modals\";\nimport { KasLayout } from \"@app/modules/OpenshiftStreams/components\";\nimport { StreamsTableConnectedWithAuth } from \"@app/modules/OpenshiftStreams/StreamsTableConnectedWithAuth\";\n\nexport const OpenshiftStreamsStandalone: FunctionComponent = () => {\n  return (\n    <ModalProvider>\n      <KasLayout data-ouia-app-id={\"dummy\"}>\n        <StreamsTableConnectedWithAuth\n          preCreateInstance={(open) => Promise.resolve(open)}\n        />\n      </KasLayout>\n      <KasModalLoader />\n    </ModalProvider>\n  );\n};\n","import { FunctionComponent } from \"react\";\nimport { ServiceAccounts } from \"./ServiceAccounts\";\n\nexport const ServiceAccountsConnected: FunctionComponent = () => {\n  return <ServiceAccounts />;\n};\n","export default __webpack_public_path__ + \"f940137c.svg\";","import Keycloak, { KeycloakInstance, KeycloakTokenParsed } from \"keycloak-js\";\n\nexport let keycloak: KeycloakInstance | undefined;\n\n/**\n * Get keycloak instance\n *\n * @return an initiated keycloak instance or `undefined`\n * if keycloak isn't configured\n *\n */\nexport const getKeycloakInstance = async (): Promise<\n  KeycloakInstance | undefined\n> => {\n  if (!keycloak) await init();\n  return keycloak;\n};\n\n/**\n * Initiate keycloak instance.\n *\n * Set keycloak to undefined if\n * keycloak isn't configured\n *\n */\nexport const init = async (): Promise<void> => {\n  try {\n    keycloak = Keycloak();\n    if (keycloak) {\n      await keycloak.init({\n        onLoad: \"login-required\",\n      });\n    }\n  } catch {\n    keycloak = undefined;\n    console.warn(\n      \"Auth: Unable to initialize keycloak. Client side will not be configured to use authentication\"\n    );\n  }\n};\n\n/**\n * Use keycloak update token function to retrieve\n * keycloak token\n *\n * @return keycloak token or empty string if keycloak\n * isn't configured\n *\n */\nexport const getKeyCloakToken = async (): Promise<string> => {\n  await keycloak?.updateToken(50);\n  if (keycloak?.token) return keycloak.token;\n  console.error(\"No keycloak token available\");\n  return \"foo\";\n};\n\n/**\n * Use keycloak update token function to retrieve\n * keycloak token\n *\n * @return keycloak token or empty string if keycloak\n * isn't configured\n *\n */\nexport const getParsedKeyCloakToken =\n  async (): Promise<KeycloakTokenParsed> => {\n    await keycloak?.updateToken(50);\n    if (keycloak?.tokenParsed) return keycloak.tokenParsed;\n    console.error(\"No keycloak token available\");\n    return {} as KeycloakTokenParsed;\n  };\n\n/**\n * logout of keycloak, clear cache and offline store then redirect to\n * keycloak login page\n *\n * @param keycloak the keycloak instance\n * @param client offix client\n *\n */\nexport const logout = async (\n  keycloak: Keycloak.KeycloakInstance | undefined\n): Promise<void> => {\n  if (keycloak) {\n    await keycloak.logout();\n  }\n};\n","import { FunctionComponent, createContext } from \"react\";\nimport { KeycloakInstance, KeycloakProfile } from \"keycloak-js\";\nimport {\n  getKeyCloakToken,\n  getParsedKeyCloakToken,\n} from \"@app/auth/keycloak/keycloakAuth\";\nimport { Auth, AuthContext } from \"@rhoas/app-services-ui-shared\";\n\n// This is a context which can manage the keycloak\nexport interface IKeycloakContext {\n  keycloak?: KeycloakInstance | undefined;\n  profile?: KeycloakProfile | undefined;\n}\n\nexport const KeycloakContext = createContext<IKeycloakContext>({\n  keycloak: undefined,\n});\n\nexport const KeycloakAuthProvider: FunctionComponent = (props) => {\n  const getUsername = () => {\n    return getParsedKeyCloakToken().then(\n      (token) => (token as Record<string, string>)[\"username\"]\n    );\n  };\n\n  const isOrgAdmin = () => {\n    return getParsedKeyCloakToken().then(\n      (token) => (token as Record<string, boolean>)[\"is_org_admin\"]\n    );\n  };\n\n  const authTokenContext = {\n    kas: {\n      getToken: getKeyCloakToken,\n    },\n    getUsername,\n    isOrgAdmin,\n  } as Auth;\n  return (\n    <AuthContext.Provider value={authTokenContext}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n","import { FunctionComponent, useState, useContext } from \"react\";\nimport { NavLink, useLocation, useHistory } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Nav,\n  NavList,\n  NavItem,\n  NavExpandable,\n  Page,\n  PageHeader,\n  PageSidebar,\n  SkipToContent,\n  PageHeaderTools,\n} from \"@patternfly/react-core\";\nimport { routes, IAppRoute, IAppRouteGroup } from \"@app/routes\";\nimport logo from \"@app/bgimages/Patternfly-Logo.svg\";\nimport { KeycloakContext } from \"@app/auth/keycloak/KeycloakContext\";\n\nconst AppLayout: FunctionComponent = ({ children }) => {\n  const [isNavOpen, setIsNavOpen] = useState(true);\n  const [isMobileView, setIsMobileView] = useState(true);\n  const [isNavOpenMobile, setIsNavOpenMobile] = useState(false);\n\n  const keycloakContext = useContext(KeycloakContext);\n\n  const location = useLocation();\n\n  const onNavToggleMobile = () => {\n    setIsNavOpenMobile(!isNavOpenMobile);\n  };\n  const onNavToggle = () => {\n    setIsNavOpen(!isNavOpen);\n  };\n  const onPageResize = (props: { mobileView: boolean; windowSize: number }) => {\n    setIsMobileView(props.mobileView);\n  };\n\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n\n  function LogoImg() {\n    const history = useHistory();\n    function handleClick() {\n      history.push(\"/\");\n    }\n    return <img src={logo} onClick={handleClick} alt=\"PatternFly Logo\" />;\n  }\n\n  if (!keycloakContext.keycloak) {\n    return (\n      // TODO handle this error properly!\n      <div>403 Unauthorized</div>\n    );\n  }\n\n  if (!keycloakContext.keycloak.authenticated) {\n    // force the user to log in\n    keycloakContext.keycloak?.login();\n    return <></>;\n  }\n\n  const email = keycloakContext.keycloak.profile?.email;\n\n  const HeaderTools = <PageHeaderTools>{email}</PageHeaderTools>;\n\n  const Header = (\n    <PageHeader\n      logo={<LogoImg />}\n      showNavToggle\n      isNavOpen={isNavOpen}\n      headerTools={HeaderTools}\n      onNavToggle={isMobileView ? onNavToggleMobile : onNavToggle}\n      aria-label={t(\"global_navigation\")}\n    />\n  );\n\n  const renderNavItem = (route: IAppRoute, index: number) => {\n    return (\n      <NavItem key={`${route.label}-${index}`} id={`${route.label}-${index}`}>\n        <NavLink exact to={route.path} activeClassName=\"pf-m-current\">\n          {route?.label && t(route.label)}\n        </NavLink>\n      </NavItem>\n    );\n  };\n\n  const renderNavGroup = (group: IAppRouteGroup, groupIndex: number) => (\n    <NavExpandable\n      key={`${group.label}-${groupIndex}`}\n      id={`${group.label}-${groupIndex}`}\n      title={group.label}\n      isActive={group.routes.some((route) => route.path === location.pathname)}\n      // aria-label={t()}\n    >\n      {group.routes.map(\n        (route, idx) => route.label && renderNavItem(route, idx)\n      )}\n    </NavExpandable>\n  );\n\n  const Navigation = (\n    <Nav\n      id=\"nav-primary-simple\"\n      role=\"navigation\"\n      theme=\"dark\"\n      aria-label={t(\"global\")}\n    >\n      <NavList id=\"nav-list-simple\">\n        {routes.map(\n          (route, idx) =>\n            route.label &&\n            (!route.routes\n              ? renderNavItem(route, idx)\n              : renderNavGroup(route, idx))\n        )}\n      </NavList>\n    </Nav>\n  );\n  const Sidebar = (\n    <PageSidebar\n      theme=\"dark\"\n      nav={Navigation}\n      isNavOpen={isMobileView ? isNavOpenMobile : isNavOpen}\n    />\n  );\n  const PageSkipToContent = (\n    <SkipToContent href=\"#primary-app-container\">\n      {t(\"skip_to_content\")}\n    </SkipToContent>\n  );\n  return (\n    <Page\n      mainContainerId=\"primary-app-container\"\n      role=\"main\"\n      header={Header}\n      sidebar={Sidebar}\n      onPageResize={onPageResize}\n      skipToContent={PageSkipToContent}\n    >\n      {children}\n    </Page>\n  );\n};\n\nexport { AppLayout };\n","import { FunctionComponent, useState, useEffect, Suspense } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {\n  BasenameContext,\n  Config,\n  ConfigContext,\n} from \"@rhoas/app-services-ui-shared\";\nimport \"@patternfly/patternfly/patternfly.css\";\nimport \"@patternfly/patternfly/utilities/Accessibility/accessibility.css\";\nimport \"@patternfly/patternfly/utilities/Sizing/sizing.css\";\nimport \"@patternfly/patternfly/utilities/Spacing/spacing.css\";\nimport \"@patternfly/patternfly/utilities/Display/display.css\";\nimport \"@patternfly/patternfly/utilities/Flex/flex.css\";\nimport { AppLayout } from \"@app/AppLayout/AppLayout\";\nimport { AppRoutes } from \"@app/routes\";\nimport \"@app/app.css\";\nimport { getKeycloakInstance } from \"./auth/keycloak/keycloakAuth\";\nimport { MASLoading } from \"@app/common\";\nimport {\n  KeycloakAuthProvider,\n  KeycloakContext,\n} from \"@app/auth/keycloak/KeycloakContext\";\nimport {\n  MASErrorBoundary,\n  PaginationProvider,\n  AlertProvider,\n} from \"@app/common\";\nimport { I18nProvider, ModalProvider } from \"@rhoas/app-services-ui-components\";\nimport { KasModalLoader } from \"@app/modals\";\n\nlet keycloak: Keycloak.KeycloakInstance | undefined;\ndeclare const __BASE_PATH__: string;\n\nconst App: FunctionComponent = () => {\n  const [initialized, setInitialized] = useState(false);\n\n  // Initialize the client\n  useEffect(() => {\n    const init = async () => {\n      keycloak = await getKeycloakInstance();\n      setInitialized(true);\n    };\n    init();\n  }, []);\n\n  if (!initialized) return <MASLoading />;\n\n  return (\n    <BasenameContext.Provider value={{ getBasename: () => \"\" }}>\n      <ConfigContext.Provider\n        value={\n          {\n            kas: {\n              apiBasePath: __BASE_PATH__,\n            },\n            ams: {\n              apiBasePath: __BASE_PATH__,\n            },\n          } as Config\n        }\n      >\n        <I18nProvider\n          lng=\"en\"\n          resources={{\n            en: {\n              common: () =>\n                import(\n                  \"@rhoas/app-services-ui-components/locales/en/common.json\"\n                ),\n              \"create-kafka-instance\": () =>\n                import(\n                  \"@rhoas/app-services-ui-components/locales/en/create-kafka-instance.json\"\n                ),\n              kafka: () =>\n                import(\n                  \"@rhoas/app-services-ui-components/locales/en/kafka.json\"\n                ),\n              metrics: () =>\n                import(\n                  \"@rhoas/app-services-ui-components/locales/en/metrics.json\"\n                ),\n              kasTemporaryFixMe: () =>\n                import(\"./kas-ui-dont-modify-temporay.json\"),\n            },\n          }}\n          debug={true}\n        >\n          {\" \"}\n          <KeycloakContext.Provider\n            value={{ keycloak, profile: keycloak?.profile }}\n          >\n            <KeycloakAuthProvider>\n              <AlertProvider>\n                <Router>\n                  <Suspense fallback={<MASLoading />}>\n                    <MASErrorBoundary>\n                      <PaginationProvider>\n                        <ModalProvider>\n                          <AppLayout>\n                            <AppRoutes />\n                          </AppLayout>\n                          <KasModalLoader />\n                        </ModalProvider>\n                      </PaginationProvider>\n                    </MASErrorBoundary>\n                  </Suspense>\n                </Router>\n              </AlertProvider>\n            </KeycloakAuthProvider>\n          </KeycloakContext.Provider>\n        </I18nProvider>\n      </ConfigContext.Provider>\n    </BasenameContext.Provider>\n  );\n};\nexport { App };\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"@app/index\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  const config = {\n    rules: [\n      {\n        id: \"color-contrast\",\n        enabled: false,\n      },\n    ],\n  };\n  // eslint-disable-next-line @typescript-eslint/no-var-requires, no-undef\n  const axe = require(\"react-axe\");\n  axe(React, ReactDOM, 1000, config);\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n"],"names":["MASPageNotFound","t","useTranslation","PageSection","padding","default","isFilled","emptyStateProps","variant","titleProps","title","emptyStateBodyProps","body","history","useHistory","Button","onClick","push","AlertProvider","children","alerts","setAlerts","useState","timers","setTimers","useEffect","timersKeys","map","timer","key","timeOuts","filter","alert","includes","id","timeOut","setTimeout","hideAlert","forEach","clearTimeout","el","AlertContext","value","addAlert","props","Date","getTime","toString","MASAlertToastGroup","onCloseAlert","AlertGroup","isToast","description","dataTestId","rest","Alert","isLiveRegion","AlertVariant","variantLabel","actionClose","AlertActionCloseButton","onClose","Component","state","hasError","onClickButton","this","setState","static","componentDidCatch","error","errorInfo","console","render","MASEmptyState","emptyStateIconProps","className","MASErrorBoundaryComponent","withRouter","withTranslation","bullseyeProps","spinnerProps","Bullseye","Spinner","FederatedContext","createContext","useFederated","useContext","InstanceDrawerContext","undefined","useInstanceDrawer","answer","Error","useKafkaInstances","getKms","kafkaRequestToKafkaInstance","getQuota","getDeveloperSizes","getStandardSizes","useCallback","data","d","marketplaceSubscriptions","enhancedInstance","billing","connectionRate","connections","createdAt","created_at","egress","expiryDate","expires_at","ingress","maxPartitions","messageSize","name","owner","plan","billing_model","provider","cloud_provider","region","size","status","apiStatusToUIStatus","storage","updatedAt","updated_at","request","marketplaceForBilling","find","ms","subscriptions","s","billing_cloud_account_id","marketplace","subscription","e","warn","thisInstanceLimits","instance_type","l","size_id","displayName","max_data_retention_size","bytes","useEnrichedKafkaInstance","page","perPage","query","sort","direction","apisService","uiColumnMapping","querystring","valuesToQuery","flatMap","SimplifiedStatuses","Boolean","q","join","res","getKafkas","cache","rawInstances","items","count","total","instances","Promise","all","field","values","comparison","v","trim","accepted","preparing","provisioning","ready","failed","deprovision","deleting","suspended","suspending","resuming","useDocumentTitle","originalTitle","document","UserUnauthorized","PageSectionVariants","headingLevel","icon","ServiceAccountsEmpty","fetchServiceAccounts","showModal","useModal","buttonProps","ModalType","onCreate","ServiceAccountsToolbar","onCreateServiceAccount","toolbarItems","item","ouiaId","toolbarProps","collapseListedFiltersBreakpoint","inset","xl","ServiceAccountsTableView","expectedTotal","serviceAccountsDataLoaded","serviceAccountItems","onResetCredentials","onDeleteServiceAccount","orderBy","setOrderBy","auth","useAuth","loggedInUser","setLoggedInUser","isOrgAdmin","setIsOrgAdmin","getUsername","then","username","tableColumns","transforms","cellWidth","buildActionResolver","rowData","originalData","isUserSameAsLoggedIn","createdBy","additionalProps","tooltip","isDisabled","style","pointerEvents","cursor","resolver","event","target","parentElement","previousSibling","focus","resetCredentials","tooltipProps","position","content","deleteAccount","getindexForSortParameter","parameter","toLowerCase","tableProps","cells","rows","tableRow","loadingCount","row","clientId","dateTime","format","skeleton","Skeleton","length","preparedTableCells","actionResolver","onSort","_event","columnIndex","sortByDirection","index","getParameterForSortIndex","sortBy","split","SortByDirection","ServiceAccountsTableSection","showResetCredentialsModal","showCreateServiceAccountModal","showDeleteServiceAccountModal","Card","serviceAccount","onDelete","ServiceAccountsTableConnected","config","useConfig","setServiceAccountItems","isUserUnauthorized","setIsUserUnauthorized","accessToken","sas_ui","getToken","ServiceAccountsApi","Configuration","basePath","apiBasePath","getServiceAccounts","response","serviceAccounts","sortedServiceAccounts","a","b","String","localeCompare","errorCode","code","handleServerError","TextContent","Text","component","routes","ModalProvider","StreamsTableConnectedWithAuth","preCreateInstance","open","resolve","exact","label","path","RouteWithTitleUpdates","Route","routeProps","PageNotFound","flattenedRoutes","reduce","flattened","route","AppRoutes","Switch","isAsync","idx","getKeycloakInstance","init","onLoad","getKeyCloakToken","updateToken","token","getParsedKeyCloakToken","tokenParsed","KeycloakContext","keycloak","KeycloakAuthProvider","authTokenContext","kas","AuthContext","AppLayout","isNavOpen","setIsNavOpen","isMobileView","setIsMobileView","isNavOpenMobile","setIsNavOpenMobile","keycloakContext","location","useLocation","authenticated","login","email","profile","HeaderTools","PageHeaderTools","Header","PageHeader","logo","src","alt","showNavToggle","headerTools","onNavToggle","renderNavItem","NavItem","NavLink","to","activeClassName","Navigation","Nav","role","theme","NavList","group","groupIndex","NavExpandable","isActive","some","pathname","Sidebar","PageSidebar","nav","PageSkipToContent","SkipToContent","href","Page","mainContainerId","header","sidebar","onPageResize","mobileView","skipToContent","initialized","setInitialized","BasenameContext","getBasename","ConfigContext","__BASE_PATH__","ams","I18nProvider","lng","resources","en","common","kafka","metrics","kasTemporaryFixMe","debug","Provider","Suspense","fallback","getElementById"],"sourceRoot":""}