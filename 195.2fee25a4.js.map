{"version":3,"sources":["webpack://kas-ui/./src/app/api/ApiContext.tsx","webpack://kas-ui/./src/app/auth/AuthContext.tsx","webpack://kas-ui/./src/app/common/MASAlerts/MASAlerts.tsx","webpack://kas-ui/./src/app/common/MASGenerateCredentialsModal/MASGenerateCredentialsModal.tsx","webpack://kas-ui/./src/app/common/MASEmptyState/MASEmptyState.tsx","webpack://kas-ui/./src/app/common/MASErrorBoundary/MASErrorBoundary.tsx","webpack://kas-ui/./src/app/common/MASFullPageError/MASFullPageError.tsx","webpack://kas-ui/./src/app/utils/utils.ts"],"names":["ApiContext","basePath","undefined","AuthContext","AlertContext","createContext","addAlert","useAlerts","useContext","AlertProvider","children","useState","alerts","setAlerts","timers","setTimers","useEffect","timersKeys","map","timer","key","timeOuts","filter","alert","includes","timeOut","setTimeout","hideAlert","forEach","clearTimeout","el","Provider","value","title","variant","body","dataTestId","AlertVariant","Date","getTime","onCloseAlert","MASGenerateCredentialsModal","isOpen","setIsOpen","credential","setCredential","isLoading","t","useTranslation","isCreated","setIsCreated","confirmationCheckbox","setConfirmationCheckbox","handleClose","generateCredentials","emptyStateProps","EmptyStateVariant","emptyStateIconProps","icon","titleProps","headingLevel","size","TitleSizes","TextContent","Text","component","TextVariants","className","InputGroup","InputGroupText","ClipboardCopy","isReadOnly","textAriaLabel","clientID","clientSecret","Bullseye","Checkbox","label","isChecked","onChange","checked","id","name","Button","isDisabled","onClick","Modal","ModalVariant","onClose","showClose","MASEmptyStateVariant","buttonProps","emptyStateBodyProps","buttonVariant","ButtonVariant","restButtonProps","restTitleProps","restEmptyStateBodyProps","masEmptyStateVariant","GettingStarted","restEmptyStateProps","varaintConfig","titleSize","NoAccess","NoItems","NoResult","UnexpectedError","PageNotFound","getVariantConfig","css","EmptyStateIcon","Title","EmptyStateBody","state","hasError","updateState","setState","getDerivedStateFromError","_","componentDidCatch","error","errorInfo","console","render","this","props","Component","MASFullPageError","pageSection","PageSectionVariants","padding","restPageSectionProps","PageSection","default","isFilled","InstanceStatus","cloudProviderOptions","statusOptions","cloudRegionOptions","MAX_INSTANCE_NAME_LENGTH","MAX_FILTER_LIMIT","MAX_SERVICE_ACCOUNT_NAME_LENGTH","MAX_SERVICE_ACCOUNT_DESC_LENGTH","MAX_POLL_INTERVAL","isValidToken","accessToken","getLoadingRowsCount","page","perPage","expectedTotal","loadingRowCount","Math","floor","sortValues","items","order","sort","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison"],"mappings":"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","file":"195.2fee25a4.js","sourcesContent":["import React from 'react';\n\nexport interface IApiContext {\n  basePath: string | undefined;\n}\n\nexport const ApiContext = React.createContext<IApiContext>({\n  basePath: undefined\n});\n","import React from 'react';\n\nexport interface IAuthContext {\n  getToken: () => Promise<string>\n  getUsername: () => Promise<string>\n}\n\nexport const AuthContext = React.createContext<IAuthContext | undefined>(undefined);\n","import React, { useState, createContext, ReactNode, useContext, useEffect } from 'react';\nimport { MASAlertType, MASAlertToastGroup } from './MASAlertToastGroup';\nimport { AlertVariant } from '@patternfly/react-core';\n\nexport type AlertContextProps = {\n  addAlert: (message: string, variant?: AlertVariant, body?: string | React.ReactElement, dataTestId?: string) => void;\n};\n\nexport const AlertContext = createContext<AlertContextProps>({\n  addAlert: () => {},\n});\n\nexport const useAlerts = () => useContext(AlertContext);\n\ntype TimeOut = {\n  key: number;\n  timeOut: NodeJS.Timeout;\n};\n\nexport const AlertProvider = ({ children }: { children: ReactNode }) => {\n  const [alerts, setAlerts] = useState<MASAlertType[]>([]);\n  const [timers, setTimers] = useState<TimeOut[]>([]);\n\n  useEffect(() => {\n    const timersKeys = timers.map((timer) => timer.key);\n    const timeOuts = alerts\n      .filter((alert) => !timersKeys.includes(alert.key))\n      .map((alert) => {\n        const timeOut = setTimeout(() => hideAlert(alert.key), 8000);\n        return { key: alert.key, timeOut };\n      });\n    setTimers([...timers, ...timeOuts]);\n    return () => timers.forEach((timer) => clearTimeout(timer.timeOut));\n  }, [alerts]);\n\n  const createId = () => new Date().getTime();\n\n  const hideAlert = (key: number) => {\n    setAlerts((alerts) => [...alerts.filter((el) => el.key !== key)]);\n    setTimers((timers) => [...timers.filter((timer) => timer.key === key)]);\n  };\n\n  const addAlert = (\n    title: string,\n    variant: AlertVariant = AlertVariant.default,\n    body?: string | React.ReactElement,\n    dataTestId?: string\n  ) => {\n    setAlerts([...alerts, { key: createId(), title, variant, body, dataTestId }]);\n  };\n\n  return (\n    <AlertContext.Provider value={{ addAlert }}>\n      <MASAlertToastGroup alerts={alerts} onCloseAlert={hideAlert} />\n      {children}\n    </AlertContext.Provider>\n  );\n};\n","import React, { useState, FunctionComponent, useContext, useEffect } from 'react';\nimport {\n  Modal,\n  ModalVariant,\n  Bullseye,\n  Button,\n  ClipboardCopy,\n  Checkbox,\n  EmptyStateVariant,\n  InputGroup,\n  InputGroupText,\n  TitleSizes,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport KeyIcon from '@patternfly/react-icons/dist/js/icons/key-icon';\nimport '@patternfly/react-styles/css/utilities/Spacing/spacing.css';\nimport '@patternfly/react-styles/css/utilities/Flex/flex.css';\nimport '@patternfly/react-styles/css/utilities/Sizing/sizing.css';\nimport { useTranslation } from 'react-i18next';\nimport { MASEmptyState, MASLoading } from '@app/common';\nimport './MASGenerateCredentialsModal.css';\n\ntype MASGenerateCredentialsModalProps = {\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  credential: any | undefined;\n  setCredential: (credential: any) => void;\n  isLoading?: boolean;\n  title?: string;\n};\n\nconst MASGenerateCredentialsModal: FunctionComponent<MASGenerateCredentialsModalProps> = ({\n  isOpen,\n  setIsOpen,\n  credential,\n  setCredential,\n  isLoading,\n  title,\n}: MASGenerateCredentialsModalProps) => {\n  const { t } = useTranslation();\n\n  const [isCreated, setIsCreated] = useState(false);\n  const [confirmationCheckbox, setConfirmationCheckbox] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleClose = () => {\n    setIsOpen(false);\n    setIsCreated(!isCreated);\n    setCredential(undefined);\n    setConfirmationCheckbox(false);\n  };\n\n  const handleChangeCheckbox = (checked: boolean) => {\n    setConfirmationCheckbox(checked);\n  };\n\n  const generateCredentials = (\n    <>\n      <MASEmptyState\n        emptyStateProps={{\n          variant: EmptyStateVariant.large,\n        }}\n        emptyStateIconProps={{\n          icon: KeyIcon,\n        }}\n        titleProps={{\n          title: t('credentials_successfully_generated'),\n          headingLevel: 'h2',\n          size: TitleSizes.lg,\n        }}\n      >\n        <TextContent>\n          <Text component={TextVariants.small} className=\"pf-u-mt-lg\">\n            {t('connect_to_the_kafka_instance_using_this_clientID_and_secret')}\n          </Text>\n        </TextContent>\n        <InputGroup className=\"pf-u-mt-lg\">\n          <InputGroupText className=\"mk--generate-credential__empty-state--input-group\">\n            {t('client_id')}\n          </InputGroupText>\n          <ClipboardCopy\n            isReadOnly\n            className=\"pf-u-w-100\"\n            data-testid=\"modalCredentials-copyClientID\"\n            textAriaLabel={t('client_id')}\n          >\n            {credential?.clientID}\n          </ClipboardCopy>\n        </InputGroup>\n        <InputGroup className=\"pf-u-mt-md\">\n          <InputGroupText className=\"mk--generate-credential__empty-state--input-group\">\n            {t('common.client_secret')}\n          </InputGroupText>\n          <ClipboardCopy\n            isReadOnly\n            className=\"pf-u-w-100\"\n            data-testid=\"modalCredentials-copyClientSecret\"\n            textAriaLabel={t('common.client_secret')}\n          >\n            {credential?.clientSecret}\n          </ClipboardCopy>\n        </InputGroup>\n        <TextContent>\n          <Text component={TextVariants.small} className=\"pf-u-mt-lg\">\n            {t('create_service_account_credentials_warning_message')}\n          </Text>\n        </TextContent>\n        <Bullseye className=\"pf-u-mt-lg\">\n          <Checkbox\n            label={t('client_id_confirmation_checkbox_label')}\n            isChecked={confirmationCheckbox}\n            onChange={handleChangeCheckbox}\n            id=\"check-1\"\n            name=\"check1\"\n          />\n        </Bullseye>\n        <Button\n          variant=\"primary\"\n          isDisabled={!confirmationCheckbox}\n          onClick={handleClose}\n          data-testid=\"modalCredentials-buttonClose\"\n        >\n          {t('close')}\n        </Button>\n      </MASEmptyState>\n    </>\n  );\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={title || t('serviceAccount.create_a_service_account')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      showClose={false}\n    >\n      {isLoading ? <MASLoading /> : generateCredentials}\n    </Modal>\n  );\n};\n\nexport { MASGenerateCredentialsModal };\n","import React from 'react';\nimport {\n  Title,\n  Button,\n  EmptyState as PFEmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  TitleSizes,\n  TitleProps,\n  ButtonProps,\n  EmptyStateIconProps,\n  EmptyStateProps as PFEmptyStateProps,\n  EmptyStateBodyProps,\n  ButtonVariant,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\nimport PlusCircleIcon from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\nimport SpaceShuttleIcon from '@patternfly/react-icons/dist/js/icons/space-shuttle-icon';\nimport LockIcon from '@patternfly/react-icons/dist/js/icons/lock-icon';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\nimport { css } from '@patternfly/react-styles';\nimport './MASEmptyState.css';\n\nexport enum MASEmptyStateVariant {\n  GettingStarted = 'GettingStarted',\n  NoAccess = 'NoAccess',\n  NoResult = 'NoResult',\n  NoItems = 'NoItems',\n  UnexpectedError = 'UnexpectedError',\n  PageNotFound = 'PageNotFound',\n}\n\nexport type MASEmptyStateProps = {\n  titleProps?: Omit<TitleProps, 'children' | 'headingLevel'> & {\n    headingLevel?: string;\n  };\n  emptyStateProps?: Omit<PFEmptyStateProps, 'children' | 'variant'> & {\n    variant?: MASEmptyStateVariant | EmptyStateVariant;\n  };\n  emptyStateIconProps?: EmptyStateIconProps;\n  emptyStateBodyProps?: Omit<EmptyStateBodyProps, 'children'> & {\n    body?: string | React.ReactNode;\n  };\n  buttonProps?: Omit<ButtonProps, 'children'> & {\n    title?: string;\n    onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    'data-testid'?: string;\n  };\n  children?: React.ReactNode;\n};\n\nexport const MASEmptyState: React.FC<MASEmptyStateProps> = ({\n  titleProps,\n  buttonProps,\n  emptyStateIconProps,\n  emptyStateProps,\n  emptyStateBodyProps,\n  children,\n}: MASEmptyStateProps) => {\n  const { variant: buttonVariant = ButtonVariant.primary, onClick, ...restButtonProps } = buttonProps || {};\n  const { title, ...restTitleProps } = titleProps || {};\n  const { body, ...restEmptyStateBodyProps } = emptyStateBodyProps || {};\n  const { variant: masEmptyStateVariant = MASEmptyStateVariant.GettingStarted, className, ...restEmptyStateProps } =\n    emptyStateProps || {};\n\n  const getVariantConfig = () => {\n    let varaintConfig: any = {};\n\n    switch (masEmptyStateVariant) {\n      case MASEmptyStateVariant.GettingStarted:\n        varaintConfig = {\n          variant: EmptyStateVariant.xl,\n          icon: SpaceShuttleIcon,\n          titleSize: TitleSizes['4xl'],\n          headingLevel: 'h1',\n        };\n        break;\n      case MASEmptyStateVariant.NoAccess:\n        varaintConfig = {\n          variant: EmptyStateVariant.large,\n          icon: LockIcon,\n          titleSize: TitleSizes.xl,\n          headingLevel: 'h2',\n        };\n        break;\n      case MASEmptyStateVariant.NoItems:\n        varaintConfig = {\n          variant: EmptyStateVariant.large,\n          icon: PlusCircleIcon,\n          titleSize: TitleSizes.xl,\n          headingLevel: 'h2',\n        };\n        break;\n      case MASEmptyStateVariant.NoResult:\n        varaintConfig = {\n          variant: EmptyStateVariant.large,\n          icon: SearchIcon,\n          titleSize: TitleSizes.lg,\n          headingLevel: 'h2',\n        };\n        break;\n      case MASEmptyStateVariant.UnexpectedError:\n        varaintConfig = {\n          variant: EmptyStateVariant.full,\n          icon: ExclamationCircleIcon,\n          titleSize: TitleSizes.lg,\n          headingLevel: 'h1',\n        };\n        break;\n      case MASEmptyStateVariant.PageNotFound:\n        varaintConfig = {\n          variant: EmptyStateVariant.full,\n          icon: ExclamationTriangleIcon,\n          titleSize: TitleSizes.lg,\n          headingLevel: 'h1',\n        };\n        break;\n      default:\n        varaintConfig = {\n          variant: masEmptyStateVariant || EmptyStateVariant.full,\n          icon: emptyStateIconProps?.icon,\n          titleSize: titleProps?.size,\n          headingLevel: titleProps?.headingLevel,\n        };\n        break;\n    }\n\n    return varaintConfig;\n  };\n\n  const { variant, icon, titleSize, headingLevel } = getVariantConfig();\n\n  return (\n    <>\n      <PFEmptyState\n        variant={variant}\n        className={css('pf-u-pt-2xl pf-u-pt-3xl-on-md', className)}\n        {...restEmptyStateProps}\n      >\n        <EmptyStateIcon icon={icon} {...emptyStateIconProps} />\n        {title && (\n          <Title headingLevel={headingLevel} size={titleSize} {...restTitleProps}>\n            {title}\n          </Title>\n        )}\n        {body && <EmptyStateBody {...restEmptyStateBodyProps}>{body}</EmptyStateBody>}\n        {buttonProps?.title && (\n          <Button variant={buttonVariant} onClick={onClick} {...restButtonProps}>\n            {buttonProps?.title}\n          </Button>\n        )}\n        {children}\n      </PFEmptyState>\n    </>\n  );\n};\n","import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { UnexpectedError } from './UnexpectedError';\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n}\n\nclass MASErrorBoundary extends Component<Props, State> {\n  state: State = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(_: Error): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('error:', error, errorInfo);\n  }\n\n  updateState = (hasError: boolean) => {\n    this.setState({ hasError });\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return <UnexpectedError updateState={this.updateState} />;\n    }\n    return this.props.children;\n  }\n}\n\nexport { MASErrorBoundary };\n","import React from 'react';\nimport { PageSection, PageSectionVariants, PageSectionProps } from '@patternfly/react-core';\nimport LockIcon from '@patternfly/react-icons/dist/js/icons/lock-icon';\nimport { MASEmptyState, MASEmptyStateProps } from '@app/common';\n\nexport type MASFullPageErrorProps = MASEmptyStateProps & {\n  pageSection?: Omit<PageSectionProps, 'children'>;\n};\n\nexport const MASFullPageError: React.FC<MASFullPageErrorProps> = ({\n  pageSection,\n  titleProps,\n  emptyStateProps,\n  emptyStateIconProps,\n  emptyStateBodyProps,\n  buttonProps,\n}: MASFullPageErrorProps) => {\n  const { variant = PageSectionVariants.default, padding, ...restPageSectionProps } = pageSection || {};\n  return (\n    <PageSection variant={variant} {...restPageSectionProps} padding={padding || { default: 'noPadding' }} isFilled>\n      <MASEmptyState\n        titleProps={titleProps}\n        emptyStateProps={emptyStateProps}\n        emptyStateIconProps={{\n          icon: emptyStateIconProps?.icon || LockIcon,\n          ...emptyStateIconProps,\n        }}\n        emptyStateBodyProps={emptyStateBodyProps}\n        buttonProps={buttonProps}\n      />\n    </PageSection>\n  );\n};\n","function accessibleRouteChangeHandler() {\n  return window.setTimeout(() => {\n    const mainContainer = document.getElementById('primary-app-container');\n    if (mainContainer) {\n      mainContainer.focus();\n    }\n  }, 50);\n}\n\ntype KeyValueOptions = {\n  value: string;\n  label: string;\n};\n\nenum InstanceStatus {\n  READY = 'ready',\n  ACCEPTED = 'accepted',\n  PREPARING = 'preparing',\n  PROVISIONING = 'provisioning',\n  FAILED = 'failed',\n  DEPROVISION = 'deprovision',\n}\n\nconst cloudProviderOptions: KeyValueOptions[] = [\n  { value: 'aws', label: 'Amazon Web Services' },\n  // Only aws is supported for now\n  // { value: 'azure', label: 'Microsoft Azure' },\n  // { value: 'baremetal', label: 'Bare Metal' },\n  // { value: 'gcp', label: 'Google Cloud Platform' },\n  // { value: 'libvirt', label: 'Libvirt' },\n  // { value: 'openstack', label: 'OpenStack' },\n  // { value: 'vsphere', label: 'VSphere' },\n];\n\nconst statusOptions: KeyValueOptions[] = [\n  { value: 'ready', label: 'Ready' },\n  { value: 'failed', label: 'Failed' },\n  { value: 'accepted', label: 'Creation pending' },\n  { value: 'provisioning', label: 'Creation in progress' },\n  { value: 'preparing', label: 'Creation in progress' },\n  { value: 'deprovision', label: 'Deletion in progress' },\n];\n\nconst getCloudProviderDisplayName = (value: string) => {\n  return cloudProviderOptions.find((option) => option.value === value)?.label || value;\n};\n\nconst cloudRegionOptions: KeyValueOptions[] = [\n  { value: 'us-east-1', label: 'US East, N. Virginia' },\n\n  // Only us-east is supported for now\n  // { value: 'ap-northeast-1', label: 'Asia Pacific, Tokyo' },\n  // { value: 'ap-northeast-2', label: 'Asia Pacific, Seoul' },\n  // { value: 'ap-south-1', label: 'Asia Pacific, Mumbai' },\n  // { value: 'ap-southeast-1', label: 'Asia Pacific, Singapore' },\n  // { value: 'ap-southeast-2', label: 'Asia Pacific, Sydney' },\n  // { value: 'ca-central-1', label: 'Canada, Central' },\n  // { value: 'eu-central-1', label: 'EU, Frankfurt' },\n  // { value: 'eu-north-1', label: 'EU, Stockholm' },\n  // { value: 'eu-west-1', label: 'EU, Ireland' },\n  // { value: 'eu-west-2', label: 'EU, London' },\n  // { value: 'eu-west-3', label: 'EU, Paris' },\n  // { value: 'me-south-1', label: 'Middle East, Bahrain' },\n  // { value: 'sa-east-1', label: 'South America, São Paulo' },\n  // { value: 'us-east-2', label: 'US East, Ohio' },\n  // { value: 'us-west-1', label: 'US West, N. California' },\n  // { value: 'us-west-2', label: 'US West, Oregon' },\n];\nconst getCloudRegionDisplayName = (value: string) => {\n  return cloudRegionOptions.find((option) => option.value === value)?.label || value;\n};\n\nconst capitalize = (s: string) => {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nconst MAX_INSTANCE_NAME_LENGTH = 32;\nconst MAX_FILTER_LIMIT = 10;\nconst MAX_SERVICE_ACCOUNT_NAME_LENGTH = 50;\nconst MAX_SERVICE_ACCOUNT_DESC_LENGTH = 255;\n\nconst MIN_POLL_INTERVAL = 1000;\nconst MAX_POLL_INTERVAL = 5000;\nconst isValidToken = (accessToken: string | undefined) => {\n  if (accessToken !== undefined && accessToken !== '') {\n    return true;\n  }\n  return false;\n};\n\n// function to get exact number of skeleton count required for the current page\nconst getLoadingRowsCount = (page: number, perPage: number, expectedTotal: number) => {\n  // initiaise loadingRowCount by perPage\n  let loadingRowCount = perPage;\n  /*\n    if number of expected count is greater than 0\n      calculate the loadingRowCount\n    else\n      leave the loadingRowCount to perPage\n   */\n  if (expectedTotal && expectedTotal > 0) {\n    // get total number of pages\n    const totalPage =\n      expectedTotal % perPage !== 0 ? Math.floor(expectedTotal / perPage) + 1 : Math.floor(expectedTotal / perPage);\n    // check whether the current page is the last page\n    if (page === totalPage) {\n      // check whether to total expected count is greater than perPage count\n      if (expectedTotal > perPage) {\n        // assign the calculated skelton rows count to display the exact number of expected loading skelton rows\n        loadingRowCount = expectedTotal % perPage === 0 ? perPage : expectedTotal % perPage;\n      } else {\n        loadingRowCount = expectedTotal;\n      }\n    }\n  }\n  // return the exact number of skeleton expected at the time of loading\n  return loadingRowCount !== 0 ? loadingRowCount : perPage;\n};\n\nconst sortValues = (items: any[] | undefined, key: string, order: string = 'asc') => {\n  const compareValue = (a: any, b: any) => {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n      // property doesn't exist on either object\n      return 0;\n    }\n\n    const varA = typeof a[key] === 'string' ? a[key].toUpperCase() : a[key];\n    const varB = typeof b[key] === 'string' ? b[key].toUpperCase() : b[key];\n\n    let comparison = 0;\n    if (varA > varB) {\n      comparison = 1;\n    } else if (varA < varB) {\n      comparison = -1;\n    }\n    return order === 'desc' ? comparison * -1 : comparison;\n  }\n  return items?.sort(compareValue);\n};\n\nexport {\n  accessibleRouteChangeHandler,\n  cloudProviderOptions,\n  cloudRegionOptions,\n  getCloudProviderDisplayName,\n  getCloudRegionDisplayName,\n  capitalize,\n  statusOptions,\n  InstanceStatus,\n  MAX_INSTANCE_NAME_LENGTH,\n  isValidToken,\n  MAX_FILTER_LIMIT,\n  MIN_POLL_INTERVAL,\n  MAX_POLL_INTERVAL,\n  getLoadingRowsCount,\n  MAX_SERVICE_ACCOUNT_NAME_LENGTH,\n  MAX_SERVICE_ACCOUNT_DESC_LENGTH,\n  sortValues\n};\n"],"sourceRoot":""}