{"version":3,"sources":["webpack://kas-ui/./src/app/hooks/useTimeout.ts","webpack://kas-ui/./src/app/modules/OpenshiftStreams/OpenshiftStreamsFederated.tsx"],"names":["useTimeout","callback","delay","savedCallback","useRef","useEffect","current","setTimeout","clearInterval","onConnectToRoute","getConnectToRoutePath","preCreateInstance","createDialogOpen","tokenEndPointUrl","I18nextProvider","i18n"],"mappings":"gIAEO,SAASA,EAAcC,EAAaC,GACzC,IAAMC,GAAgB,IAAAC,WAEtB,IAAAC,YAAU,WACRF,EAAcG,QAAUL,IACvB,CAACA,KAEJ,IAAAI,YAAU,WAIR,GAAc,OAAVH,EAAgB,CAClB,IAAM,EAAKK,YAJb,WACEJ,EAAcG,YAGcJ,GAC5B,OAAO,WACLM,cAAc,OAIjB,CAACP,EAAUC,M,8HCUhB,QAtBkF,SAAC,G,IACjFO,EAAgB,mBAChBC,EAAqB,wBACrBC,EAAiB,oBACjBC,EAAgB,mBAChBC,EAAgB,mBAEhB,OACE,kBAAC,EAAAC,gBAAe,CAACC,MAAM,UACrB,kBAAC,KAAS,KACR,kBAAC,IAAgB,CACfN,iBAAkBA,EAClBC,sBAAuBA,EACvBC,kBAAmBA,EACnBC,iBAAkBA,EAClBC,iBAAkBA","file":"292.0b318444.js","sourcesContent":["import { useEffect, useRef } from 'react';\n\nexport function useTimeout<T>(callback: T, delay: number): void {\n  const savedCallback = useRef<any>();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setTimeout(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n    return;\n  }, [callback, delay]);\n}\n","import React from 'react';\nimport { OpenshiftStreams, OpenShiftStreamsProps } from '@app/modules/OpenshiftStreams/OpenshiftStreams';\nimport { RootModal } from '@app/common';\nimport { initI18N } from '@i18n/i18n';\nimport { I18nextProvider } from 'react-i18next';\n\n// Version of OpenshiftStreams for federation\n\nconst OpenshiftStreamsFederated: React.FunctionComponent<OpenShiftStreamsProps> = ({\n  onConnectToRoute,\n  getConnectToRoutePath,\n  preCreateInstance,\n  createDialogOpen,\n  tokenEndPointUrl,\n}) => {\n  return (\n    <I18nextProvider i18n={initI18N()}>\n      <RootModal>\n        <OpenshiftStreams\n          onConnectToRoute={onConnectToRoute}\n          getConnectToRoutePath={getConnectToRoutePath}\n          preCreateInstance={preCreateInstance}\n          createDialogOpen={createDialogOpen}\n          tokenEndPointUrl={tokenEndPointUrl}\n        />\n      </RootModal>\n    </I18nextProvider>\n  );\n};\n\nexport default OpenshiftStreamsFederated;\n"],"sourceRoot":""}