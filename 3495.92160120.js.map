{"version":3,"file":"3495.92160120.js","mappings":"wLAgBO,MAAMA,EAAwC,EACnDC,iBACAC,iBACAC,mBACAC,aACAC,qBAEA,MAAM,UAAEC,IAAc,IAAAC,aAKhB,YAAEC,IAAgB,IAAAC,gBAAiB,CAAC,EACpCC,EAAWF,GAAeA,IAEhC,OACE,SAAC,EAAAG,qBAAoB,CACnBT,eAAgBA,EAChBD,eAAgBA,EAChBE,iBAAkBA,EAClBS,qBAAsB,mBACtBC,gBAAiB,GAAGH,KAAYN,SAChCU,YAAaT,EACbU,8BAdoC,KACtCT,EAAU,EAAAU,UAAA,wBAAmC,CAAC,EAAE,EAc9CC,qBACE,wDAGL,EAGH,G","sources":["webpack://kas-ui/./src/app/modules/InstanceDrawer/ConnectionTab.tsx"],"sourcesContent":["import { FC } from \"react\";\nimport {\n  useBasename,\n  ModalType,\n  useModal,\n} from \"@rhoas/app-services-ui-shared\";\nimport { KafkaConnectionTabP1 } from \"@rhoas/app-services-ui-components\";\n\nexport type ConnectionTabProps = {\n  externalServer?: string;\n  isKafkaPending?: boolean;\n  tokenEndPointUrl: string;\n  instanceId: string | undefined;\n  adminServerUrl: string | undefined;\n};\n\nexport const ConnectionTab: FC<ConnectionTabProps> = ({\n  externalServer,\n  isKafkaPending,\n  tokenEndPointUrl,\n  instanceId,\n  adminServerUrl,\n}: ConnectionTabProps) => {\n  const { showModal } = useModal<ModalType.KasCreateServiceAccount>();\n\n  const handleCreateServiceAccountModal = () => {\n    showModal(ModalType.KasCreateServiceAccount, {});\n  };\n  const { getBasename } = useBasename() || {};\n  const basename = getBasename && getBasename();\n\n  return (\n    <KafkaConnectionTabP1\n      isKafkaPending={isKafkaPending}\n      externalServer={externalServer}\n      tokenEndPointUrl={tokenEndPointUrl}\n      linkToServiceAccount={\"service-accounts\"}\n      linkToAccessTab={`${basename}/${instanceId}/acls`}\n      adminAPIUrl={adminServerUrl}\n      showCreateServiceAccountModal={handleCreateServiceAccountModal}\n      kafkaFleetManagerUrl={\n        \"https://api.openshift.com/api/kafkas_mgmt/v1/openapi\"\n      }\n    />\n  );\n};\n\nexport default ConnectionTab;\n"],"names":["ConnectionTab","externalServer","isKafkaPending","tokenEndPointUrl","instanceId","adminServerUrl","showModal","useModal","getBasename","useBasename","basename","KafkaConnectionTabP1","linkToServiceAccount","linkToAccessTab","adminAPIUrl","showCreateServiceAccountModal","ModalType","kafkaFleetManagerUrl"],"sourceRoot":""}