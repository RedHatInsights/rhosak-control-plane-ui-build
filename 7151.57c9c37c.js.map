{"version":3,"file":"7151.57c9c37c.js","mappings":"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","sources":["webpack://kas-ui/./node_modules/@patternfly/react-icons/dist/js/icons/check-circle-icon.js","webpack://kas-ui/./node_modules/@patternfly/react-icons/dist/js/icons/filter-icon.js","webpack://kas-ui/./node_modules/@patternfly/react-icons/dist/js/icons/pending-icon.js","webpack://kas-ui/./node_modules/date-fns/esm/add/index.js","webpack://kas-ui/./node_modules/date-fns/esm/addDays/index.js","webpack://kas-ui/./node_modules/date-fns/esm/addMonths/index.js","webpack://kas-ui/./src/app/contexts/federated.ts","webpack://kas-ui/./src/app/modules/InstanceDrawer/contexts/InstanceDrawerContext.tsx","webpack://kas-ui/./src/app/modules/OpenshiftStreams/OpenshiftStreamsFederated.tsx"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.CheckCircleIconConfig = {\n  name: 'CheckCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CheckCircleIcon = require('../createIcon').createIcon(exports.CheckCircleIconConfig);\nexports[\"default\"] = exports.CheckCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.FilterIconConfig = {\n  name: 'FilterIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.FilterIcon = require('../createIcon').createIcon(exports.FilterIconConfig);\nexports[\"default\"] = exports.FilterIcon;","\"use strict\"\nexports.__esModule = true;\nexports.PendingIconConfig = {\n  name: 'PendingIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M512.1,895.9 C300.3,895.9 128.1,723.8 128.1,511.9 C128.1,300.2 300.3,127.9 512.1,127.9 C723.8,127.9 896,300.2 896.1,511.9 C896.1,723.7 723.8,895.9 512.1,895.9 M512.1,0 C229.7,0 0,229.7 0,512 C0,794.3 229.7,1024 512.1,1024 C794.3,1024 1024,794.3 1024,512 C1024,229.7 794.3,0 512.1,0 M704,288 L704,272 C704,263.2 696.8,256 688,256 L336,256 C327.2,256 320,263.2 320,272 L320,288 C320,447 480,449 480,512 C480,575 320,575 320,736 L320,752 C320,760.8 327.2,768 336,768 L688,768 C696.8,768 704,760.8 704,752 L704,736 C704,576 544,577 544,512 C544,447 704,448 704,288 M603.9,704 L420.3,704 C417.3,704 418.2,695 419.4,686.8 C426.8,634.5 480.1,617.4 495.2,612.3 C512.3,606.6 512.3,606.6 528.9,612.3 C544,617.6 597.6,635.4 604.8,687 C605.9,695.2 606.9,704 603.9,704',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PendingIcon = require('../createIcon').createIcon(exports.PendingIconConfig);\nexports[\"default\"] = exports.PendingIcon;","import addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added        |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0; // Add years and months\n\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date; // Add weeks and days\n\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds\n\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import { createContext, useContext } from \"react\";\nimport { Principal } from \"@rhoas/app-services-ui-shared\";\n\nexport type FederatedProps = {\n  preCreateInstance?: (isOpen: boolean) => Promise<boolean>;\n  shouldOpenCreateModal: () => Promise<boolean>;\n  getAllUserAccounts?: () => Principal[];\n};\n\nexport const FederatedContext = createContext<FederatedProps | undefined>(\n  undefined\n);\nexport const useFederated = (): FederatedProps | undefined =>\n  useContext(FederatedContext);\n","import { FunctionComponent, createContext, useContext } from \"react\";\nimport { InstanceDrawerTab } from \"@app/modules/InstanceDrawer/tabs\";\nimport { KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport { SupportedKafkaSize } from \"@rhoas/kafka-management-sdk/dist/generated/model/supported-kafka-size\";\n\nexport type InstanceDrawerContextProps = {\n  isDrawerOpen: boolean;\n  drawerInstance:\n    | Required<KafkaRequest & { size: Required<SupportedKafkaSize> }>\n    | undefined;\n  setDrawerInstance: (id: string) => void;\n  drawerActiveTab: InstanceDrawerTab | undefined;\n  setDrawerActiveTab: (tab: InstanceDrawerTab) => void;\n  openDrawer: (tab?: InstanceDrawerTab) => void;\n  closeDrawer: () => void;\n  tokenEndPointUrl: string;\n};\n\nexport const InstanceDrawerContext = createContext<\n  InstanceDrawerContextProps | undefined\n>(undefined);\n\nexport const useInstanceDrawer = (): InstanceDrawerContextProps => {\n  const answer = useContext(InstanceDrawerContext);\n  if (answer === undefined) {\n    throw new Error(\"must be used inside a InstanceDrawerContext provider\");\n  }\n  return answer;\n};\n\nexport const InstanceDrawerContextProvider: FunctionComponent<\n  InstanceDrawerContextProps\n> = ({ children, ...props }) => {\n  return (\n    <InstanceDrawerContext.Provider value={props}>\n      {children}\n    </InstanceDrawerContext.Provider>\n  );\n};\n","import { FunctionComponent } from \"react\";\nimport { PaginationProvider } from \"@app/common\";\nimport { FederatedContext, FederatedProps } from \"@app/contexts\";\nimport { ModalProvider } from \"@rhoas/app-services-ui-components\";\nimport { KasModalLoader } from \"@app/modals\";\nimport { KasLayout } from \"@app/modules/OpenshiftStreams/components\";\nimport {\n  StreamsTableConnected,\n  StreamsTableProps,\n} from \"@app/modules/OpenshiftStreams/components/StreamsTableConnected\";\nimport { InstanceDrawer } from \"@app/modules/InstanceDrawer\";\nimport {\n  InstanceDrawerContextProps,\n  InstanceDrawerContextProvider,\n} from \"@app/modules/InstanceDrawer/contexts/InstanceDrawerContext\";\n// Version of OpenshiftStreams for federation\ntype OpenshiftStreamsFederatedProps = StreamsTableProps &\n  InstanceDrawerContextProps &\n  FederatedProps;\n\nconst OpenshiftStreamsFederated: FunctionComponent<\n  OpenshiftStreamsFederatedProps\n> = ({\n  preCreateInstance,\n  shouldOpenCreateModal,\n  getAllUserAccounts,\n  ...drawerProps\n}) => {\n  return (\n    <FederatedContext.Provider\n      value={{\n        preCreateInstance,\n        shouldOpenCreateModal,\n        getAllUserAccounts,\n      }}\n    >\n      <ModalProvider>\n        <PaginationProvider>\n          <InstanceDrawerContextProvider {...drawerProps}>\n            <InstanceDrawer\n              data-ouia-app-id=\"dataPlane-streams\"\n              {...drawerProps}\n            >\n              <KasLayout data-ouia-app-id={\"TODO\"}>\n                <StreamsTableConnected preCreateInstance={preCreateInstance} />\n              </KasLayout>\n            </InstanceDrawer>\n          </InstanceDrawerContextProvider>\n        </PaginationProvider>\n        <KasModalLoader />\n      </ModalProvider>\n    </FederatedContext.Provider>\n  );\n};\n\nexport default OpenshiftStreamsFederated;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","add","dirtyDate","duration","arguments","Date","NaN","years","months","weeks","days","hours","minutes","seconds","date","dateWithMonths","dateWithDays","minutesToAdd","secondsToAdd","msToAdd","finalDate","getTime","addDays","dirtyAmount","amount","isNaN","setDate","getDate","addMonths","dayOfMonth","endOfDesiredMonth","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","FederatedContext","createContext","undefined","useFederated","useContext","InstanceDrawerContext","useInstanceDrawer","answer","Error","InstanceDrawerContextProvider","children","props","Provider","value","preCreateInstance","shouldOpenCreateModal","getAllUserAccounts","drawerProps","ModalProvider","InstanceDrawer","StreamsTableConnected"],"sourceRoot":""}