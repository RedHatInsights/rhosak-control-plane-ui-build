{"version":3,"file":"5934.1155fe7d.js","mappings":"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","sources":["webpack://kas-ui/./src/app/common/MASPageNotFound/MASPageNotFound.tsx","webpack://kas-ui/./src/app/common/MASAlerts/MASAlerts.tsx","webpack://kas-ui/./src/app/common/MASAlerts/MASAlertToastGroup.tsx","webpack://kas-ui/./src/app/common/MASErrorBoundary/MASErrorBoundary.tsx","webpack://kas-ui/./src/app/common/MASLoading/MASLoading.tsx","webpack://kas-ui/./src/app/contexts/federated.ts","webpack://kas-ui/./src/app/utils/useDocumentTitle.ts","webpack://kas-ui/./src/app/modules/ServiceAccounts/ServiceAccounts.tsx","webpack://kas-ui/./src/app/routes.tsx","webpack://kas-ui/./src/app/modules/OpenshiftStreams/OpenshiftStreamsStandalone.tsx","webpack://kas-ui/./src/app/modules/ServiceAccounts/ServiceAccountsConnected.tsx","webpack://kas-ui/./src/app/bgimages/Patternfly-Logo.svg","webpack://kas-ui/./src/app/auth/keycloak/keycloakAuth.ts","webpack://kas-ui/./src/app/index.tsx","webpack://kas-ui/./src/app/auth/keycloak/KeycloakContext.tsx","webpack://kas-ui/./src/app/AppLayout/AppLayout.tsx","webpack://kas-ui/./src/bootstrap.tsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PageSection, Button } from '@patternfly/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { MASEmptyState, MASEmptyStateVariant } from '@app/common';\n\nconst MASPageNotFound: React.FunctionComponent = () => {\n  const { t } = useTranslation(['kasTemporaryFixMe']);\n\n  function GoHomeBtn() {\n    const history = useHistory();\n    function handleClick() {\n      history.push('/');\n    }\n    return <Button onClick={handleClick}>{t('return_to_home_page')}</Button>;\n  }\n\n  return (\n    <PageSection padding={{ default: 'noPadding' }} isFilled>\n      <MASEmptyState\n        emptyStateProps={{ variant: MASEmptyStateVariant.PageNotFound }}\n        titleProps={{ title: t('404_page_does_not_exist') }}\n        emptyStateBodyProps={{\n          body: t('we_cannot_find_the_page_you_are_looking_for'),\n        }}\n      >\n        <GoHomeBtn />\n      </MASEmptyState>\n    </PageSection>\n  );\n};\n\nexport { MASPageNotFound };\n","import React, { useEffect, useState } from 'react';\nimport { MASAlertToastGroup } from '@app/common';\nimport { AlertContext, AlertProps } from '@rhoas/app-services-ui-shared';\n\ntype TimeOut = {\n  key: string | undefined;\n  timeOut: ReturnType<typeof setTimeout> | undefined;\n};\n\nexport const AlertProvider: React.FunctionComponent = ({ children }) => {\n  const [alerts, setAlerts] = useState<AlertProps[]>([]);\n  const [timers, setTimers] = useState<TimeOut[]>([]);\n\n  useEffect(() => {\n    const timersKeys = timers.map((timer) => timer.key);\n    const timeOuts = alerts\n      .filter((alert) => !timersKeys.includes(alert?.id))\n      .map((alert) => {\n        const { id = '' } = alert;\n        const timeOut: ReturnType<typeof setTimeout> = setTimeout(\n          () => hideAlert(id),\n          8000\n        );\n        return { key: alert.id, timeOut } as TimeOut;\n      });\n    setTimers([...timers, ...timeOuts]);\n    return () =>\n      timers.forEach((timer) => timer?.timeOut && clearTimeout(timer.timeOut));\n  }, [alerts]);\n\n  const createId = () => new Date().getTime();\n\n  const hideAlert = (key: string | undefined) => {\n    setAlerts((alerts) => [...alerts.filter((el) => el.id !== key)]);\n    setTimers((timers) => [...timers.filter((timer) => timer.key === key)]);\n  };\n\n  const addAlert = (props: AlertProps) => {\n    const id = createId().toString();\n    setAlerts([...alerts, { ...props, id }]);\n  };\n\n  return (\n    <AlertContext.Provider value={{ addAlert }}>\n      <MASAlertToastGroup alerts={alerts} onCloseAlert={hideAlert} />\n      {children}\n    </AlertContext.Provider>\n  );\n};\n","import React from 'react';\nimport { AlertProps } from '@rhoas/app-services-ui-shared';\nimport {\n  AlertGroup,\n  Alert,\n  AlertActionCloseButton,\n  AlertVariant,\n} from '@patternfly/react-core';\n\ntype AlertToastGroupProps = {\n  alerts: AlertProps[];\n  onCloseAlert: (key: string | undefined) => void;\n};\n\nexport const MASAlertToastGroup: React.FunctionComponent<AlertToastGroupProps> =\n  ({ alerts, onCloseAlert }: AlertToastGroupProps) => {\n    return (\n      <AlertGroup isToast>\n        {alerts.map(\n          ({ id, variant, title, description, dataTestId, ...rest }) => (\n            <Alert\n              key={id}\n              isLiveRegion\n              variant={AlertVariant[variant]}\n              variantLabel=''\n              title={title}\n              actionClose={\n                <AlertActionCloseButton\n                  title={title}\n                  onClose={() => onCloseAlert(id)}\n                />\n              }\n              data-testid={dataTestId}\n              {...rest}\n            >\n              {description}\n            </Alert>\n          )\n        )}\n      </AlertGroup>\n    );\n  };\n","import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport { PageSection, Button } from '@patternfly/react-core';\nimport { MASEmptyState, MASEmptyStateVariant } from '@app/common';\nimport './MASErrorBoundary.css';\n\ntype Props = WithTranslation &\n  RouteComponentProps & {\n    children?: ReactNode;\n  };\n\ntype State = {\n  hasError?: boolean;\n};\n\nclass MASErrorBoundary extends Component<Props, State> {\n  state: State = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(_: Error): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('error:', error, errorInfo);\n  }\n\n  onClickButton = () => {\n    const { history } = this.props;\n    this.setState({ hasError: false });\n    history && history.push('/');\n  };\n\n  render() {\n    const { t } = this.props;\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return (\n        <PageSection padding={{ default: 'noPadding' }} isFilled>\n          <MASEmptyState\n            emptyStateProps={{\n              variant: MASEmptyStateVariant.UnexpectedError,\n            }}\n            emptyStateIconProps={{\n              className: 'icon-color',\n            }}\n            titleProps={{\n              title: t('common.something_went_wrong'),\n            }}\n            emptyStateBodyProps={{\n              body: t('unexpected_error'),\n            }}\n          >\n            <Button onClick={this.onClickButton}>\n              {t('go_to_kafka_instances')}\n            </Button>\n          </MASEmptyState>\n        </PageSection>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nconst MASErrorBoundaryComponent = withRouter(\n  withTranslation()(MASErrorBoundary)\n);\nexport { MASErrorBoundaryComponent as MASErrorBoundary };\n","import React from 'react';\nimport {\n  Bullseye,\n  BullseyeProps,\n  Spinner,\n  SpinnerProps,\n} from '@patternfly/react-core';\n\nexport type MASLoadingProps = {\n  bullseyeProps?: Omit<BullseyeProps, 'children'>;\n  spinnerProps?: SpinnerProps;\n};\n\nexport const MASLoading: React.FunctionComponent<MASLoadingProps> = ({\n  bullseyeProps,\n  spinnerProps,\n}: MASLoadingProps) => (\n  <Bullseye {...bullseyeProps}>\n    <Spinner {...spinnerProps} />\n  </Bullseye>\n);\n","import React, { useContext } from 'react';\nimport { KafkaRequest } from '@rhoas/kafka-management-sdk';\nimport { Principal } from '@rhoas/app-services-ui-shared';\n\nexport type FederatedProps = {\n  tokenEndPointUrl: string;\n  preCreateInstance?: (isOpen: boolean) => Promise<boolean>;\n  shouldOpenCreateModal: () => Promise<boolean>;\n  setKafkaInstance?: (kafka: KafkaRequest) => void;\n  getAllUserAccounts?: () => Principal[];\n};\n\nexport const FederatedContext = React.createContext<FederatedProps | undefined>(\n  undefined\n);\nexport const useFederated = (): FederatedProps | undefined =>\n  useContext(FederatedContext);\n","import * as React from 'react';\n\n// a custom hook for setting the page title\nexport function useDocumentTitle(title: string): void {\n  React.useEffect(() => {\n    const originalTitle = document.title;\n    document.title = title;\n\n    return () => {\n      document.title = originalTitle;\n    };\n  }, [title]);\n}\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from '@patternfly/react-core';\nimport { ServiceAccountsTableConnected } from '@app/modules/ServiceAccounts/components/ServiceAccountsTableConnected';\nimport '@app/modules/styles.css';\n\nconst ServiceAccounts: React.FC = () => {\n  const { t } = useTranslation(['kasTemporaryFixMe']);\n  return (\n    <>\n      <PageSection\n        variant={PageSectionVariants.light}\n        className='pf-m-padding-on-xl'\n        padding={{ default: 'noPadding' }}\n      >\n        <TextContent>\n          <Text component='h1'> {t('serviceAccount.service_accounts')}</Text>\n          <Text component='p'>\n            {t('serviceAccount.service_accounts_title_header_info')}\n          </Text>\n        </TextContent>\n      </PageSection>\n      <ServiceAccountsTableConnected />\n    </>\n  );\n};\n\nexport { ServiceAccounts };\n","import * as React from 'react';\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { accessibleRouteChangeHandler } from '@app/utils/utils';\nimport { MASPageNotFound } from '@app/common/MASPageNotFound/MASPageNotFound';\nimport { useDocumentTitle } from '@app/utils/useDocumentTitle';\n// import {\n//   LastLocationProvider,\n//   useLastLocation,\n// } from 'react-router-last-location';\nimport { OpenshiftStreamsStandalone } from '@app/modules/OpenshiftStreams';\nimport { ServiceAccountsConnected } from '@app/modules/ServiceAccounts';\n\nlet routeFocusTimer: number;\n\nexport interface IAppRoute {\n  label?: string; // Excluding the label will exclude the route from the nav sidebar in AppLayout\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n  exact?: boolean;\n  path: string;\n  title: string;\n  isAsync?: boolean;\n  routes?: undefined;\n}\n\nexport interface IAppRouteGroup {\n  label: string;\n  routes: IAppRoute[];\n}\n\nexport type AppRouteConfig = IAppRoute | IAppRouteGroup;\n\nconst routes: AppRouteConfig[] = [\n  {\n    component: OpenshiftStreamsStandalone,\n    exact: true,\n    // t('kafka_instances')\n    label: 'Kafka Instances',\n    path: '/',\n    title: 'Kafka Instances',\n  },\n  {\n    component: ServiceAccountsConnected,\n    exact: true,\n    label: 'Service Accounts',\n    path: '/service-accounts',\n    title: 'Service Accounts',\n  },\n];\n\n// a custom hook for sending focus to the primary content container\n// after a view has loaded so that subsequent press of tab key\n// sends focus directly to relevant content\n\n// TODO: restore when react-router-last-location officially supports react 17\n\n// const useA11yRouteChange = (isAsync: boolean) => {\n//   const lastNavigation = useLastLocation();\n//   React.useEffect(() => {\n//     if (!isAsync && lastNavigation !== null) {\n//       routeFocusTimer = accessibleRouteChangeHandler();\n//     }\n//     return () => {\n//       window.clearTimeout(routeFocusTimer);\n//     };\n//   }, [isAsync, lastNavigation]);\n// };\n\nconst RouteWithTitleUpdates = ({\n  component: Component,\n  // isAsync = false,\n  title,\n  ...rest\n}: IAppRoute) => {\n  // useA11yRouteChange(isAsync);\n  useDocumentTitle(title);\n\n  function routeWithTitle(routeProps: RouteComponentProps) {\n    return <Component {...rest} {...routeProps} />;\n  }\n\n  return <Route render={routeWithTitle} />;\n};\n\nconst PageNotFound = ({ title }: { title: string }) => {\n  useDocumentTitle(title);\n  return <Route component={MASPageNotFound} />;\n};\n\nconst flattenedRoutes: IAppRoute[] = routes.reduce(\n  (flattened, route) => [\n    ...flattened,\n    ...(route.routes ? route.routes : [route]),\n  ],\n  [] as IAppRoute[]\n);\n\nconst AppRoutes = (): React.ReactElement => {\n  const { t } = useTranslation(['kasTemporaryFixMe']);\n  return (\n    // <LastLocationProvider>\n    <Switch>\n      {flattenedRoutes.map(\n        ({ path, exact, component, title, isAsync }, idx) => (\n          <RouteWithTitleUpdates\n            path={path}\n            exact={exact}\n            component={component}\n            key={idx}\n            title={title}\n            isAsync={isAsync}\n          />\n        )\n      )}\n      <PageNotFound title={t('404_page_does_not_exist')} />\n    </Switch>\n    // </LastLocationProvider>\n  );\n};\n\nexport { AppRoutes, routes };\n","import React from 'react';\nimport { ModalProvider } from '@rhoas/app-services-ui-components';\nimport { KasModalLoader } from '@app/modals';\nimport { InstanceDrawerContextProvider } from '@app/modules/InstanceDrawer/contexts/InstanceDrawerContext';\nimport { KasLayout } from '@app/modules/OpenshiftStreams/components';\nimport { StreamsTableConnected } from '@app/modules/OpenshiftStreams/components/StreamsTableConnected';\n\nexport const OpenshiftStreamsStandalone: React.FunctionComponent = () => {\n  return (\n    <ModalProvider>\n      <InstanceDrawerContextProvider>\n        <KasLayout tokenEndPointUrl='fake-token-url'>\n          <StreamsTableConnected\n            preCreateInstance={(open) => Promise.resolve(open)}\n          />\n        </KasLayout>\n        <KasModalLoader />\n      </InstanceDrawerContextProvider>\n    </ModalProvider>\n  );\n};\n","import React from 'react';\nimport { ServiceAccounts } from './ServiceAccounts';\n\nexport const ServiceAccountsConnected: React.FunctionComponent = () => {\n  return <ServiceAccounts />;\n};\n","export default __webpack_public_path__ + \"f940137c.svg\";","import Keycloak, { KeycloakInstance, KeycloakTokenParsed } from 'keycloak-js';\n\nexport let keycloak: KeycloakInstance | undefined;\n\n/**\n * Get keycloak instance\n *\n * @return an initiated keycloak instance or `undefined`\n * if keycloak isn't configured\n *\n */\nexport const getKeycloakInstance = async (): Promise<\n  KeycloakInstance | undefined\n> => {\n  if (!keycloak) await init();\n  return keycloak;\n};\n\n/**\n * Initiate keycloak instance.\n *\n * Set keycloak to undefined if\n * keycloak isn't configured\n *\n */\nexport const init = async (): Promise<void> => {\n  try {\n    keycloak = Keycloak();\n    if (keycloak) {\n      await keycloak.init({\n        onLoad: 'login-required',\n      });\n    }\n  } catch {\n    keycloak = undefined;\n    console.warn(\n      'Auth: Unable to initialize keycloak. Client side will not be configured to use authentication'\n    );\n  }\n};\n\n/**\n * Use keycloak update token function to retrieve\n * keycloak token\n *\n * @return keycloak token or empty string if keycloak\n * isn't configured\n *\n */\nexport const getKeyCloakToken = async (): Promise<string> => {\n  await keycloak?.updateToken(50);\n  if (keycloak?.token) return keycloak.token;\n  console.error('No keycloak token available');\n  return 'foo';\n};\n\n/**\n * Use keycloak update token function to retrieve\n * keycloak token\n *\n * @return keycloak token or empty string if keycloak\n * isn't configured\n *\n */\nexport const getParsedKeyCloakToken =\n  async (): Promise<KeycloakTokenParsed> => {\n    await keycloak?.updateToken(50);\n    if (keycloak?.tokenParsed) return keycloak.tokenParsed;\n    console.error('No keycloak token available');\n    return {} as KeycloakTokenParsed;\n  };\n\n/**\n * logout of keycloak, clear cache and offline store then redirect to\n * keycloak login page\n *\n * @param keycloak the keycloak instance\n * @param client offix client\n *\n */\nexport const logout = async (\n  keycloak: Keycloak.KeycloakInstance | undefined\n): Promise<void> => {\n  if (keycloak) {\n    await keycloak.logout();\n  }\n};\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {\n  BasenameContext,\n  Config,\n  ConfigContext,\n} from '@rhoas/app-services-ui-shared';\nimport '@patternfly/patternfly/patternfly.css';\nimport '@patternfly/patternfly/utilities/Accessibility/accessibility.css';\nimport '@patternfly/patternfly/utilities/Sizing/sizing.css';\nimport '@patternfly/patternfly/utilities/Spacing/spacing.css';\nimport '@patternfly/patternfly/utilities/Display/display.css';\nimport '@patternfly/patternfly/utilities/Flex/flex.css';\nimport { AppLayout } from '@app/AppLayout/AppLayout';\nimport { AppRoutes } from '@app/routes';\nimport '@app/app.css';\nimport { getKeycloakInstance } from './auth/keycloak/keycloakAuth';\nimport { MASLoading } from '@app/common';\nimport {\n  KeycloakAuthProvider,\n  KeycloakContext,\n} from '@app/auth/keycloak/KeycloakContext';\nimport {\n  MASErrorBoundary,\n  PaginationProvider,\n  AlertProvider,\n} from '@app/common';\nimport { I18nProvider, ModalProvider } from '@rhoas/app-services-ui-components';\nimport { KasModalLoader } from '@app/modals';\n\nlet keycloak: Keycloak.KeycloakInstance | undefined;\ndeclare const __BASE_PATH__: string;\n\nconst App: React.FunctionComponent = () => {\n  const [initialized, setInitialized] = React.useState(false);\n\n  // Initialize the client\n  React.useEffect(() => {\n    const init = async () => {\n      keycloak = await getKeycloakInstance();\n      setInitialized(true);\n    };\n    init();\n  }, []);\n\n  if (!initialized) return <MASLoading />;\n\n  return (\n    <BasenameContext.Provider value={{ getBasename: () => '' }}>\n      <ConfigContext.Provider\n        value={\n          {\n            kas: {\n              apiBasePath: __BASE_PATH__,\n            },\n            ams: {\n              apiBasePath: __BASE_PATH__,\n            },\n          } as Config\n        }\n      >\n        <I18nProvider\n          lng='en'\n          resources={{\n            en: {\n              common: () =>\n                import(\n                  '@rhoas/app-services-ui-components/locales/en/common.json'\n                ),\n              'create-kafka-instance': () =>\n                import(\n                  '@rhoas/app-services-ui-components/locales/en/create-kafka-instance.json'\n                ),\n              kafka: () =>\n                import(\n                  '@rhoas/app-services-ui-components/locales/en/kafka.json'\n                ),\n              metrics: () =>\n                import(\n                  '@rhoas/app-services-ui-components/locales/en/metrics.json'\n                ),\n              kasTemporaryFixMe: () =>\n                import('./kas-ui-dont-modify-temporay.json'),\n            },\n          }}\n          debug={true}\n        >\n          {' '}\n          <KeycloakContext.Provider\n            value={{ keycloak, profile: keycloak?.profile }}\n          >\n            <KeycloakAuthProvider>\n              <AlertProvider>\n                <Router>\n                  <React.Suspense fallback={<MASLoading />}>\n                    <MASErrorBoundary>\n                      <PaginationProvider>\n                        <ModalProvider>\n                          <AppLayout>\n                            <AppRoutes />\n                          </AppLayout>\n                          <KasModalLoader />\n                        </ModalProvider>\n                      </PaginationProvider>\n                    </MASErrorBoundary>\n                  </React.Suspense>\n                </Router>\n              </AlertProvider>\n            </KeycloakAuthProvider>\n          </KeycloakContext.Provider>\n        </I18nProvider>\n      </ConfigContext.Provider>\n    </BasenameContext.Provider>\n  );\n};\nexport { App };\n","import React from 'react';\nimport { KeycloakInstance, KeycloakProfile } from 'keycloak-js';\nimport {\n  getKeyCloakToken,\n  getParsedKeyCloakToken,\n} from '@app/auth/keycloak/keycloakAuth';\nimport { Auth, AuthContext } from '@rhoas/app-services-ui-shared';\n\n// This is a context which can manage the keycloak\nexport interface IKeycloakContext {\n  keycloak?: KeycloakInstance | undefined;\n  profile?: KeycloakProfile | undefined;\n}\n\nexport const KeycloakContext = React.createContext<IKeycloakContext>({\n  keycloak: undefined,\n});\n\nexport const KeycloakAuthProvider: React.FunctionComponent = (props) => {\n  const getUsername = () => {\n    return getParsedKeyCloakToken().then((token) => token['username']);\n  };\n\n  const isOrgAdmin = () => {\n    return getParsedKeyCloakToken().then((token) => token['is_org_admin']);\n  };\n\n  const authTokenContext = {\n    kas: {\n      getToken: getKeyCloakToken,\n    },\n    getUsername,\n    isOrgAdmin,\n  } as Auth;\n  return (\n    <AuthContext.Provider value={authTokenContext}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n","import * as React from 'react';\nimport { NavLink, useLocation, useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Nav,\n  NavList,\n  NavItem,\n  NavExpandable,\n  Page,\n  PageHeader,\n  PageSidebar,\n  SkipToContent,\n  PageHeaderTools,\n} from '@patternfly/react-core';\nimport { routes, IAppRoute, IAppRouteGroup } from '@app/routes';\nimport logo from '@app/bgimages/Patternfly-Logo.svg';\nimport { KeycloakContext } from '@app/auth/keycloak/KeycloakContext';\n\nconst AppLayout: React.FunctionComponent = ({ children }) => {\n  const [isNavOpen, setIsNavOpen] = React.useState(true);\n  const [isMobileView, setIsMobileView] = React.useState(true);\n  const [isNavOpenMobile, setIsNavOpenMobile] = React.useState(false);\n\n  const keycloakContext = React.useContext(KeycloakContext);\n\n  const location = useLocation();\n\n  const onNavToggleMobile = () => {\n    setIsNavOpenMobile(!isNavOpenMobile);\n  };\n  const onNavToggle = () => {\n    setIsNavOpen(!isNavOpen);\n  };\n  const onPageResize = (props: { mobileView: boolean; windowSize: number }) => {\n    setIsMobileView(props.mobileView);\n  };\n\n  const { t } = useTranslation(['kasTemporaryFixMe']);\n\n  function LogoImg() {\n    const history = useHistory();\n    function handleClick() {\n      history.push('/');\n    }\n    return <img src={logo} onClick={handleClick} alt='PatternFly Logo' />;\n  }\n\n  if (!keycloakContext.keycloak) {\n    return (\n      // TODO handle this error properly!\n      <div>403 Unauthorized</div>\n    );\n  }\n\n  if (!keycloakContext.keycloak.authenticated) {\n    // force the user to log in\n    keycloakContext.keycloak?.login();\n    return <></>;\n  }\n\n  const email =\n    keycloakContext.keycloak.tokenParsed &&\n    keycloakContext.keycloak.tokenParsed['email'];\n\n  const HeaderTools = <PageHeaderTools>{email}</PageHeaderTools>;\n\n  const Header = (\n    <PageHeader\n      logo={<LogoImg />}\n      showNavToggle\n      isNavOpen={isNavOpen}\n      headerTools={HeaderTools}\n      onNavToggle={isMobileView ? onNavToggleMobile : onNavToggle}\n      aria-label={t('global_navigation')}\n    />\n  );\n\n  const renderNavItem = (route: IAppRoute, index: number) => {\n    return (\n      <NavItem key={`${route.label}-${index}`} id={`${route.label}-${index}`}>\n        <NavLink exact to={route.path} activeClassName='pf-m-current'>\n          {route?.label && t(route.label)}\n        </NavLink>\n      </NavItem>\n    );\n  };\n\n  const renderNavGroup = (group: IAppRouteGroup, groupIndex: number) => (\n    <NavExpandable\n      key={`${group.label}-${groupIndex}`}\n      id={`${group.label}-${groupIndex}`}\n      title={group.label}\n      isActive={group.routes.some((route) => route.path === location.pathname)}\n      // aria-label={t()}\n    >\n      {group.routes.map(\n        (route, idx) => route.label && renderNavItem(route, idx)\n      )}\n    </NavExpandable>\n  );\n\n  const Navigation = (\n    <Nav\n      id='nav-primary-simple'\n      role='navigation'\n      theme='dark'\n      aria-label={t('global')}\n    >\n      <NavList id='nav-list-simple'>\n        {routes.map(\n          (route, idx) =>\n            route.label &&\n            (!route.routes\n              ? renderNavItem(route, idx)\n              : renderNavGroup(route, idx))\n        )}\n      </NavList>\n    </Nav>\n  );\n  const Sidebar = (\n    <PageSidebar\n      theme='dark'\n      nav={Navigation}\n      isNavOpen={isMobileView ? isNavOpenMobile : isNavOpen}\n    />\n  );\n  const PageSkipToContent = (\n    <SkipToContent href='#primary-app-container'>\n      {t('skip_to_content')}\n    </SkipToContent>\n  );\n  return (\n    <Page\n      mainContainerId='primary-app-container'\n      role='main'\n      header={Header}\n      sidebar={Sidebar}\n      onPageResize={onPageResize}\n      skipToContent={PageSkipToContent}\n    >\n      {children}\n    </Page>\n  );\n};\n\nexport { AppLayout };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from '@app/index';\n\nif (process.env.NODE_ENV !== 'production') {\n  const config = {\n    rules: [\n      {\n        id: 'color-contrast',\n        enabled: false,\n      },\n    ],\n  };\n  // eslint-disable-next-line @typescript-eslint/no-var-requires, no-undef\n  const axe = require('react-axe');\n  axe(React, ReactDOM, 1000, config);\n}\n\nReactDOM.render(<App />, document.getElementById('root') as HTMLElement);\n"],"names":["MASPageNotFound","t","useTranslation","PageSection","padding","default","isFilled","emptyStateProps","variant","titleProps","title","emptyStateBodyProps","body","history","useHistory","Button","onClick","push","AlertProvider","children","useState","alerts","setAlerts","timers","setTimers","useEffect","timersKeys","map","timer","key","timeOuts","filter","alert","includes","id","timeOut","setTimeout","hideAlert","forEach","clearTimeout","el","AlertContext","value","addAlert","props","Date","getTime","toString","MASAlertToastGroup","onCloseAlert","AlertGroup","isToast","description","dataTestId","rest","Alert","isLiveRegion","AlertVariant","variantLabel","actionClose","AlertActionCloseButton","onClose","state","hasError","onClickButton","setState","getDerivedStateFromError","_","componentDidCatch","error","errorInfo","console","render","this","MASEmptyState","emptyStateIconProps","className","Component","MASErrorBoundaryComponent","withRouter","withTranslation","MASLoading","bullseyeProps","spinnerProps","Bullseye","Spinner","FederatedContext","undefined","useFederated","useContext","useDocumentTitle","originalTitle","document","PageSectionVariants","TextContent","Text","component","ServiceAccountsTableConnected","routes","ModalProvider","InstanceDrawerContext","tokenEndPointUrl","StreamsTableConnected","preCreateInstance","open","Promise","resolve","exact","label","path","RouteWithTitleUpdates","Route","routeProps","PageNotFound","flattenedRoutes","reduce","flattened","route","AppRoutes","Switch","idx","isAsync","getKeycloakInstance","init","onLoad","warn","getKeyCloakToken","updateToken","token","getParsedKeyCloakToken","tokenParsed","KeycloakContext","keycloak","KeycloakAuthProvider","authTokenContext","kas","getToken","getUsername","then","isOrgAdmin","AuthContext","AppLayout","isNavOpen","setIsNavOpen","isMobileView","setIsMobileView","isNavOpenMobile","setIsNavOpenMobile","keycloakContext","location","useLocation","authenticated","login","email","HeaderTools","PageHeaderTools","Header","PageHeader","logo","src","alt","showNavToggle","headerTools","onNavToggle","renderNavItem","index","NavItem","NavLink","to","activeClassName","Navigation","Nav","role","theme","NavList","group","groupIndex","NavExpandable","isActive","some","pathname","Sidebar","PageSidebar","nav","PageSkipToContent","SkipToContent","href","Page","mainContainerId","header","sidebar","onPageResize","mobileView","skipToContent","initialized","setInitialized","BasenameContext","getBasename","ConfigContext","apiBasePath","__BASE_PATH__","ams","I18nProvider","lng","resources","en","common","kafka","metrics","kasTemporaryFixMe","debug","Provider","profile","fallback","getElementById"],"sourceRoot":""}