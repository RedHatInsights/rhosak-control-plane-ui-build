{"version":3,"file":"3495.e3fdcd27.js","mappings":"iGAEAA,EAAQ,GAAiB,CACvBC,KAAM,WACNC,OAAQ,KACRC,MAAO,KACPC,QAAS,0oCACTC,QAAS,EACTC,QAAS,GAEXN,EAAQ,GAAW,oBAAoCA,EAAQ,IAC/DA,EAAA,GAAqBA,EAAQ,I,iJCiBhBO,EAA8C,SAAC,G,IAC1DC,EAAc,iBACdC,EAAc,iBACdC,EAAgB,mBAChBC,EAAU,aAEFC,GAAM,IAAAC,kBAAgB,EACtBC,GAAc,IAAAC,YAA6C,UAK3DC,IAAgB,IAAAC,gBAAiB,IAAE,YACrCC,EAAWF,GAAeA,IAEhC,OACE,yBAAKG,UAAU,qCACb,kBAAC,EAAAC,YAAW,CAACD,UAAU,cACrB,kBAAC,EAAAE,KAAI,CAACC,UAAW,EAAAC,aAAA,OACdX,EAAE,2CAEL,kBAAC,EAAAS,KAAI,CAACC,UAAW,EAAAC,aAAA,GAAiBJ,UAAU,cACzCP,EAAE,qBAEL,kBAAC,EAAAS,KAAI,CAACC,UAAW,EAAAC,aAAA,OACdX,EAAE,kCAGNH,EACC,kBAAC,EAAAe,SAAQ,CAACC,SAAS,QAEnB,kBAAC,EAAAC,cAAa,eACA,iCACZC,cAAef,EAAE,qBAEhBJ,GAGL,kBAAC,EAAAY,YAAW,CAACD,UAAU,cACrB,kBAAC,EAAAE,KAAI,CAACC,UAAW,EAAAC,aAAA,GAAiBJ,UAAU,cACzCP,EAAE,0CAEL,kBAAC,EAAAS,KAAI,CAACC,UAAW,EAAAC,aAAA,OACdX,EAAE,iEAAkE,IACrE,kBAAC,EAAAgB,KAAI,CAACC,GAAI,mBAAkB,cAAc,0BACvCjB,EAAE,oCACG,IACPA,EAAE,e,MAGP,kBAAC,EAAAkB,OAAM,CACLC,QAAQ,YACRC,QA3CkC,WACtClB,EAAU,EAAAmB,UAAA,wBAAmC,KA0CD,cAC5B,2CACZC,UAAQ,GAEPtB,EAAE,0CAEL,kBAAC,EAAAQ,YAAW,CAACD,UAAU,cACrB,kBAAC,EAAAE,KAAI,CAACC,UAAW,EAAAC,aAAA,OACdX,EAAE,mCAAoC,IACvC,kBAAC,EAAAgB,KAAI,CAACC,GAAI,UAAGX,EAAQ,YAAIP,EAAU,UAChCC,EAAE,8BACG,IACPA,EAAE,8B,MAGP,kBAAC,EAAAQ,YAAW,CAACD,UAAU,cACrB,kBAAC,EAAAE,KAAI,CAACC,UAAW,EAAAC,aAAA,GAAiBJ,UAAU,cACzCP,EAAE,iCAEL,kBAAC,EAAAS,KAAI,CAACC,UAAW,EAAAC,aAAA,GAAiBJ,UAAU,cACzCP,EAAE,2BAA4B,IAC/B,kBAAC,EAAAuB,MAAK,CAACC,MAAM,SAASxB,EAAE,uBACxB,kBAAC,EAAAyB,QAAO,cACMzB,EAAE,2BACd0B,YACE,6BAAM1B,EAAE,qDAGV,kBAAC,EAAAkB,OAAM,CACLC,QAAS,EAAAQ,cAAA,MAAmB,aAChB3B,EAAE,qCAEd,kBAAC,KAAQ,SAIf,kBAAC,EAAAS,KAAI,CAACC,UAAW,EAAAC,aAAA,OACdX,EAAE,gDAEL,kBAAC,EAAAS,KAAI,CAACC,UAAW,EAAAC,aAAA,GAAiBJ,UAAU,cACzCP,EAAE,8BAEJH,EACC,kBAAC,EAAAe,SAAQ,CAACC,SAAS,QAEnB,kBAAC,EAAAC,cAAa,CAACc,YAAU,GAAE9B,IAG/B,kBAAC,EAAAU,YAAW,CAACD,UAAU,cACrB,kBAAC,EAAAE,KAAI,CAACC,UAAW,EAAAC,aAAA,GAAiBJ,UAAU,cACzCP,EAAE,sBAEL,kBAAC,EAAAS,KAAI,CAACC,UAAW,EAAAC,aAAA,OACdX,EAAE,6CAOb","sources":["webpack://kas-ui/./node_modules/@patternfly/react-icons/dist/js/icons/help-icon.js","webpack://kas-ui/./src/app/modules/InstanceDrawer/ConnectionTab.tsx"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.HelpIconConfig = {\n  name: 'HelpIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M521.3,576 C627.5,576 713.7,502 713.7,413.7 C713.7,325.4 627.6,253.6 521.3,253.6 C366,253.6 334.5,337.7 329.2,407.2 C329.2,414.3 335.2,416 343.5,416 L445,416 C450.5,416 458,415.5 460.8,406.5 C460.8,362.6 582.9,357.1 582.9,413.6 C582.9,441.9 556.2,470.9 521.3,473 C486.4,475.1 447.3,479.8 447.3,521.7 L447.3,553.8 C447.3,570.8 456.1,576 472,576 C487.9,576 521.3,576 521.3,576 M575.3,751.3 L575.3,655.3 C575.313862,651.055109 573.620137,646.982962 570.6,644 C567.638831,640.947672 563.552355,639.247987 559.3,639.29884 L463.3,639.29884 C459.055109,639.286138 454.982962,640.979863 452,644 C448.947672,646.961169 447.247987,651.047645 447.29884,655.3 L447.29884,751.3 C447.286138,755.544891 448.979863,759.617038 452,762.6 C454.961169,765.652328 459.047645,767.352013 463.3,767.30116 L559.3,767.30116 C563.544891,767.313862 567.617038,765.620137 570.6,762.6 C573.659349,759.643612 575.360354,755.553963 575.3,751.3 M512,896 C300.2,896 128,723.9 128,512 C128,300.3 300.2,128 512,128 C723.8,128 896,300.2 896,512 C896,723.8 723.7,896 512,896 M512.1,0 C229.7,0 0,229.8 0,512 C0,794.2 229.8,1024 512.1,1024 C794.4,1024 1024,794.3 1024,512 C1024,229.7 794.4,0 512.1,0',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.HelpIcon = require('../createIcon').createIcon(exports.HelpIconConfig);\nexports[\"default\"] = exports.HelpIcon;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button,\n  ButtonVariant,\n  ClipboardCopy,\n  Label,\n  Popover,\n  Skeleton,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport HelpIcon from '@patternfly/react-icons/dist/js/icons/help-icon';\nimport {\n  useBasename,\n  ModalType,\n  useModal,\n} from '@rhoas/app-services-ui-shared';\n\nexport type ConnectionTabProps = {\n  externalServer?: string;\n  isKafkaPending?: boolean;\n  tokenEndPointUrl: string;\n  instanceId: string | undefined;\n};\n\nexport const ConnectionTab: React.FC<ConnectionTabProps> = ({\n  externalServer,\n  isKafkaPending,\n  tokenEndPointUrl,\n  instanceId,\n}: ConnectionTabProps) => {\n  const { t } = useTranslation();\n  const { showModal } = useModal<ModalType.KasCreateServiceAccount>();\n\n  const handleCreateServiceAccountModal = () => {\n    showModal(ModalType.KasCreateServiceAccount, {});\n  };\n  const { getBasename } = useBasename() || {};\n  const basename = getBasename && getBasename();\n\n  return (\n    <div className='mas--details__drawer--tab-content'>\n      <TextContent className='pf-u-pb-sm'>\n        <Text component={TextVariants.small}>\n          {t('drawer_resource_tab_body_description_1')}\n        </Text>\n        <Text component={TextVariants.h3} className='pf-u-mt-lg'>\n          {t('bootstrap_server')}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t('bootstrap_server_description')}\n        </Text>\n      </TextContent>\n      {isKafkaPending ? (\n        <Skeleton fontSize='2xl' />\n      ) : (\n        <ClipboardCopy\n          data-testid='drawerStreams-copyBootstrapURL'\n          textAriaLabel={t('bootstrap_server')}\n        >\n          {externalServer}\n        </ClipboardCopy>\n      )}\n      <TextContent className='pf-u-pb-sm'>\n        <Text component={TextVariants.h3} className='pf-u-mt-xl'>\n          {t('serviceAccount.service_accounts_small')}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t('serviceAccount.create_service_account_to_generate_credentials')}{' '}\n          <Link to={'service-accounts'} data-testid='tableStreams-linkKafka'>\n            {t('serviceAccount.service_accounts')}\n          </Link>{' '}\n          {t('common.page')}.\n        </Text>\n      </TextContent>\n      <Button\n        variant='secondary'\n        onClick={handleCreateServiceAccountModal}\n        data-testid='drawerStreams-buttonCreateServiceAccount'\n        isInline\n      >\n        {t('serviceAccount.create_service_account')}\n      </Button>\n      <TextContent className='pf-u-pt-sm'>\n        <Text component={TextVariants.small}>\n          {t('serviceAccount.current_instance')}{' '}\n          <Link to={`${basename}/${instanceId}/acls`}>\n            {t('serviceAccount.access_tab')}\n          </Link>{' '}\n          {t('serviceAccount.alter_allow')}.\n        </Text>\n      </TextContent>\n      <TextContent className='pf-u-pb-sm'>\n        <Text component={TextVariants.h3} className='pf-u-mt-xl'>\n          {t('common.authentication_method')}\n        </Text>\n        <Text component={TextVariants.h4} className='pf-u-mt-md'>\n          {t('common.sasl_oauthbearer')}{' '}\n          <Label color='green'>{t('common.recommended')}</Label>\n          <Popover\n            aria-label={t('common.sasl_oauthbearer')}\n            bodyContent={\n              <div>{t('serviceAccount.sasl_oauthbearer_popover_content')}</div>\n            }\n          >\n            <Button\n              variant={ButtonVariant.plain}\n              aria-label={t('more_info_about_sasl_oauthbearer')}\n            >\n              <HelpIcon />\n            </Button>\n          </Popover>\n        </Text>\n        <Text component={TextVariants.small}>\n          {t('serviceAccount.sasl_oauthbearer_description')}\n        </Text>\n        <Text component={TextVariants.h6} className='pf-u-mt-md'>\n          {t('common.token_endpoint_url')}\n        </Text>\n        {isKafkaPending ? (\n          <Skeleton fontSize='2xl' />\n        ) : (\n          <ClipboardCopy isReadOnly>{tokenEndPointUrl}</ClipboardCopy>\n        )}\n      </TextContent>\n      <TextContent className='pf-u-pb-sm'>\n        <Text component={TextVariants.h4} className='pf-u-mt-md'>\n          {t('common.sasl_plain')}\n        </Text>\n        <Text component={TextVariants.small}>\n          {t('serviceAccount.sasl_plain_description')}\n        </Text>\n      </TextContent>\n    </div>\n  );\n};\n\nexport default ConnectionTab;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","ConnectionTab","externalServer","isKafkaPending","tokenEndPointUrl","instanceId","t","useTranslation","showModal","useModal","getBasename","useBasename","basename","className","TextContent","Text","component","TextVariants","Skeleton","fontSize","ClipboardCopy","textAriaLabel","Link","to","Button","variant","onClick","ModalType","isInline","Label","color","Popover","bodyContent","ButtonVariant","isReadOnly"],"sourceRoot":""}