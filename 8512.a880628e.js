"use strict";(self.webpackChunkkas_ui=self.webpackChunkkas_ui||[]).push([[8512],{13449:(e,n,t)=>{t.d(n,{J:()=>r,S:()=>a});var s=t(93264);const r=(0,s.createContext)(void 0),a=()=>(0,s.useContext)(r)},98512:(e,n,t)=>{t.r(n),t.d(n,{TransferOwnership:()=>m,default:()=>E});var s=t(9922),r=t(85893),a=t(93264),i=t(53518),o=t(99922),l=t(13449);const c=()=>{const{getAllUserAccounts:e}=(0,l.S)()||{getAllUserAccounts:()=>[]},n=e&&e();return null==n?void 0:n.map((e=>{const{id:n,displayName:t}=e;return{id:n,displayName:t}}))},d=({selection:e,setSelection:n,allUsers:t})=>{const{t:s}=(0,i.useTranslation)(["kasTemporaryFixMe"]),[l,c]=(0,a.useState)(!1),d=(t||[]).map((e=>{const{id:n,displayName:t}=e;return(0,r.jsx)(o.SelectOption,Object.assign({value:n,description:t},{children:n}),n)})),_=()=>{n(void 0),c(!1)};return(0,r.jsx)(o.Select,Object.assign({id:"manage-permissions-owner-select",variant:o.SelectVariant.typeahead,onToggle:e=>{c(e)},isOpen:l,placeholderText:s("select_user_account"),createText:s("common.use"),menuAppendTo:"parent",maxHeight:400,onSelect:(e,t,s)=>{s&&_(),n(t.toString()),c(!1)},selections:e,isCreatable:!0,onFilter:(e,n)=>((e,n)=>{if(!e)return n;const t=new RegExp(e,"i");return null==n?void 0:n.filter((e=>t.test(e.props.value)||t.test(e.props.description)))})(n,d)},{children:d}))};var _=t(17118),u=t(5854),p=t(78261);const m=({kafka:e,onClose:n,hideModal:t,refreshKafkas:l,variant:m,title:E})=>{const{t:v}=(0,i.useTranslation)(["kasTemporaryFixMe"]),A=(0,u.useAuth)(),{kas:{apiBasePath:O}}=(0,u.useConfig)(),{addAlert:g}=(0,u.useAlert)()||{addAlert:()=>""},[R,w]=(0,a.useState)(),[h,C]=(0,a.useState)(),[T,S]=(0,a.useState)(),I=()=>{t(),n&&n()};return(0,r.jsx)(o.Modal,Object.assign({id:"manage-permissions-modal",title:E,isOpen:!0,onClose:I,variant:m,position:"top",actions:[(0,r.jsx)(o.Button,Object.assign({id:"confirm__button",variant:"primary",onClick:()=>(0,s.__awaiter)(void 0,void 0,void 0,(function*(){var n;const t=yield null==A?void 0:A.kas.getToken();if(t&&(null==R?void 0:R.trim())&&(null==e?void 0:e.id)){C(!0);const s={owner:R},r=new _.DefaultApi(new _.Configuration({accessToken:t,basePath:O}));try{yield r.updateKafkaById(e.id,s).then((()=>{l&&l(),g({title:v("owner_change_sucess_title"),variant:o.AlertVariant.success,description:v("owner_change_sucess_message",{newOwner:R,name:null==e?void 0:e.name})}),C(!1),I()}))}catch(e){let t;(0,p.G6)(e)&&(t=null===(n=e.response)||void 0===n?void 0:n.data.code),S(t),C(!1)}}})),isLoading:h,isDisabled:!(null==R?void 0:R.trim())||h},{children:v("common.change_owner")}),"changeowner"),(0,r.jsx)(o.Button,Object.assign({id:"cancel__button",variant:"link",onClick:I},{children:v("cancel")}),"cancel")]},{children:(0,r.jsxs)(o.Form,{children:[(()=>{let n,t;return T===p.SM.OWNER_DOES_NOT_EXIST?(n=v("new_owner_does_not_exist_title"),t=v("new_owner_does_not_exist_message",{newOwner:R})):T&&(n=v("can_not_change_owner_title"),t=v("onwer_transfer_failed_message",{name:null==e?void 0:e.name})),n&&t?(0,r.jsx)(o.Alert,Object.assign({variant:o.AlertVariant.danger,"aria-live":"polite",isInline:!0,title:n},{children:t})):(0,r.jsx)(r.Fragment,{})})(),(0,r.jsx)(o.FormGroup,Object.assign({fieldId:"Current-owner-name",label:v("current_owner_name")},{children:null==e?void 0:e.owner})),(0,r.jsx)(o.FormGroup,Object.assign({fieldId:"New-owner-name",label:v("new_owner_name")},{children:(0,r.jsx)(d,{selection:R,setSelection:w,allUsers:c()})}))]})}))},E=m},78261:(e,n,t)=>{t.d(n,{G6:()=>s.isServiceApiError,SM:()=>r});var s=t(17118);const r={UNAUTHORIZED_USER:s.APIErrorCodes.ERROR_4,DUPLICATE_INSTANCE_NAME:s.APIErrorCodes.ERROR_36,INTERNAL_CAPACITY_ERROR:s.APIErrorCodes.ERROR_24,INSUFFICIENT_QUOTA:s.APIErrorCodes.ERROR_120,TRIAL_USED:s.APIErrorCodes.ERROR_5,FAILED_TO_CHECK_QUOTA:s.APIErrorCodes.ERROR_121,OWNER_DOES_NOT_EXIST:s.APIErrorCodes.ERROR_21}}}]);
//# sourceMappingURL=8512.a880628e.js.map