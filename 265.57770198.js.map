{"version":3,"sources":["webpack://kas-ui/./src/app/modules/OpenshiftStreams/OpenshiftStreamsFederated.tsx"],"names":["getUsername","getToken","onConnectToInstance","getConnectToInstancePath","addAlert","basePath","preCreateInstance","createDialogOpen","authContext","alertContext","BrowserRouter","I18nextProvider","i18n","value"],"mappings":"iOAwDA,QAhCkC,SAAC,G,IAAEA,EAAW,cAAEC,EAAQ,WAAEC,EAAmB,sBAACC,EAAwB,2BAAEC,EAAQ,WAAEC,EAAQ,WAAEC,EAAiB,oBAAEC,EAAgB,mBAEzJC,EAAc,CAClBP,SAAQ,EACRD,YAAW,GAGPS,EAAe,CACnBL,SAAQ,GAGV,OAEE,kBAAC,EAAAM,cAAa,KACb,kBAAC,EAAAC,gBAAe,CAACC,KAAM,KACtB,kBAAC,aAAmB,CAACC,MACnB,CACER,SAAUA,IAGZ,kBAAC,cAAqB,CAACQ,MAAOJ,GAC5B,kBAAC,aAAoB,CAACI,MAAOL,GAC3B,kBAAC,IAAgB,CAACN,oBAAqBA,EAAqBC,yBAA0BA,EAA0BG,kBAAmBA,EAAmBC,iBAAkBA","file":"265.57770198.js","sourcesContent":["import React from 'react';\nimport { OpenshiftStreams } from '@app/modules/OpenshiftStreams/OpenshiftStreams';\nimport { AuthContext, IAuthContext } from '@app/auth/AuthContext';\nimport { KafkaRequest } from '../../../openapi';\nimport { AlertVariant } from '@patternfly/react-core';\nimport { AlertContext, AlertContextProps } from '@app/common/MASAlerts/MASAlerts';\nimport { ApiContext } from '@app/api/ApiContext';\nimport { BrowserRouter } from 'react-router-dom';\nimport kasi18n from '../../../i18n/i18n';\nimport {I18nextProvider} from 'react-i18next';\n\n// Version of OpenshiftStreams for federation\n\nexport type OpenshiftStreamsFederatedProps = {\n  getToken: () => Promise<string>;\n  getUsername: () => Promise<string>;\n  onConnectToInstance: (data: KafkaRequest) => void;\n  getConnectToInstancePath: (data: KafkaRequest) => string;\n  preCreateInstance: (open: boolean) => Promise<boolean>;\n  createDialogOpen: () => boolean;\n  addAlert: (message: string, variant?: AlertVariant) => void;\n  basePath: string;\n};\n\nconst OpenshiftStreamsFederated = ({ getUsername, getToken, onConnectToInstance,getConnectToInstancePath, addAlert, basePath, preCreateInstance, createDialogOpen }: OpenshiftStreamsFederatedProps) => {\n\n  const authContext = {\n    getToken,\n    getUsername\n  } as IAuthContext;\n\n  const alertContext = {\n    addAlert\n  } as AlertContextProps;\n\n  return (\n    // TODO don't add BrowserRouter here - see  https://github.com/bf2fc6cc711aee1a0c2a/mk-ui-frontend/issues/74\n    <BrowserRouter>\n     <I18nextProvider i18n={kasi18n}>\n      <ApiContext.Provider value={\n        {\n          basePath: basePath\n        }\n      }>\n        <AlertContext.Provider value={alertContext}>\n          <AuthContext.Provider value={authContext}>\n            <OpenshiftStreams onConnectToInstance={onConnectToInstance} getConnectToInstancePath={getConnectToInstancePath} preCreateInstance={preCreateInstance} createDialogOpen={createDialogOpen} />\n          </AuthContext.Provider>\n        </AlertContext.Provider>\n      </ApiContext.Provider>\n      </I18nextProvider>\n    </BrowserRouter>\n  )\n    ;\n};\n\nexport default OpenshiftStreamsFederated;\n"],"sourceRoot":""}