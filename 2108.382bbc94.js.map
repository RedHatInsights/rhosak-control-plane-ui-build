{"version":3,"file":"2108.382bbc94.js","mappings":"iIAAIA,EAAsC,WAStC,OARAA,EAAWC,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,CACX,EACOH,EAASa,MAAMC,KAAMP,UAChC,EAYA,QAVgB,SAAUQ,GACtB,IAAIC,EACAC,GAAQ,IAAAC,eACRC,GAA+B,QAApBH,EAAKC,EAAMG,WAAwB,IAAPJ,OAAgB,EAASA,EAAGG,SAAW,CAAC,EAEnF,OADAA,EAASnB,EAASA,EAAS,CAAC,EAAGmB,GAAS,CAAEE,YAAaJ,EAAMI,cACrC,mBAAbN,EACAA,EAASI,GAEbA,CACX,C,0DCZO,MAAMG,GAAmB,IAAAC,eAE9B,MAEWC,EAAe,KAAsB,IAAAC,YAAWH,E,kFCEtD,MAAMI,GAAwB,IAAAH,oBAEnCI,GAEWC,EAAoB,KAC/B,MAAMC,GAAS,IAAAJ,YAAWC,GAC1B,QAAeC,IAAXE,EACF,MAAM,IAAIC,MAAM,wDAElB,OAAOD,CAAM,EAGFE,EAER,I,IAAA,SAAEC,GAAQ,EAAKC,GAAK,cAApB,cACH,OACE,SAACP,EAAsBQ,SAAQ,eAACC,MAAOF,GAAK,UACzCD,IAEJ,C,+JChBH,MAqCA,EAnCK,I,IAAA,kBACHI,EAAiB,sBACjBC,EAAqB,mBACrBC,GAAkB,EACfC,GAAW,cAJX,oEAMH,OACE,SAAC,aAAyB,eACxBJ,MAAO,CACLC,oBACAC,wBACAC,uBACD,WAED,UAAC,EAAAE,cAAa,YACZ,SAAC,KAAkB,WACjB,SAACd,EAAA,GAA6B,iBAAKa,EAAW,WAC5C,SAACE,EAAA,EAAc,kCACI,qBACbF,EAAW,WAEf,SAAC,KAAS,kCAAmB,QAAM,WACjC,SAACG,EAAA,EAA6B,CAC5BN,kBAAmBA,gBAM7B,SAAC,IAAc,SAGpB,C","sources":["webpack://kas-ui/./node_modules/@redhat-cloud-services/frontend-components/esm/useChrome/useChrome.js","webpack://kas-ui/./src/app/contexts/federated.ts","webpack://kas-ui/./src/app/modules/InstanceDrawer/contexts/InstanceDrawerContext.tsx","webpack://kas-ui/./src/app/modules/OpenshiftStreams/OpenshiftStreamsFederated.tsx"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useScalprum } from '@scalprum/react-core';\nvar useChrome = function (selector) {\n    var _a;\n    var state = useScalprum();\n    var chrome = ((_a = state.api) === null || _a === void 0 ? void 0 : _a.chrome) || {};\n    chrome = __assign(__assign({}, chrome), { initialized: state.initialized });\n    if (typeof selector === 'function') {\n        return selector(chrome);\n    }\n    return chrome;\n};\nexport default useChrome;\n//# sourceMappingURL=useChrome.js.map","import { createContext, useContext } from \"react\";\nimport { Principal } from \"@rhoas/app-services-ui-shared\";\n\nexport type FederatedProps = {\n  preCreateInstance?: (isOpen: boolean) => Promise<boolean>;\n  shouldOpenCreateModal: () => Promise<boolean>;\n  getAllUserAccounts?: () => Principal[];\n};\n\nexport const FederatedContext = createContext<FederatedProps>(\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  null!\n);\nexport const useFederated = (): FederatedProps => useContext(FederatedContext);\n","import { createContext, FunctionComponent, useContext } from \"react\";\nimport { InstanceDrawerTab } from \"@app/modules/InstanceDrawer/tabs\";\nimport { KafkaInstanceEnhanced } from \"@app/modules/OpenshiftStreams/components/StreamsTableConnected/useKafkaInstances\";\n\nexport type InstanceDrawerContextProps = {\n  isDrawerOpen: boolean;\n  drawerInstance: KafkaInstanceEnhanced | undefined;\n  setDrawerInstance: (instance: KafkaInstanceEnhanced) => void;\n  drawerActiveTab: InstanceDrawerTab | undefined;\n  setDrawerActiveTab: (tab: InstanceDrawerTab) => void;\n  openDrawer: (tab?: InstanceDrawerTab) => void;\n  closeDrawer: () => void;\n  tokenEndPointUrl: string;\n};\n\nexport const InstanceDrawerContext = createContext<\n  InstanceDrawerContextProps | undefined\n>(undefined);\n\nexport const useInstanceDrawer = (): InstanceDrawerContextProps => {\n  const answer = useContext(InstanceDrawerContext);\n  if (answer === undefined) {\n    throw new Error(\"must be used inside a InstanceDrawerContext provider\");\n  }\n  return answer;\n};\n\nexport const InstanceDrawerContextProvider: FunctionComponent<\n  InstanceDrawerContextProps\n> = ({ children, ...props }) => {\n  return (\n    <InstanceDrawerContext.Provider value={props}>\n      {children}\n    </InstanceDrawerContext.Provider>\n  );\n};\n","import { FunctionComponent } from \"react\";\nimport { PaginationProvider } from \"@app/common\";\nimport { FederatedContext, FederatedProps } from \"@app/contexts\";\nimport { ModalProvider } from \"@rhoas/app-services-ui-components\";\nimport { KasModalLoader } from \"@app/modals\";\nimport { KasLayout } from \"@app/modules/OpenshiftStreams/components\";\nimport { StreamsTableProps } from \"@app/modules/OpenshiftStreams/components/StreamsTableConnected\";\nimport { InstanceDrawer } from \"@app/modules/InstanceDrawer\";\nimport {\n  InstanceDrawerContextProps,\n  InstanceDrawerContextProvider,\n} from \"@app/modules/InstanceDrawer/contexts/InstanceDrawerContext\";\nimport { StreamsTableConnectedWithAuth } from \"@app/modules/OpenshiftStreams/StreamsTableConnectedWithAuth\";\n// Version of OpenshiftStreams for federation\ntype OpenshiftStreamsFederatedProps = StreamsTableProps &\n  InstanceDrawerContextProps &\n  FederatedProps;\n\nconst OpenshiftStreamsFederated: FunctionComponent<\n  OpenshiftStreamsFederatedProps\n> = ({\n  preCreateInstance,\n  shouldOpenCreateModal,\n  getAllUserAccounts,\n  ...drawerProps\n}) => {\n  return (\n    <FederatedContext.Provider\n      value={{\n        preCreateInstance,\n        shouldOpenCreateModal,\n        getAllUserAccounts,\n      }}\n    >\n      <ModalProvider>\n        <PaginationProvider>\n          <InstanceDrawerContextProvider {...drawerProps}>\n            <InstanceDrawer\n              data-ouia-app-id=\"dataPlane-streams\"\n              {...drawerProps}\n            >\n              <KasLayout data-ouia-app-id={\"TODO\"}>\n                <StreamsTableConnectedWithAuth\n                  preCreateInstance={preCreateInstance}\n                />\n              </KasLayout>\n            </InstanceDrawer>\n          </InstanceDrawerContextProvider>\n        </PaginationProvider>\n        <KasModalLoader />\n      </ModalProvider>\n    </FederatedContext.Provider>\n  );\n};\n\nexport default OpenshiftStreamsFederated;\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","selector","_a","state","useScalprum","chrome","api","initialized","FederatedContext","createContext","useFederated","useContext","InstanceDrawerContext","undefined","useInstanceDrawer","answer","Error","InstanceDrawerContextProvider","children","props","Provider","value","preCreateInstance","shouldOpenCreateModal","getAllUserAccounts","drawerProps","ModalProvider","InstanceDrawer","StreamsTableConnectedWithAuth"],"sourceRoot":""}