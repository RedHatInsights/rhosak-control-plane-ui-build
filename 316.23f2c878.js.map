{"version":3,"sources":["webpack://kas-ui/./src/app/common/MASAlerts/MASAlertToastGroup.tsx","webpack://kas-ui/./src/app/common/MASDeleteModal/MASDeleteModal.tsx","webpack://kas-ui/./src/app/common/MASDrawer/MASDrawer.tsx","webpack://kas-ui/./src/app/common/MASErrorBoundary/UnexpectedError.tsx","webpack://kas-ui/./src/app/common/MASLoading/MASLoading.tsx","webpack://kas-ui/./src/app/common/MASPagination/MASPagination.tsx","webpack://kas-ui/./src/app/common/MASTable/CustomRowWrapper.tsx","webpack://kas-ui/./src/app/common/MASTable/MASTable.tsx","webpack://kas-ui/./src/app/common/MASToolbar/MASToolbar.tsx","webpack://kas-ui/./src/app/modules/ServiceRegistry/ServiceRegistry.tsx","webpack://kas-ui/./src/app/modules/ServiceRegistry/ServiceRegistryFederated.tsx","webpack://kas-ui/./src/app/modules/ServiceRegistry/components/ServiceRegistryDrawer/ResourcesTab.tsx","webpack://kas-ui/./src/app/modules/ServiceRegistry/components/ServiceRegistryDrawer/SampleCodeTab.tsx","webpack://kas-ui/./src/app/modules/ServiceRegistry/components/ServiceRegistryDrawer/ServiceRegistryDrawer.tsx","webpack://kas-ui/./src/app/modules/ServiceRegistry/components/ServiceRegistryHeader/ServiceRegistryHeader.tsx","webpack://kas-ui/./src/app/utils/error.ts"],"names":["MASAlertToastGroup","alerts","onCloseAlert","AlertGroup","isToast","map","key","variant","title","body","dataTestId","Alert","isLiveRegion","AlertVariant","variantLabel","actionClose","AlertActionCloseButton","onClose","MASDeleteModal","isModalOpen","modalProps","confirmButtonProps","cancelButtonProps","handleModalToggle","textProps","children","selectedItemData","ModalVariant","titleIconVariant","ariaLabel","showClose","restModalProps","id","buttonConfirmVariant","ButtonVariant","onClickConfirmButton","isDisabledConfirmButton","label","confirmActionLabel","restConfirmButtonProps","cancelButtonId","cancelButtonKey","cancelButtonVariant","cancelActionLabel","restCancelButtonProps","className","description","restTextProps","Modal","isOpen","appendTo","actions","Button","onClick","isDisabled","Text","dangerouslySetInnerHTML","__html","MASDrawer","isLoading","drawerPanelContentProps","drawerHeaderProps","isExpanded","panelBodyContent","onExpand","notRequiredDrawerContentBackground","dataOuiaAppId","inlineAlertMessage","widths","restDrawerPanelContentProps","text","panelContent","DrawerPanelContent","default","DrawerHead","TextContent","component","TextVariants","value","Title","headingLevel","size","TitleSizes","DrawerActions","DrawerCloseButton","DrawerPanelBody","Drawer","DrawerContent","DrawerContentBody","UnexpectedError","updateState","t","useTranslation","PageSection","padding","isFilled","emptyStateProps","emptyStateIconProps","titleProps","emptyStateBodyProps","history","push","MASLoading","bullseyeProps","spinnerProps","Bullseye","Spinner","MASPagination","page","perPage","itemCount","PaginationVariant","isCompact","titles","restProps","location","searchParams","URLSearchParams","search","setSearchParam","useCallback","name","set","toString","onSetPage","_","newPage","onPerPageSelect","newPerPage","CustomRowWrapperContext","createContext","activeRow","onRowClick","CustomRowWrapperProvider","Provider","CustomRowWrapper","rowWrapperProps","useContext","rowDataTestId","trRef","rowProps","row","props","rowIndex","originalData","isRowDeleted","status","tabIndex","ref","css","hidden","undefined","event","MASTable","tableProps","tableHeaderProps","tableBodyProps","cells","rows","actionResolver","onSort","sortBy","hasDefaultCustomRowWrapper","TableHeader","TableBody","MASToolbar","toolbarProps","toggleGroupProps","toolbarItems","toggleGroupItems","clearAllFilters","collapseListedFiltersBreakpoint","inset","restToolbarProps","Toolbar","ToolbarContent","ToolbarToggleGroup","toggleIcon","breakpoint","toolbarItem","index","alignment","item","restItemProps","ToolbarItem","ServiceRegistry","useState","isExpandedDrawer","setIsExpandedDrawer","isServiceRegistryLoading","serviceAccountDetails","setServiceAccountDetails","isUnauthorizedUser","onCreateServiceRegistry","getAccessToServiceRegistry","PageSectionVariants","onConnectToRegistry","onDeleteRegistry","buttonProps","spinnerAriaValueText","getUsername","getToken","addAlert","basePath","getConnectToInstancePath","authContext","alertContext","I18nextProvider","i18n","ResourcesTab","registriesInfo","code","Form","FormGroup","fieldId","ClipboardCopy","hoverTip","clickTip","textAriaLabel","isReadOnly","SampleCodeTab","editors","type","CopyIcon","ServiceRegistryDrawer","activeKey","setActiveKey","Tabs","onSelect","eventKey","Tab","TabTitleText","ServiceRegistryHeader","setIsOpen","dropdownItems","DropdownItem","Level","LevelItem","Dropdown","toggle","KebabToggle","onToggle","isPlain","position","DropdownPosition","ErrorCodes","isServiceApiError","error","response","data"],"mappings":"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","file":"316.23f2c878.js","sourcesContent":["import React from 'react';\nimport { AlertGroup, Alert, AlertActionCloseButton, AlertVariant } from '@patternfly/react-core';\n\nexport type MASAlertType = {\n  key: number;\n  title: string;\n  variant: AlertVariant;\n  body?: string | React.ReactElement;\n  dataTestId?: string;\n};\n\ntype AlertToastGroupProps = {\n  alerts: MASAlertType[];\n  onCloseAlert: (key: number) => void;\n};\n\nexport function MASAlertToastGroup({ alerts, onCloseAlert }: AlertToastGroupProps) {\n  return (\n    <AlertGroup isToast>\n      {alerts.map(({ key, variant, title, body, dataTestId }) => (\n        <Alert\n          key={key}\n          isLiveRegion\n          variant={AlertVariant[variant]}\n          variantLabel=\"\"\n          title={title}\n          actionClose={<AlertActionCloseButton title={title} onClose={() => onCloseAlert(key)} />}\n          data-testid={dataTestId}\n        >\n          {body}\n        </Alert>\n      ))}\n    </AlertGroup>\n  );\n}\n","import React from 'react';\nimport {\n  Modal,\n  Button,\n  ButtonVariant,\n  ModalVariant,\n  ModalProps,\n  Text,\n  ButtonProps,\n  TextProps,\n} from '@patternfly/react-core';\nimport { getModalAppendTo } from '@app/utils/utils';\nimport './MASDeleteModal.css';\n\nexport type MASDeleteModalProps = {\n  isModalOpen: boolean;\n  title: string;\n  modalProps?: Omit<ModalProps, 'children' | 'ref'>;\n  handleModalToggle: () => void;\n  children?: React.ReactNode;\n  selectedItemData?: any;\n  confirmButtonProps?: Omit<ButtonProps, 'children' | 'onClick'> & {\n    id?: string;\n    key?: string;\n    label?: string;\n    onClick?: (data?: any) => Promise<void> | void;\n    'data-testid'?: string;\n  };\n  cancelButtonProps?: Omit<ButtonProps, 'children'> & {\n    id?: string;\n    key?: string;\n    label?: string;\n  };\n  textProps?: Omit<TextProps, 'children'> & {\n    description?: string;\n  };\n};\n\nexport const MASDeleteModal: React.FC<MASDeleteModalProps> = ({\n  isModalOpen,\n  title,\n  modalProps,\n  confirmButtonProps,\n  cancelButtonProps,\n  handleModalToggle,\n  textProps,\n  children,\n  selectedItemData = '',\n}: MASDeleteModalProps) => {\n  const {\n    variant = ModalVariant.small,\n    titleIconVariant = 'warning',\n    ['aria-label']: ariaLabel,\n    showClose = true,\n    ...restModalProps\n  } = modalProps || {};\n\n  const {\n    id = 'mas--confirm__button',\n    key = 'confirm-button',\n    variant: buttonConfirmVariant = ButtonVariant.danger,\n    onClick: onClickConfirmButton,\n    isDisabled: isDisabledConfirmButton,\n    label: confirmActionLabel = 'Delete',\n    ...restConfirmButtonProps\n  } = confirmButtonProps || {};\n\n  const {\n    id: cancelButtonId = 'mas--cancel__button',\n    key: cancelButtonKey = '\"cancel-button',\n    variant: cancelButtonVariant = ButtonVariant.link,\n    onClick: onClickCancelButton,\n    isDisabled: isDisabledCancelButton,\n    label: cancelActionLabel = 'Cancel',\n    ...restCancelButtonProps\n  } = cancelButtonProps || {};\n\n  const { className = 'mas--delete-item__modal--text', description, ...restTextProps } = textProps || {};\n\n  return (\n    <Modal\n      variant={variant}\n      isOpen={isModalOpen}\n      aria-label={ariaLabel}\n      title={title}\n      titleIconVariant={titleIconVariant}\n      showClose={showClose}\n      onClose={handleModalToggle}\n      appendTo={getModalAppendTo}\n      actions={[\n        <Button\n          id={id}\n          key={key}\n          variant={buttonConfirmVariant}\n          onClick={() => onClickConfirmButton && onClickConfirmButton(selectedItemData)}\n          isDisabled={isDisabledConfirmButton}\n          {...restConfirmButtonProps}\n        >\n          {confirmActionLabel}\n        </Button>,\n        <Button\n          id={cancelButtonId}\n          key={cancelButtonKey}\n          variant={cancelButtonVariant}\n          onClick={handleModalToggle}\n          {...restCancelButtonProps}\n        >\n          {cancelActionLabel}\n        </Button>,\n      ]}\n      {...restModalProps}\n    >\n      {description && (\n        <Text className={className} dangerouslySetInnerHTML={{ __html: description || '' }} {...restTextProps} />\n      )}\n      {children}\n    </Modal>\n  );\n};\n","import React from 'react';\nimport {\n  Drawer,\n  DrawerProps,\n  DrawerContent,\n  DrawerPanelContent,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerActions,\n  DrawerCloseButton,\n  TextContent,\n  Text,\n  TextVariants,\n  Title,\n  TitleSizes,\n  DrawerPanelContentProps,\n  TextProps,\n  TitleProps,\n  DrawerContentBody,\n} from '@patternfly/react-core';\nimport { MASLoading } from '@app/common';\n\nexport type MASDrawerProps = DrawerProps & {\n  children: React.ReactNode;\n  panelBodyContent?: React.ReactNode;\n  onClose: () => void;\n  drawerData?: any;\n  isLoading: boolean;\n  drawerPanelContentProps?: Omit<DrawerPanelContentProps, 'children'>;\n  drawerHeaderProps?: {\n    text?: Omit<TextProps, 'children' | 'ref'> & {\n      label: string | undefined;\n    };\n    title?: Omit<TitleProps, 'children'> & {\n      value: string | undefined;\n    };\n  };\n  ['data-ouia-app-id']?: string;\n  notRequiredDrawerContentBackground?: boolean | undefined;\n  inlineAlertMessage?: React.ReactNode;\n};\n\nexport const MASDrawer: React.FC<MASDrawerProps> = ({\n  onClose,\n  isLoading = true,\n  drawerPanelContentProps,\n  drawerHeaderProps,\n  isExpanded,\n  children,\n  panelBodyContent,\n  onExpand,\n  notRequiredDrawerContentBackground,\n  'data-ouia-app-id': dataOuiaAppId,\n  inlineAlertMessage,\n}: MASDrawerProps) => {\n  const { widths, ...restDrawerPanelContentProps } = drawerPanelContentProps || {};\n  const { text, title } = drawerHeaderProps || {};\n\n  const panelContent = (\n    <DrawerPanelContent widths={widths || { default: 'width_50' }} {...restDrawerPanelContentProps}>\n      {isLoading ? (\n        <MASLoading />\n      ) : (\n        <>\n          <DrawerHead>\n            <TextContent>\n              {text?.label && (\n                <Text component={text?.component || TextVariants.small} className={text?.className || 'pf-u-mb-0'}>\n                  {text?.label}\n                </Text>\n              )}\n              {title?.value && (\n                <Title\n                  headingLevel={title?.headingLevel || 'h2'}\n                  size={title?.size || TitleSizes['xl']}\n                  className={title?.className || 'pf-u-mt-0'}\n                >\n                  {title?.value}\n                </Title>\n              )}\n            </TextContent>\n            <DrawerActions>\n              <DrawerCloseButton onClick={onClose} />\n            </DrawerActions>\n          </DrawerHead>\n          <DrawerPanelBody>\n            {inlineAlertMessage}\n            {panelBodyContent}\n          </DrawerPanelBody>\n        </>\n      )}\n    </DrawerPanelContent>\n  );\n\n  return (\n    <Drawer isExpanded={isExpanded} onExpand={onExpand} data-ouia-app-id={dataOuiaAppId}>\n      <DrawerContent\n        panelContent={panelContent}\n        className={notRequiredDrawerContentBackground ? 'pf-m-no-background' : ''}\n      >\n        <DrawerContentBody className=\"pf-u-display-flex pf-u-flex-direction-column\"> {children}</DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { PageSection, Button } from '@patternfly/react-core';\nimport './UnexpectedError.css';\nimport { MASEmptyState, MASEmptyStateVariant } from '@app/common';\n\ntype UnexpectedError = {\n  updateState: (hasError: boolean) => void;\n};\n\nconst UnexpectedError = ({ updateState }: UnexpectedError) => {\n  const { t } = useTranslation();\n\n  const GoHomeBtn = () => {\n    const history = useHistory();\n    function handleClick() {\n      updateState(false);\n      history.push('/');\n    }\n    return <Button onClick={handleClick}>{t('go_to_kafka_instances')}</Button>;\n  };\n\n  return (\n    <PageSection padding={{ default: 'noPadding' }} isFilled>\n      <MASEmptyState\n        emptyStateProps={{\n          variant: MASEmptyStateVariant.UnexpectedError,\n        }}\n        emptyStateIconProps={{\n          className: 'icon-color',\n        }}\n        titleProps={{\n          title: t('common.something_went_wrong'),\n        }}\n        emptyStateBodyProps={{\n          body: t('unexpected_error'),\n        }}\n      >\n        <GoHomeBtn />\n      </MASEmptyState>\n    </PageSection>\n  );\n};\n\nexport { UnexpectedError };\n","import React from 'react';\nimport { Bullseye, BullseyeProps, Spinner, SpinnerProps } from '@patternfly/react-core';\n\nexport type MASLoadingProps = {\n  bullseyeProps?: Omit<BullseyeProps, 'children'>;\n  spinnerProps?: SpinnerProps;\n};\n\nexport const MASLoading: React.FunctionComponent<MASLoadingProps> = ({\n  bullseyeProps,\n  spinnerProps,\n}: MASLoadingProps) => (\n  <Bullseye {...bullseyeProps}>\n    <Spinner {...spinnerProps} />\n  </Bullseye>\n);\n","import React, { useCallback, FunctionComponent } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport {\n  Pagination as PFPagination,\n  PaginationProps as PFPaginationProps,\n  PaginationVariant,\n} from '@patternfly/react-core';\n\nexport type PaginationProps = Omit<PFPaginationProps, 'children' | 'ref'>;\n\nconst MASPagination: FunctionComponent<PaginationProps> = ({\n  page,\n  perPage = 10,\n  itemCount,\n  variant = PaginationVariant.top,\n  isCompact,\n  titles,\n  ...restProps\n}) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const setSearchParam = useCallback(\n    (name: string, value: string) => {\n      searchParams.set(name, value.toString());\n    },\n    [searchParams]\n  );\n\n  const onSetPage = useCallback(\n    (_: any, newPage: number) => {\n      setSearchParam('page', newPage.toString());\n      history.push({\n        search: searchParams.toString(),\n      });\n    },\n    [setSearchParam, history, searchParams]\n  );\n\n  const onPerPageSelect = useCallback(\n    (_: any, newPerPage: number) => {\n      setSearchParam('page', '1');\n      setSearchParam('perPage', newPerPage.toString());\n      history.push({\n        search: searchParams.toString(),\n      });\n    },\n    [setSearchParam, history, searchParams]\n  );\n\n  return (\n    <PFPagination\n      itemCount={itemCount}\n      perPage={perPage}\n      page={page}\n      onSetPage={onSetPage}\n      variant={variant}\n      onPerPageSelect={onPerPageSelect}\n      isCompact={isCompact}\n      {...restProps}\n      titles={titles}\n    />\n  );\n};\n\nexport { MASPagination };\n","import React, { createContext, useContext } from 'react';\nimport { InstanceStatus } from '@app/utils';\nimport { css } from '@patternfly/react-styles';\nimport './CustomRowWrapper.css';\n\nexport type CustomRowWrapperContextProps = {\n  activeRow?: string;\n  onRowClick?: (event: any, rowIndex: number, row: any) => void;\n  rowDataTestId?: string;\n};\n\nconst CustomRowWrapperContext = createContext<CustomRowWrapperContextProps>({\n  activeRow: '',\n  onRowClick: () => {},\n});\n\nexport const CustomRowWrapperProvider = CustomRowWrapperContext.Provider;\n\nexport const CustomRowWrapper = (rowWrapperProps) => {\n  const { activeRow, onRowClick, rowDataTestId } = useContext(CustomRowWrapperContext);\n  const { trRef, className, rowProps, row, ...props } = rowWrapperProps || {};\n  const { rowIndex } = rowProps;\n  const { isExpanded, originalData } = row;\n  const isRowDeleted = originalData?.status === InstanceStatus.DEPROVISION;\n\n  return (\n    <tr\n      data-testid={rowDataTestId}\n      tabIndex={0}\n      ref={trRef}\n      className={css(\n        className,\n        'pf-c-table-row__item',\n        isRowDeleted ? 'pf-m-disabled' : 'pf-m-selectable',\n        activeRow && activeRow === originalData?.name && 'pf-m-selected'\n      )}\n      hidden={isExpanded !== undefined && !isExpanded}\n      onClick={(event: any) => !isRowDeleted && onRowClick && onRowClick(event, rowIndex, row)}\n      {...props}\n    />\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport {\n  TableHeader,\n  Table as PFTable,\n  TableBody,\n  TableProps as PFTableProps,\n  HeaderProps,\n  TableBodyProps,\n} from '@patternfly/react-table';\nimport { css } from '@patternfly/react-styles';\nimport { CustomRowWrapper, CustomRowWrapperProvider, CustomRowWrapperContextProps } from './CustomRowWrapper';\n\nexport type MASTableProps = CustomRowWrapperContextProps & {\n  tableProps: Omit<PFTableProps, 'children'> & {\n    hasDefaultCustomRowWrapper?: boolean;\n  };\n  tableHeaderProps?: Omit<HeaderProps, 'children'>;\n  tableBodyProps?: Omit<TableBodyProps, 'children'>;\n  children?: React.ReactNode;\n};\n\nconst MASTable: FunctionComponent<MASTableProps> = ({\n  tableProps,\n  tableHeaderProps,\n  tableBodyProps,\n  children,\n  activeRow,\n  onRowClick,\n  rowDataTestId,\n}) => {\n  const {\n    cells,\n    rows,\n    actionResolver,\n    onSort,\n    sortBy,\n    'aria-label': ariaLabel,\n    variant,\n    className,\n    rowWrapper,\n    hasDefaultCustomRowWrapper = false,\n    ...restProps\n  } = tableProps;\n\n  /**\n   * Handle CustomRowWrapper\n   */\n  if (hasDefaultCustomRowWrapper) {\n    restProps['rowWrapper'] = CustomRowWrapper;\n  }\n\n  return (\n    <CustomRowWrapperProvider\n      value={{\n        activeRow,\n        onRowClick,\n        rowDataTestId,\n      }}\n    >\n      <PFTable\n        className={css('mas--streams-table-view__table', className)}\n        cells={cells}\n        variant={variant}\n        rows={rows}\n        aria-label={ariaLabel}\n        actionResolver={actionResolver}\n        onSort={onSort}\n        sortBy={sortBy}\n        {...restProps}\n      >\n        <TableHeader {...tableHeaderProps} />\n        <TableBody {...tableBodyProps} />\n        {children}\n      </PFTable>\n    </CustomRowWrapperProvider>\n  );\n};\n\nexport { MASTable };\n","import React from 'react';\nimport {\n  ToolbarContent,\n  Toolbar,\n  ToolbarProps,\n  ToolbarItemProps as PFToolbarItemProps,\n  ToolbarToggleGroup,\n  ToolbarItem,\n  ToolbarToggleGroupProps,\n} from '@patternfly/react-core';\n\nexport type ToolbarItemProps = Omit<PFToolbarItemProps, 'children'> & {\n  item: JSX.Element;\n};\nexport type MASToolbarProps = {\n  toolbarProps: Omit<ToolbarProps, 'children' | 'ref'>;\n  toggleGroupProps?: Omit<ToolbarToggleGroupProps, 'children'>;\n  toggleGroupItems?: any;\n  toolbarItems?: ToolbarItemProps[];\n};\n\nconst MASToolbar: React.FunctionComponent<MASToolbarProps> = ({\n  toolbarProps,\n  toggleGroupProps,\n  toolbarItems,\n  toggleGroupItems,\n}) => {\n  const { id, clearAllFilters, collapseListedFiltersBreakpoint = 'md', inset, ...restToolbarProps } = toolbarProps;\n\n  return (\n    <>\n      <Toolbar\n        id={id}\n        clearAllFilters={clearAllFilters}\n        inset={inset}\n        collapseListedFiltersBreakpoint={collapseListedFiltersBreakpoint}\n        {...restToolbarProps}\n      >\n        <ToolbarContent>\n          { toggleGroupProps && (\n            <ToolbarToggleGroup toggleIcon={toggleGroupProps.toggleIcon} breakpoint='md' {...toggleGroupProps}>\n              {toggleGroupItems}\n            </ToolbarToggleGroup>\n          )}\n          {toolbarItems?.map((toolbarItem, index) => {\n            const { key = 'mas', variant, className, id, alignment, item, ...restItemProps } = toolbarItem;\n            return (\n              <ToolbarItem\n                key={`${key}-${index}`}\n                variant={variant}\n                className={className}\n                id={id}\n                alignment={alignment}\n                {...restItemProps}\n              >\n                {item}\n              </ToolbarItem>\n            );\n          })}\n        </ToolbarContent>\n      </Toolbar>\n    </>\n  );\n};\n\nexport { MASToolbar };\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PageSection, PageSectionVariants, ButtonVariant } from '@patternfly/react-core';\nimport { MASEmptyState, MASEmptyStateVariant } from '@app/common';\nimport { ServiceRegistryHeader, ServiceRegistryDrawer } from './components';\n\nexport type ServiceRegistryProps = {\n  getConnectToInstancePath?: (data: any) => string;\n};\n\nexport const ServiceRegistry = ({ getConnectToInstancePath }: ServiceRegistryProps) => {\n  const { t } = useTranslation();\n\n  const [isExpandedDrawer, setIsExpandedDrawer] = useState<boolean>(false);\n  const [isServiceRegistryLoading, setIsServiceRegistryLoading] = useState<boolean>(false);\n  const [serviceAccountDetails, setServiceAccountDetails] = useState<any>(undefined);\n  const [notRequiredDrawerContentBackground, setNotRequiredDrawerContentBackground] = useState<boolean>(false);\n  const [isUnauthorizedUser, setIsUnauthorizedUser] = useState<boolean>(false);\n\n  const onConnectToRegistry = () => {\n    setIsExpandedDrawer(true);\n    /**\n     * Todo: Dummy test-data will remove after integrate API\n     */\n    setServiceAccountDetails('test-data');\n  };\n\n  const onCloseDrawer = () => {\n    setIsExpandedDrawer(false);\n  };\n\n  const onDeleteRegistry = () => {\n    /**\n     * Todo: integrate delete registry api\n     */\n  };\n\n  const onCreateServiceRegistry = () => {\n    /**\n     * Todo: integrate create service registry api\n     */\n  };\n\n  const getAccessToServiceRegistry = () => {\n    /**\n     * Todo: integrate get access service registry api\n     */\n  };\n\n  const renderWelcomeEmptyState = () => {\n    return (\n      <PageSection padding={{ default: 'noPadding' }} isFilled>\n        <MASEmptyState\n          emptyStateProps={{ variant: MASEmptyStateVariant.GettingStarted }}\n          titleProps={{ title: t('serviceRegistry.welcome_to_service_registry') }}\n          emptyStateBodyProps={{\n            body: t('serviceRegistry.welcome_empty_state_body'),\n          }}\n          buttonProps={{\n            title: t('serviceRegistry.create_service_registry'),\n            variant: ButtonVariant.primary,\n            onClick: onCreateServiceRegistry,\n            isLoading: isServiceRegistryLoading,\n            spinnerAriaValueText: isServiceRegistryLoading ? t('common.loading') : undefined,\n          }}\n        />\n      </PageSection>\n    );\n  };\n\n  const renderUnauthorizedUserEmptyState = () => {\n    return (\n      <PageSection padding={{ default: 'noPadding' }} isFilled>\n        <MASEmptyState\n          emptyStateProps={{ variant: MASEmptyStateVariant.NoAccess }}\n          titleProps={{ title: t('serviceRegistry.unauthorized_empty_state_title') }}\n          emptyStateBodyProps={{\n            body: t('serviceRegistry.unauthorized_empty_state_body'),\n          }}\n          buttonProps={{\n            title: t('serviceRegistry.get_access_to_service_registry'),\n            variant: ButtonVariant.primary,\n            onClick: getAccessToServiceRegistry,\n          }}\n        />\n      </PageSection>\n    );\n  };\n\n  return (\n    <>\n      {serviceAccountDetails ? (\n        <ServiceRegistryDrawer\n          isExpanded={isExpandedDrawer}\n          isLoading={serviceAccountDetails === undefined}\n          notRequiredDrawerContentBackground={notRequiredDrawerContentBackground}\n          onClose={onCloseDrawer}\n        >\n          <PageSection variant={PageSectionVariants.light}>\n            <ServiceRegistryHeader\n              name={''}\n              onConnectToRegistry={onConnectToRegistry}\n              onDeleteRegistry={onDeleteRegistry}\n            />\n          </PageSection>\n          {isUnauthorizedUser && renderUnauthorizedUserEmptyState()}\n        </ServiceRegistryDrawer>\n      ) : (\n        renderWelcomeEmptyState()\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { AlertVariant } from '@patternfly/react-core';\nimport { ServiceRegistry, ServiceRegistryProps } from '@app/modules/ServiceRegistry/ServiceRegistry';\nimport { AuthContext, IAuthContext } from '@app/auth/AuthContext';\nimport { AlertContext, AlertContextProps } from '@app/common/MASAlerts';\nimport { ApiContext } from '@app/api/ApiContext';\nimport kasi18n from '../../../i18n/i18n';\nimport {I18nextProvider} from 'react-i18next';\n// Version of ServiceRegistry for federation\n\nexport type ServiceRegistryFederatedProps = ServiceRegistryProps & {\n  getToken: () => Promise<string>;\n  getUsername: () => Promise<string>;\n  addAlert: (message: string, variant?: AlertVariant) => void;\n  basePath: string;\n};\n\nconst ServiceRegistryFederated = ({\n  getUsername,\n  getToken,\n  addAlert,\n  basePath,\n  getConnectToInstancePath,\n}: ServiceRegistryFederatedProps) => {\n  const authContext = {\n    getToken,\n    getUsername,\n  } as IAuthContext;\n\n  const alertContext = {\n    addAlert,\n  } as AlertContextProps;\n\n  return (\n    <I18nextProvider i18n={kasi18n}>\n    <ApiContext.Provider\n      value={{\n        basePath: basePath,\n      }}\n    >\n      <AlertContext.Provider value={alertContext}>\n        <AuthContext.Provider value={authContext}>\n          <ServiceRegistry getConnectToInstancePath={getConnectToInstancePath} />\n        </AuthContext.Provider>\n      </AlertContext.Provider>\n    </ApiContext.Provider>\n    </I18nextProvider>\n  );\n};\n\nexport default ServiceRegistryFederated;\n","import React from 'react';\nimport { TextContent, Text, TextVariants, ClipboardCopy, Form, FormGroup } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\nexport type ResourcesTabProps = {\n  mainToggle?: boolean;\n};\n\nexport const ResourcesTab: React.FC<ResourcesTabProps> = ({ mainToggle }: ResourcesTabProps) => {\n  const { t } = useTranslation();\n  const registriesInfo = [\n    { title: t('serviceRegistry.tab_resources_content_1'), code: 'https://registry.my-domain.com/api' },\n    { title: t('serviceRegistry.tab_resources_content_2'), code: 'https://mass-sso.url' },\n    { title: t('common.client_key'), code: 'srvc-reg-7f7f8f7f87f-3634-c2e-879877988787' },\n    { title: t('common.client_secret'), code: '2d668686876-8768786-8766686-8787jhjh88' },\n  ];\n\n  return (\n    <div className=\"mas--details__drawer--tab-content\">\n      <TextContent className=\"pf-u-pb-sm\">\n        <Text component={TextVariants.small}>{t('serviceRegistry.tab_resources_title_info')}</Text>\n      </TextContent>\n      <Form>\n        {registriesInfo?.map(({ title, code }, index) => (\n          <FormGroup label={title} fieldId={`copy-clipboard-${index}`}>\n            <ClipboardCopy\n              id={`copy-clipboard-${index}`}\n              hoverTip={t('common.copy_clipboard')}\n              clickTip={t('common.copy_clipboard_successfully')}\n              textAriaLabel={title}\n              isReadOnly\n            >\n              {code}\n            </ClipboardCopy>\n          </FormGroup>\n        ))}\n      </Form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { TextContent, Text, TextVariants, Button } from '@patternfly/react-core';\nimport { CopyIcon } from '@patternfly/react-icons';\nimport { useTranslation } from 'react-i18next';\n\nexport const SampleCodeTab = () => {\n  const { t } = useTranslation();\n  const editors = [\n    { type: t('common.java'), code: 'code goes here' },\n    { type: t('common.mvn'), code: 'code goes here' },\n    { type: t('common.cli'), code: 'code goes here' },\n    { type: t('common.curl'), code: 'code goes here' },\n  ];\n\n  return (\n    <>\n      <div className=\"mas--details__drawer--tab-content\">\n        <TextContent className=\"pf-u-pb-sm\">\n          <Text component={TextVariants.small}>{t('serviceRegistry.tab_sample_code_title_info')}</Text>\n        </TextContent>\n        {editors?.map(({ type, code }) => (\n          <div className=\"pf-c-code-editor pf-m-read-only\">\n            <div className=\"pf-c-code-editor__header pf-u-pt-lg\">\n              <div className=\"pf-c-code-editor__controls\">\n                <Button variant=\"control\" aria-label=\"Action\">\n                  <CopyIcon />\n                </Button>\n              </div>\n              <div className=\"pf-c-code-editor__tab\">\n                <span className=\"pf-c-code-editor__tab-text\">{type}</span>\n              </div>\n            </div>\n            <div className=\"pf-c-code-editor__main\">\n              <div className=\"pf-c-code-editor__code\">\n                <pre className=\"pf-c-code-editor__code-pre\">{code}</pre>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Tabs, Tab, TabTitleText } from '@patternfly/react-core';\nimport { MASDrawer, MASDrawerProps } from '@app/common';\nimport { ResourcesTab } from './ResourcesTab';\nimport { SampleCodeTab } from './SampleCodeTab';\n\nexport type ServiceRegistryDrawerProps = Omit<\n  MASDrawerProps,\n  'drawerHeaderProps' | 'panelBodyContent' | '[data-ouia-app-id]'\n> & {\n  activeTab?: React.ReactText;\n};\n\nconst ServiceRegistryDrawer: React.FC<ServiceRegistryDrawerProps> = ({\n  isExpanded,\n  isLoading,\n  onClose,\n  'data-ouia-app-id': dataOuiaAppId,\n  children,\n  notRequiredDrawerContentBackground,\n}: ServiceRegistryDrawerProps) => {\n  const { t } = useTranslation();\n  const [activeKey, setActiveKey] = useState<React.ReactText>(0);\n\n  const handleTabClick = (_, eventKey: React.ReactText) => {\n    setActiveKey(eventKey);\n  };\n\n  const panelBodyContent = (\n    <Tabs activeKey={activeKey} onSelect={handleTabClick}>\n      <Tab\n        eventKey={0}\n        title={<TabTitleText>{t('common.resources')}</TabTitleText>}\n        data-testid=\"serviceRegustry-tabResources\"\n      >\n        <ResourcesTab />\n      </Tab>\n      <Tab\n        eventKey={1}\n        title={<TabTitleText>{t('common.sample_code')}</TabTitleText>}\n        data-testid=\"serviceRegistry-tabSampleCode\"\n      >\n        <SampleCodeTab />\n      </Tab>\n    </Tabs>\n  );\n\n  return (\n    <MASDrawer\n      isExpanded={isExpanded}\n      isLoading={isLoading}\n      onClose={onClose}\n      panelBodyContent={panelBodyContent}\n      drawerHeaderProps={{\n        text: { label: t('serviceRegistry.connection_details') },\n        title: { value: name, headingLevel: 'h1' },\n      }}\n      data-ouia-app-id={dataOuiaAppId}\n      notRequiredDrawerContentBackground={notRequiredDrawerContentBackground}\n    >\n      {children}\n    </MASDrawer>\n  );\n};\n\nexport { ServiceRegistryDrawer };\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Level,\n  LevelItem,\n  TextContent,\n  Text,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n} from '@patternfly/react-core';\n\nexport type ServiceRegistryHeaderProps = {\n  name: string;\n  onConnectToRegistry: (data: any) => void;\n  onDeleteRegistry: (name: string) => void;\n};\n\nexport const ServiceRegistryHeader: React.FC<ServiceRegistryHeaderProps> = ({\n  name,\n  onConnectToRegistry,\n  onDeleteRegistry,\n}: ServiceRegistryHeaderProps) => {\n  const { t } = useTranslation();\n\n  const [isOpen, setIsOpen] = useState<boolean>();\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const dropdownItems = [\n    <DropdownItem key=\"connect-registry\" onClick={() => onConnectToRegistry(name)}>\n      {t('serviceRegistry.connect_to_registry')}\n    </DropdownItem>,\n    <DropdownItem key=\"delete-registry\" onClick={() => onDeleteRegistry(name)}>\n      {t('serviceRegistry.delete_registry')}\n    </DropdownItem>,\n  ];\n\n  return (\n    <Level>\n      <LevelItem>\n        <TextContent>\n          <Text component=\"h1\"> {t('serviceRegistry.service_registry')}</Text>\n        </TextContent>\n      </LevelItem>\n      <LevelItem>\n        <Dropdown\n          onSelect={onSelect}\n          toggle={<KebabToggle onToggle={onToggle} id=\"toggle-service-registry\" />}\n          isOpen={isOpen}\n          isPlain\n          dropdownItems={dropdownItems}\n          position={DropdownPosition.right}\n        />\n      </LevelItem>\n    </Level>\n  );\n};\n","import { AxiosError } from 'axios';\n\nexport interface IApiErrorData {\n  code: string;\n  href: string\n  id: number\n  kind: string\n  reason: string\n}\n\nconst isServiceApiError = (error: Error): error is AxiosError<IApiErrorData> => {\n  return (error as AxiosError<IApiErrorData>).response?.data.code !== undefined;\n}\n\nenum ErrorCodes {\n  UNAUTHORIZED_USER = \"MGD-SERV-API-4\",\n  DUPLICATE_INSTANCE_NAME = \"MGD-SERV-API-36\"\n}\n\nexport {\n  ErrorCodes,\n  isServiceApiError\n}\n"],"sourceRoot":""}