{"version":3,"file":"8627.a3817a5e.js","mappings":"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","sources":["webpack://kas-ui/./src/app/api.ts","webpack://kas-ui/./src/app/modals/KasModalLoader.tsx","webpack://kas-ui/./src/app/modules/InstanceDrawer/InstanceDrawerFederated.tsx","webpack://kas-ui/./src/app/modules/InstanceDrawer/tabs.ts","webpack://kas-ui/./src/app/modules/OpenshiftStreams/dialogs/CreateInstance/hooks/useCreateInstance.ts","webpack://kas-ui/./src/app/models/kafka.ts"],"sourcesContent":["import { useAuth, useConfig } from \"@rhoas/app-services-ui-shared\";\nimport { AppServicesApi } from \"@rhoas/account-management-sdk\";\nimport { Configuration, DefaultApi } from \"@rhoas/kafka-management-sdk\";\nimport {\n  AxiosCacheRequestConfig,\n  createCacheAdapter,\n} from \"axios-simple-cache-adapter\";\nimport axios from \"axios\";\nimport { useCallback } from \"react\";\n\nconst adapter = createCacheAdapter({\n  debug: localStorage.getItem(\"log-axios\") !== null,\n});\n\nexport const useKms = () => {\n  const auth = useAuth();\n  const {\n    kas: { apiBasePath: kasBasePath },\n  } = useConfig();\n\n  return useCallback(() => {\n    const kmsApi = new DefaultApi(\n      new Configuration({\n        accessToken: auth.kas.getToken(),\n        basePath: kasBasePath,\n      }),\n      undefined,\n      axios.create({\n        adapter,\n        cache: 1000 * 15,\n      } as AxiosCacheRequestConfig)\n    );\n\n    return kmsApi;\n  }, [auth.kas, kasBasePath]);\n};\n\nexport const useAms = () => {\n  const auth = useAuth();\n  const {\n    ams: { apiBasePath: amsBasePath },\n  } = useConfig();\n\n  return useCallback(() => {\n    const amsApi = new AppServicesApi(\n      new Configuration({\n        accessToken: auth.ams.getToken(),\n        basePath: amsBasePath,\n      }),\n      undefined,\n      axios.create({\n        adapter,\n        cache: 1000 * 15,\n      } as AxiosCacheRequestConfig)\n    );\n\n    return amsApi;\n  }, [amsBasePath, auth.ams]);\n};\n","// A map of modal components to their lazy loaded implementations\nimport { FunctionComponent, LazyExoticComponent, lazy } from \"react\";\n\nimport { useTranslation } from \"react-i18next\";\nimport {\n  CreateInstanceProps,\n  CreateServiceAccountProps,\n  DeleteInstanceProps,\n  DeleteServiceAccountProps,\n  ModalRegistry,\n  ModalType,\n  ResetServiceAccountCredentialsProps,\n  useModal,\n  TransferOwnershipProps,\n} from \"@rhoas/app-services-ui-shared\";\n\nexport const useKasModals = (): ModalRegistry => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n  return {\n    [ModalType.KasCreateInstance]: {\n      lazyComponent: lazy(\n        () =>\n          import(\n            /* webpackPrefetch: true */ \"@app/modules/OpenshiftStreams/dialogs/CreateInstance/CreateInstance\"\n          )\n      ) as LazyExoticComponent<FunctionComponent<CreateInstanceProps>>,\n      variant: \"medium\",\n      title: t(\"create_a_kafka_instance\"),\n    },\n    [ModalType.KasDeleteInstance]: {\n      lazyComponent: lazy(\n        () =>\n          import(\n            /* webpackPrefetch: true */ \"@app/modules/OpenshiftStreams/dialogs/DeleteInstance/DeleteInstanceConnected\"\n          )\n      ) as LazyExoticComponent<FunctionComponent<DeleteInstanceProps>>,\n      variant: \"small\",\n    },\n    [ModalType.KasTransferOwnership]: {\n      lazyComponent: lazy(\n        () =>\n          import(\n            /* webpackPrefetch: true */ \"@app/modules/OpenshiftStreams/dialogs/TransferOwnership/TransferOwnership\"\n          )\n      ) as LazyExoticComponent<FunctionComponent<TransferOwnershipProps>>,\n      variant: \"medium\",\n      title: t(\"change_owner\"),\n    },\n    [ModalType.KasCreateServiceAccount]: {\n      lazyComponent: lazy(\n        () =>\n          import(\n            /* webpackPrefetch: true */ \"@app/modules/ServiceAccounts/dialogs/CreateServiceAccount/CreateServiceAccountConnected\"\n          )\n      ) as LazyExoticComponent<FunctionComponent<CreateServiceAccountProps>>,\n      variant: \"medium\",\n      title: t(\"serviceAccount.create_a_service_account\"),\n    },\n    [ModalType.KasDeleteServiceAccount]: {\n      lazyComponent: lazy(\n        () =>\n          import(\n            /* webpackPrefetch: true */ \"@app/modules/ServiceAccounts/dialogs/DeleteServiceAccount/DeleteServiceAccount\"\n          )\n      ) as LazyExoticComponent<FunctionComponent<DeleteServiceAccountProps>>,\n      title: t(\"serviceAccount.delete_service_account\") + \"?\",\n      variant: \"small\",\n    },\n    [ModalType.KasResetServiceAccountCredentials]: {\n      lazyComponent: lazy(\n        () =>\n          import(\n            /* webpackPrefetch: true */ \"@app/modules/ServiceAccounts/dialogs/ResetServiceAccountCredentials/ResetServiceAccountCredentials\"\n          )\n      ) as LazyExoticComponent<\n        FunctionComponent<ResetServiceAccountCredentialsProps>\n      >,\n      title: `${t(\"serviceAccount.reset_service_account_credentials\")}?`,\n      variant: \"medium\",\n    },\n  };\n};\n\nexport const KasModalLoader: FunctionComponent = () => {\n  const { registerModals } = useModal();\n  const modals = useKasModals();\n  registerModals(modals);\n  return <></>;\n};\n","import { FunctionComponent } from \"react\";\nimport {\n  InstanceDrawer,\n  InstanceDrawerProps,\n} from \"@app/modules/InstanceDrawer/InstanceDrawer\";\nimport { ModalProvider } from \"@rhoas/app-services-ui-components\";\nimport { KasModalLoader } from \"@app/modals\";\n\nexport type InstanceDrawerFederatedProps = InstanceDrawerProps;\n\nconst InstanceDrawerFederated: FunctionComponent<\n  InstanceDrawerFederatedProps\n> = ({ children, ...props }) => {\n  return (\n    <ModalProvider>\n      <InstanceDrawer {...props}>{children}</InstanceDrawer>\n      <KasModalLoader />\n    </ModalProvider>\n  );\n};\n\nexport default InstanceDrawerFederated;\n","export enum InstanceDrawerTab {\n  DETAILS = \"details\",\n  CONNECTION = \"connection\",\n}\n","import {\n  asKafkaRequestPayload,\n  createEmptyNewKafkaRequestPayload,\n} from \"@app/models/kafka\";\nimport { CreateKafkaInstanceServices } from \"@rhoas/app-services-ui-components\";\nimport { isServiceApiError } from \"@app/utils/error\";\nimport { ErrorCodes } from \"@app/utils\";\nimport { useKms } from \"@app/api\";\n\n/**\n * Create Kafka instance hook that creates kafka instance\n * @param currentAMSPlan\n * @returns\n */\nexport const useCreateInstance =\n  (): CreateKafkaInstanceServices[\"onCreate\"] => {\n    const getApi = useKms();\n\n    return async (data, onSuccess, onError) => {\n      const apisService = getApi();\n\n      try {\n        const kafkaRequest = asKafkaRequestPayload(\n          createEmptyNewKafkaRequestPayload()\n        );\n        kafkaRequest.name = data.name;\n        kafkaRequest.cloud_provider = data.provider;\n        kafkaRequest.region = data.region;\n        kafkaRequest.plan = data.plan + \".\" + data.sizeId;\n        kafkaRequest.billing_model =\n          data.billing === \"prepaid\"\n            ? \"standard\"\n            : data.billing !== undefined\n            ? \"marketplace\"\n            : null;\n        kafkaRequest.billing_cloud_account_id =\n          data.billing && data.billing !== \"prepaid\"\n            ? data.billing.subscription\n            : null;\n        await apisService.createKafka(true, kafkaRequest);\n        onSuccess();\n      } catch (error) {\n        if (isServiceApiError(error)) {\n          const { code } = error?.response?.data || {};\n\n          switch (data.plan) {\n            case \"developer\":\n              switch (code) {\n                case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                  onError(\"name-taken\");\n                  break;\n\n                // regardless of the error, let's not give too many details to trial users\n                default:\n                  onError(\"developer-unavailable\");\n                  break;\n              }\n              break;\n\n            case \"standard\":\n              switch (code) {\n                case ErrorCodes.DUPLICATE_INSTANCE_NAME:\n                  onError(\"name-taken\");\n                  break;\n\n                case ErrorCodes.INTERNAL_CAPACITY_ERROR:\n                  onError(\"region-unavailable\");\n                  break;\n\n                case ErrorCodes.INSUFFICIENT_QUOTA:\n                  onError(\"insufficient-quota\");\n                  break;\n\n                default:\n                  console.error(\n                    \"useAvailableProvidersAndDefault\",\n                    \"createKafka unknown error\",\n                    error\n                  );\n                  onError(\"unknown\");\n              }\n              break;\n          }\n        } else {\n          console.error(\n            \"useAvailableProvidersAndDefault\",\n            \"createKafka unexpected error\",\n            error\n          );\n        }\n      }\n    };\n  };\n","import { KafkaRequestPayload } from \"@rhoas/kafka-management-sdk\";\nimport { Validated } from \"@app/models/validated\";\n\nexport type NewKafkaRequestPayload = {\n  cloud_provider: Validated<string | undefined>;\n  multi_az: Validated<boolean | undefined>;\n  region: Validated<string | undefined>;\n  name: Validated<string | undefined>;\n};\n\nexport const asKafkaRequestPayload = (\n  kafkaRequest: NewKafkaRequestPayload\n): KafkaRequestPayload => {\n  if (kafkaRequest.name.value === undefined) {\n    throw new Error(\"kafkaRequest.name must not be undefined\");\n  }\n  if (kafkaRequest.region.value === undefined) {\n    throw new Error(\"kafkaRequest.region must not be undefined\");\n  }\n  if (kafkaRequest.multi_az.value === undefined) {\n    throw new Error(\"kafkaRequest.multi_az must not be undefined\");\n  }\n  if (kafkaRequest.cloud_provider.value === undefined) {\n    throw new Error(\"kafkaRequest.cloud_provider must not be undefined\");\n  }\n  return {\n    name: kafkaRequest.name.value,\n    region: kafkaRequest.region.value,\n    cloud_provider: kafkaRequest.cloud_provider.value,\n  };\n};\n\nexport const isKafkaRequestInvalid = (\n  value: NewKafkaRequestPayload\n): boolean => {\n  return (\n    value.name.validated === \"error\" ||\n    value.region.validated === \"error\" ||\n    value.cloud_provider.validated === \"error\" ||\n    value.multi_az.validated === \"error\"\n  );\n};\n\nexport const createEmptyNewKafkaRequestPayload = (): NewKafkaRequestPayload => {\n  return {\n    cloud_provider: {\n      value: \"\",\n    },\n    multi_az: {\n      value: true,\n    },\n    region: {\n      value: \"\",\n    },\n    name: {\n      value: \"\",\n    },\n  };\n};\n"],"names":["adapter","createCacheAdapter","debug","localStorage","getItem","useKms","auth","useAuth","kas","apiBasePath","kasBasePath","useConfig","useCallback","DefaultApi","Configuration","accessToken","getToken","basePath","undefined","cache","useAms","ams","amsBasePath","AppServicesApi","KasModalLoader","registerModals","useModal","t","useTranslation","ModalType","lazyComponent","lazy","variant","title","useKasModals","children","props","ModalProvider","InstanceDrawerTab","useCreateInstance","getApi","data","onSuccess","onError","apisService","kafkaRequest","name","value","Error","region","multi_az","cloud_provider","asKafkaRequestPayload","provider","plan","sizeId","billing_model","billing","billing_cloud_account_id","subscription","createKafka","error","code","response","console"],"sourceRoot":""}