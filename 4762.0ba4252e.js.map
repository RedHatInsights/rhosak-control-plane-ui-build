{"version":3,"file":"4762.0ba4252e.js","mappings":"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","sources":["webpack://kas-ui/./src/app/common/MASErrorBoundary/MASErrorBoundary.tsx","webpack://kas-ui/./src/app/common/MASLoading/MASLoading.tsx","webpack://kas-ui/./src/app/common/MASDrawer/MASDrawer.tsx","webpack://kas-ui/./src/app/modules/InstanceDrawer/InstanceDrawerContent.tsx","webpack://kas-ui/./src/app/modules/InstanceDrawer/InstanceDrawer.tsx","webpack://kas-ui/./src/app/modules/OpenshiftStreams/dialogs/CreateInstance/hooks/useCreateKafkaInstanceServices.ts"],"sourcesContent":["import { Component, ErrorInfo, ReactNode } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { PageSection, Button } from \"@patternfly/react-core\";\nimport { MASEmptyState, MASEmptyStateVariant } from \"@app/common\";\nimport \"./MASErrorBoundary.css\";\n\ntype Props = WithTranslation &\n  RouteComponentProps & {\n    children?: ReactNode;\n  };\n\ntype State = {\n  hasError?: boolean;\n};\n\nclass MASErrorBoundary extends Component<Props, State> {\n  state: State = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error(\"error:\", error, errorInfo);\n  }\n\n  onClickButton = () => {\n    const { history } = this.props;\n    this.setState({ hasError: false });\n    history && history.push(\"/\");\n  };\n\n  render() {\n    const { t } = this.props;\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return (\n        <PageSection padding={{ default: \"noPadding\" }} isFilled>\n          <MASEmptyState\n            emptyStateProps={{\n              variant: MASEmptyStateVariant.UnexpectedError,\n            }}\n            emptyStateIconProps={{\n              className: \"icon-color\",\n            }}\n            titleProps={{\n              title: t(\"common.something_went_wrong\"),\n            }}\n            emptyStateBodyProps={{\n              body: t(\"unexpected_error\"),\n            }}\n          >\n            <Button onClick={this.onClickButton}>\n              {t(\"go_to_kafka_instances\")}\n            </Button>\n          </MASEmptyState>\n        </PageSection>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nconst MASErrorBoundaryComponent = withRouter(\n  withTranslation()(MASErrorBoundary)\n);\nexport { MASErrorBoundaryComponent as MASErrorBoundary };\n","import { FunctionComponent } from \"react\";\nimport {\n  Bullseye,\n  BullseyeProps,\n  Spinner,\n  SpinnerProps,\n} from \"@patternfly/react-core\";\n\nexport type MASLoadingProps = {\n  bullseyeProps?: Omit<BullseyeProps, \"children\">;\n  spinnerProps?: SpinnerProps;\n};\n\nexport const MASLoading: FunctionComponent<MASLoadingProps> = ({\n  bullseyeProps,\n  spinnerProps,\n}: MASLoadingProps) => (\n  <Bullseye {...bullseyeProps}>\n    <Spinner {...spinnerProps} />\n  </Bullseye>\n);\n","import { ReactNode, FC } from \"react\";\nimport {\n  Drawer,\n  DrawerProps,\n  DrawerContent,\n  DrawerPanelContent,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerActions,\n  DrawerCloseButton,\n  TextContent,\n  Text,\n  TextVariants,\n  Title,\n  TitleSizes,\n  DrawerPanelContentProps,\n  TextProps,\n  TitleProps,\n  DrawerContentBody,\n} from \"@patternfly/react-core\";\nimport { MASLoading } from \"@app/common\";\nimport \"./MASDrawer.css\";\n\nexport type MASDrawerProps = DrawerProps & {\n  children: ReactNode;\n  panelBodyContent?: ReactNode;\n  onClose: () => void;\n  drawerData?: unknown;\n  isLoading?: boolean;\n  drawerPanelContentProps?: Omit<DrawerPanelContentProps, \"children\">;\n  drawerHeaderProps?: {\n    text?: Omit<TextProps, \"children\" | \"ref\"> & {\n      label: string | undefined;\n    };\n    title?: Omit<TitleProps, \"children\"> & {\n      value: string | undefined;\n    };\n  };\n  [\"data-ouia-app-id\"]?: string;\n  notRequiredDrawerContentBackground?: boolean | undefined;\n  inlineAlertMessage?: ReactNode;\n};\n\nexport const MASDrawer: FC<MASDrawerProps> = ({\n  onClose,\n  isLoading = true,\n  drawerPanelContentProps,\n  drawerHeaderProps,\n  isExpanded,\n  children,\n  panelBodyContent,\n  onExpand,\n  notRequiredDrawerContentBackground,\n  \"data-ouia-app-id\": dataOuiaAppId,\n  inlineAlertMessage,\n}: MASDrawerProps) => {\n  const { widths, ...restDrawerPanelContentProps } =\n    drawerPanelContentProps || {};\n  const { text, title } = drawerHeaderProps || {};\n\n  const panelContent = (\n    <DrawerPanelContent\n      widths={widths || { default: \"width_50\" }}\n      {...restDrawerPanelContentProps}\n    >\n      {isLoading ? (\n        <MASLoading />\n      ) : (\n        <>\n          <DrawerHead>\n            <TextContent>\n              {text?.label && (\n                <Text\n                  component={text?.component || TextVariants.small}\n                  className={text?.className || \"pf-u-mb-0\"}\n                >\n                  {text?.label}\n                </Text>\n              )}\n              {title?.value && (\n                <Title\n                  headingLevel={title?.headingLevel || \"h2\"}\n                  size={title?.size || TitleSizes[\"xl\"]}\n                  className={title?.className || \"pf-u-mt-0\"}\n                >\n                  {title?.value}\n                </Title>\n              )}\n            </TextContent>\n            <DrawerActions>\n              <DrawerCloseButton onClick={onClose} />\n            </DrawerActions>\n          </DrawerHead>\n          <DrawerPanelBody>\n            {inlineAlertMessage}\n            {panelBodyContent}\n          </DrawerPanelBody>\n        </>\n      )}\n    </DrawerPanelContent>\n  );\n\n  return (\n    <Drawer\n      isExpanded={isExpanded}\n      onExpand={onExpand}\n      data-ouia-app-id={dataOuiaAppId}\n      data-testid=\"mk--instance__drawer\"\n      className=\"kas-drawer\"\n    >\n      <DrawerContent\n        panelContent={panelContent}\n        className={\n          notRequiredDrawerContentBackground ? \"pf-m-no-background\" : \"\"\n        }\n      >\n        <DrawerContentBody className=\"pf-u-display-flex pf-u-flex-direction-column\">\n          {\" \"}\n          {children}\n        </DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n\nexport default MASDrawer;\n","import { FunctionComponent, lazy, Suspense, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { addHours, parseISO } from \"date-fns\";\nimport { InstanceStatus } from \"@app/utils\";\nimport { MASLoading } from \"@app/common\";\nimport { Tab, Tabs, TabTitleText } from \"@patternfly/react-core\";\nimport { InstanceDrawerTab } from \"@app/modules/InstanceDrawer/tabs\";\nimport {\n  KafkaDetailsTab,\n  KafkaDetailsTabProps,\n  MarketPlaceSubscriptions,\n} from \"@rhoas/app-services-ui-components\";\nimport { InstanceDrawerContextProps } from \"@app/modules/InstanceDrawer/contexts/InstanceDrawerContext\";\nimport { useStandardQuota } from \"@app/modules/OpenshiftStreams/dialogs/CreateInstance/hooks\";\n\nexport const ResourcesTab = lazy(() => import(\"./ConnectionTab\"));\n\nexport type InstanceDrawerContentProps = {\n  instance: NonNullable<InstanceDrawerContextProps[\"drawerInstance\"]>;\n  activeTab: InstanceDrawerTab;\n  setActiveTab: (tab: InstanceDrawerTab) => void;\n  tokenEndPointUrl: string;\n};\n\nexport const InstanceDrawerContent: FunctionComponent<\n  InstanceDrawerContentProps\n> = ({ instance, activeTab, setActiveTab, tokenEndPointUrl }) => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n\n  const getQuota = useStandardQuota();\n\n  const [marketplaceSubscriptions, setMarketplaceSubscriptions] = useState<\n    MarketPlaceSubscriptions[]\n  >([]);\n\n  useEffect(() => {\n    (async () => {\n      const { marketplaceSubscriptions } = await getQuota();\n      setMarketplaceSubscriptions(marketplaceSubscriptions);\n    })();\n  }, [getQuota]);\n\n  const getExternalServer = () => {\n    const { bootstrap_server_host } = instance;\n    return bootstrap_server_host?.endsWith(\":443\")\n      ? bootstrap_server_host\n      : `${bootstrap_server_host}:443`;\n  };\n\n  const getAdminServerUrl = () => {\n    const { admin_api_server_url } = instance;\n    return admin_api_server_url ? `${admin_api_server_url}/openapi` : undefined;\n  };\n\n  const isKafkaPending =\n    instance.status === InstanceStatus.ACCEPTED ||\n    instance.status === InstanceStatus.PREPARING;\n\n  const marketplaceForBilling = marketplaceSubscriptions.find((ms) =>\n    ms.subscriptions.find((s) => s === instance.billing_cloud_account_id)\n  )?.marketplace;\n\n  const billing: KafkaDetailsTabProps[\"billing\"] =\n    instance.billing_model === \"standard\"\n      ? \"prepaid\"\n      : marketplaceForBilling\n      ? {\n          marketplace: marketplaceForBilling,\n          subscription: instance.billing_cloud_account_id,\n        }\n      : undefined;\n\n  return (\n    <Suspense fallback={<MASLoading />}>\n      <Tabs\n        activeKey={activeTab}\n        onSelect={(_, tab) => setActiveTab(tab as InstanceDrawerTab)}\n      >\n        <Tab\n          eventKey={InstanceDrawerTab.DETAILS}\n          title={<TabTitleText>{t(\"details\")}</TabTitleText>}\n        >\n          <KafkaDetailsTab\n            id={instance.id}\n            owner={instance.owner}\n            createdAt={parseISO(instance.created_at)}\n            updatedAt={parseISO(instance.updated_at)}\n            expiryDate={addHours(parseISO(instance.created_at), 48)}\n            size={instance.size.display_name}\n            ingress={\n              (instance.size.ingress_throughput_per_sec.bytes || 0) / 1048576\n            }\n            egress={\n              (instance.size.egress_throughput_per_sec.bytes || 0) / 1048576\n            }\n            storage={Math.round(\n              (instance.size.max_data_retention_size.bytes || 0) / 1073741824\n            )}\n            maxPartitions={instance.size.max_partitions}\n            connections={instance.size.total_max_connections}\n            connectionRate={instance.size.max_connection_attempts_per_sec}\n            messageSize={(instance.size.max_message_size.bytes || 0) / 1048576}\n            region={t(instance.region)}\n            instanceType={\n              instance.instance_type === \"standard\" ? \"standard\" : \"eval\"\n            }\n            billing={billing}\n          />\n        </Tab>\n        <Tab\n          eventKey={InstanceDrawerTab.CONNECTION.toString()}\n          title={<TabTitleText>{t(\"connection\")}</TabTitleText>}\n          data-testid=\"drawerStreams-tabConnect\"\n        >\n          <ResourcesTab\n            externalServer={getExternalServer()}\n            adminServerUrl={getAdminServerUrl()}\n            isKafkaPending={isKafkaPending}\n            tokenEndPointUrl={tokenEndPointUrl}\n            instanceId={instance.id}\n          />\n        </Tab>\n      </Tabs>\n    </Suspense>\n  );\n};\n","import { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { InstanceDrawerContent } from \"@app/modules/InstanceDrawer/InstanceDrawerContent\";\n\nimport \"./InstanceDrawer.css\";\nimport { MASDrawer } from \"@app/common\";\nimport { InstanceDrawerTab } from \"@app/modules/InstanceDrawer/tabs\";\nimport { InstanceDrawerContextProps } from \"@app/modules/InstanceDrawer/contexts/InstanceDrawerContext\";\n\nexport type InstanceDrawerProps = {\n  \"data-ouia-app-id\": string;\n} & InstanceDrawerContextProps;\n\nexport const InstanceDrawer: FunctionComponent<InstanceDrawerProps> = ({\n  \"data-ouia-app-id\": dataOuiaAppId,\n  isDrawerOpen,\n  drawerInstance,\n  setDrawerActiveTab,\n  drawerActiveTab,\n  closeDrawer,\n  tokenEndPointUrl,\n  children,\n}) => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n\n  return (\n    <MASDrawer\n      isExpanded={isDrawerOpen}\n      isLoading={drawerInstance === undefined}\n      onClose={closeDrawer}\n      panelBodyContent={\n        drawerInstance && (\n          <InstanceDrawerContent\n            tokenEndPointUrl={tokenEndPointUrl}\n            activeTab={drawerActiveTab || InstanceDrawerTab.DETAILS}\n            instance={drawerInstance}\n            setActiveTab={setDrawerActiveTab}\n          />\n        )\n      }\n      drawerHeaderProps={{\n        text: { label: t(\"instance_name\") },\n        title: { value: drawerInstance?.name, headingLevel: \"h1\" },\n      }}\n      data-ouia-app-id={dataOuiaAppId}\n      notRequiredDrawerContentBackground={drawerInstance === undefined}\n    >\n      {children}\n    </MASDrawer>\n  );\n};\n","import { useAms, useKms } from \"@app/api\";\nimport { InstanceType } from \"@app/utils\";\nimport {\n  CloudProvider,\n  CloudProviderInfo,\n  CreateKafkaInstanceServices,\n  MarketPlace,\n  MarketPlaceSubscriptions,\n  RegionInfo,\n  Size,\n  StandardSizes,\n} from \"@rhoas/app-services-ui-components\";\nimport { useAuth } from \"@rhoas/app-services-ui-shared\";\nimport { CloudRegion, SupportedKafkaSize } from \"@rhoas/kafka-management-sdk\";\nimport { useCallback } from \"react\";\n\nconst standardId = \"RHOSAK\" as const;\nconst developerId = \"RHOSAKTrial\" as const;\nconst resourceName = \"rhosak\" as const;\n\nexport const useStandardQuota = () => {\n  const getApi = useAms();\n  return useCallback(async () => {\n    const api = getApi();\n    const account = await api.apiAccountsMgmtV1CurrentAccountGet();\n    const orgId = account?.data?.organization?.id;\n    if (!orgId) {\n      throw new Error(\"User has no organization id\");\n    }\n    const quotaResponse =\n      await api.apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet(\n        orgId,\n        undefined,\n        true,\n        undefined,\n        true\n      );\n    if (quotaResponse.status !== 200) {\n      throw new Error(quotaResponse.statusText);\n    }\n    const standardQuotas = quotaResponse.data.items?.filter((q) =>\n      q.related_resources?.find(\n        (r) => r.resource_name === resourceName && r.product === standardId\n      )\n    );\n\n    const prepaidQuota = standardQuotas?.find((q) =>\n      q.related_resources?.find((r) => r.billing_model === \"standard\")\n    );\n\n    const marketplaceQuotas = standardQuotas?.filter((q) =>\n      q.related_resources?.find((r) => r.billing_model === \"marketplace\")\n    );\n\n    const hasTrialQuota =\n      quotaResponse.data.items?.some((q) =>\n        q.related_resources?.find(\n          (r) => r.resource_name === resourceName && r.product === developerId\n        )\n      ) || false;\n\n    const remainingPrepaidQuota = prepaidQuota\n      ? prepaidQuota.allowed - prepaidQuota.consumed\n      : undefined;\n    const remainingMarketplaceQuota = marketplaceQuotas?.reduce(\n      (agg, q) => q.allowed - q.consumed + agg,\n      0\n    );\n    const unaggregatedSubscriptions = marketplaceQuotas\n      ?.filter((q) => q.cloud_accounts !== undefined)\n      .flatMap((q) => q.cloud_accounts!);\n    const subscriptionMarketplaces = Array.from(\n      new Set(\n        unaggregatedSubscriptions?.map(\n          (s) => s.cloud_provider_id as MarketPlace\n        )\n      )\n    );\n    const marketplaceSubscriptions: MarketPlaceSubscriptions[] =\n      unaggregatedSubscriptions\n        ? subscriptionMarketplaces.map((marketplace) => ({\n            marketplace,\n            subscriptions: unaggregatedSubscriptions\n              .filter((s) => s.cloud_provider_id === marketplace)\n              .map((s) => s.cloud_account_id!),\n          }))\n        : [];\n\n    return {\n      hasTrialQuota,\n      remainingPrepaidQuota,\n      remainingMarketplaceQuota,\n      marketplaceSubscriptions,\n    };\n  }, [getApi]);\n};\n\nexport const useCheckStandardQuota =\n  (): CreateKafkaInstanceServices[\"checkStandardQuota\"] => {\n    const getQuota = useStandardQuota();\n    const checkStandardQuota: CreateKafkaInstanceServices[\"checkStandardQuota\"] =\n      useCallback(\n        async ({ onNoQuotaAvailable, onOutOfQuota, onQuotaAvailable }) => {\n          try {\n            const {\n              hasTrialQuota,\n              remainingPrepaidQuota,\n              remainingMarketplaceQuota,\n              marketplaceSubscriptions,\n            } = await getQuota();\n\n            if (remainingMarketplaceQuota || remainingPrepaidQuota) {\n              if (\n                remainingMarketplaceQuota &&\n                remainingMarketplaceQuota === 0 &&\n                remainingPrepaidQuota &&\n                remainingPrepaidQuota === 0\n              ) {\n                onOutOfQuota({\n                  quota: {\n                    marketplaceSubscriptions,\n                  },\n                });\n              } else {\n                onQuotaAvailable({\n                  quota: {\n                    remainingPrepaidQuota,\n                    remainingMarketplaceQuota,\n                    marketplaceSubscriptions,\n                  },\n                });\n              }\n            } else {\n              onNoQuotaAvailable({ hasTrialQuota });\n            }\n          } catch (e) {\n            onNoQuotaAvailable({ hasTrialQuota: false });\n          }\n        },\n        [getQuota]\n      );\n    return checkStandardQuota;\n  };\n\nexport const useCheckDeveloperAvailability =\n  (): CreateKafkaInstanceServices[\"checkDeveloperAvailability\"] => {\n    const { getUsername } = useAuth();\n    const getApi = useKms();\n    const checkDeveloperAvailability: CreateKafkaInstanceServices[\"checkDeveloperAvailability\"] =\n      useCallback(\n        async ({ onAvailable, onUnavailable, onUsed }) => {\n          try {\n            const api = getApi();\n            const loggedInUser = await getUsername();\n            const filter = `owner = ${loggedInUser}`;\n\n            const res = await api.getKafkas(\"\", \"\", \"\", filter);\n            if (res.data.items) {\n              const hasTrialRunning = res.data.items.some(\n                (k) =>\n                  k?.instance_type === InstanceType?.eval ||\n                  k?.instance_type === InstanceType?.developer\n              );\n              if (hasTrialRunning) {\n                onUsed();\n              } else {\n                onAvailable();\n              }\n            }\n          } catch (e) {\n            onUnavailable();\n          }\n        },\n        [getApi, getUsername]\n      );\n    return checkDeveloperAvailability;\n  };\n\nexport const useFetchProvidersWithRegions =\n  (): CreateKafkaInstanceServices[\"fetchProvidersWithRegions\"] => {\n    const getApi = useKms();\n    const fetchRegions = useFetchProviderRegions();\n    const fetchProvidersWithRegions: CreateKafkaInstanceServices[\"fetchProvidersWithRegions\"] =\n      useCallback(\n        async (plan, { onAvailable, onUnavailable }) => {\n          try {\n            const api = getApi();\n            const res = await api.getCloudProviders();\n            const allProviders = res?.data?.items || [];\n\n            const providers = await Promise.all(\n              allProviders\n                .filter((p) => p.enabled)\n                .map(async (provider) => {\n                  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                  const regions = await fetchRegions(provider.id!, plan);\n                  const providerInfo: CloudProviderInfo = {\n                    id: provider.id as CloudProvider,\n                    displayName: provider.display_name!,\n                    regions,\n                  };\n                  return providerInfo;\n                })\n            );\n            const firstProvider = providers[0];\n            onAvailable({ providers, defaultProvider: firstProvider?.id });\n          } catch (e) {\n            onUnavailable();\n          }\n        },\n        [fetchRegions, getApi]\n      );\n    return fetchProvidersWithRegions;\n  };\n\nexport const useFetchProviderRegions = () => {\n  const getApi = useKms();\n  return useCallback(\n    async function fetchProviderRegions(\n      provider: string,\n      instanceType: string\n    ): Promise<Array<RegionInfo & Pick<CloudRegion, \"capacity\">>> {\n      const api = getApi();\n      const res = await api.getCloudProviderRegions(provider);\n\n      if (!res?.data?.items) {\n        return [];\n      }\n\n      const regionsForInstance = res.data.items.filter(\n        (region) =>\n          region.enabled &&\n          region.capacity.some((c) => c.instance_type === instanceType)\n      );\n\n      return regionsForInstance.map((r) => {\n        const max_capacity_reached = r.capacity?.some(\n          (c) =>\n            c.instance_type === instanceType && c.available_sizes?.length === 0\n        );\n\n        return {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          id: r.id!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          displayName: r.display_name!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          isDisabled: max_capacity_reached,\n          capacity: r.capacity,\n        };\n      });\n    },\n    [getApi]\n  );\n};\n\nexport const useGetSizes = (instanceType: \"developer\" | \"standard\") => {\n  const getApi = useKms();\n  const fetchRegions = useFetchProviderRegions();\n  return useCallback(\n    async (provider: CloudProvider, region: string) => {\n      const api = getApi();\n      const regions = await fetchRegions(provider, instanceType);\n      const regionInfo = regions.find((r) => r.id === region);\n      const availableSizes =\n        regionInfo?.capacity.flatMap((c) =>\n          c.available_sizes.map((s) => `${c.instance_type}.${s}`)\n        ) || [];\n      const sizes = await api.getInstanceTypesByCloudProviderAndRegion(\n        provider,\n        region\n      );\n      if (!sizes?.data?.instance_types) {\n        throw new Error(`No instance_types from backend`);\n      }\n\n      const standardSizes =\n        sizes?.data?.instance_types.find((i) => i.id === instanceType)?.sizes ||\n        [];\n\n      return standardSizes.map(\n        apiSizeToComponentSize.bind(\n          undefined,\n          (id) => !availableSizes.includes(`${instanceType}.${id}`)\n        )\n      );\n    },\n    [fetchRegions, getApi, instanceType]\n  );\n};\n\nexport const useGetStandardSizes =\n  (): CreateKafkaInstanceServices[\"getStandardSizes\"] => {\n    const getSizes = useGetSizes(\"standard\");\n    return getSizes;\n  };\n\nexport const useGetTrialSizes =\n  (): CreateKafkaInstanceServices[\"getTrialSizes\"] => {\n    const getStandardSizes = useGetSizes(\"standard\");\n    const getDeveloperSizes = useGetSizes(\"developer\");\n    return useCallback(\n      async (provider, region) => {\n        let standardSizes: StandardSizes;\n        try {\n          standardSizes = await getStandardSizes(provider, region);\n        } catch (e) {\n          // It can happen that the selected provider doesn't support standard instances.\n          // In this case we provide a faux sample list of sizes just to make the slider happy.\n          standardSizes = [\n            { id: \"1\", displayName: \"1\" },\n            { id: \"2\", displayName: \"2\" },\n          ] as StandardSizes;\n        }\n        const trialSizes = await getDeveloperSizes(provider, region);\n        return {\n          standard: standardSizes,\n          trial: trialSizes[0],\n        };\n      },\n      [getDeveloperSizes, getStandardSizes]\n    );\n  };\n\nfunction apiSizeToComponentSize(\n  isDisabled: (id: string) => boolean,\n  apiSize: SupportedKafkaSize\n): Size & { trialDurationHours: number } {\n  const s = apiSize as Required<SupportedKafkaSize>;\n  return {\n    id: s.id,\n    displayName: s.display_name,\n    quota: s.quota_consumed,\n    ingress: (s.ingress_throughput_per_sec.bytes || 0) / 1048576,\n    egress: (s.egress_throughput_per_sec.bytes || 0) / 1048576,\n    storage: Math.round((s.max_data_retention_size.bytes || 0) / 1073741824),\n    connections: s.total_max_connections,\n    connectionRate: s.max_connection_attempts_per_sec,\n    maxPartitions: s.max_partitions,\n    messageSize: (s.max_message_size.bytes || 0) / 1048576,\n    status: s.maturity_status === \"stable\" ? \"stable\" : \"preview\",\n    trialDurationHours: s.lifespan_seconds ? s.lifespan_seconds / 60 / 60 : 0,\n    isDisabled: isDisabled(s.id),\n  };\n}\n"],"names":["Component","state","hasError","onClickButton","history","this","props","setState","push","static","componentDidCatch","error","errorInfo","console","render","t","PageSection","padding","default","isFilled","MASEmptyState","emptyStateProps","variant","emptyStateIconProps","className","titleProps","title","emptyStateBodyProps","body","Button","onClick","children","withRouter","withTranslation","MASLoading","bullseyeProps","spinnerProps","Bullseye","Spinner","onClose","isLoading","drawerPanelContentProps","drawerHeaderProps","isExpanded","panelBodyContent","onExpand","notRequiredDrawerContentBackground","dataOuiaAppId","inlineAlertMessage","widths","restDrawerPanelContentProps","text","panelContent","DrawerPanelContent","DrawerHead","TextContent","label","Text","component","TextVariants","value","Title","headingLevel","size","TitleSizes","DrawerActions","DrawerCloseButton","DrawerPanelBody","Drawer","DrawerContent","DrawerContentBody","ResourcesTab","lazy","InstanceDrawerContent","instance","activeTab","setActiveTab","tokenEndPointUrl","useTranslation","getQuota","marketplaceSubscriptions","setMarketplaceSubscriptions","useState","useEffect","isKafkaPending","status","marketplaceForBilling","find","ms","subscriptions","s","billing_cloud_account_id","marketplace","billing","billing_model","subscription","undefined","Suspense","fallback","Tabs","activeKey","onSelect","_","tab","Tab","eventKey","TabTitleText","KafkaDetailsTab","id","owner","createdAt","parseISO","created_at","updatedAt","updated_at","expiryDate","addHours","display_name","ingress","ingress_throughput_per_sec","bytes","egress","egress_throughput_per_sec","storage","Math","round","max_data_retention_size","maxPartitions","max_partitions","connections","total_max_connections","connectionRate","max_connection_attempts_per_sec","messageSize","max_message_size","region","instanceType","instance_type","externalServer","bootstrap_server_host","endsWith","getExternalServer","adminServerUrl","admin_api_server_url","getAdminServerUrl","instanceId","InstanceDrawer","isDrawerOpen","drawerInstance","setDrawerActiveTab","drawerActiveTab","closeDrawer","name","resourceName","useStandardQuota","getApi","useCallback","api","account","apiAccountsMgmtV1CurrentAccountGet","orgId","data","organization","Error","quotaResponse","apiAccountsMgmtV1OrganizationsOrgIdQuotaCostGet","statusText","standardQuotas","items","filter","q","related_resources","r","resource_name","product","prepaidQuota","marketplaceQuotas","hasTrialQuota","some","remainingPrepaidQuota","allowed","consumed","remainingMarketplaceQuota","reduce","agg","unaggregatedSubscriptions","cloud_accounts","flatMap","subscriptionMarketplaces","Array","from","Set","map","cloud_provider_id","cloud_account_id","useCheckStandardQuota","onNoQuotaAvailable","onOutOfQuota","onQuotaAvailable","quota","e","useCheckDeveloperAvailability","getUsername","useAuth","checkDeveloperAvailability","onAvailable","onUnavailable","onUsed","res","getKafkas","k","useFetchProvidersWithRegions","fetchRegions","useFetchProviderRegions","fetchProvidersWithRegions","plan","getCloudProviders","allProviders","providers","Promise","all","p","enabled","provider","regions","displayName","firstProvider","defaultProvider","getCloudProviderRegions","capacity","c","max_capacity_reached","available_sizes","length","isDisabled","useGetSizes","regionInfo","availableSizes","sizes","getInstanceTypesByCloudProviderAndRegion","instance_types","i","apiSizeToComponentSize","bind","includes","useGetStandardSizes","useGetTrialSizes","getStandardSizes","getDeveloperSizes","standardSizes","standard","trial","apiSize","quota_consumed","maturity_status","trialDurationHours","lifespan_seconds"],"sourceRoot":""}