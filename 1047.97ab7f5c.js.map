{"version":3,"file":"1047.97ab7f5c.js","mappings":"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","sources":["webpack://kas-ui/./src/app/common/MASPageNotFound/MASPageNotFound.tsx","webpack://kas-ui/./src/app/common/MASAlerts/MASAlerts.tsx","webpack://kas-ui/./src/app/common/MASAlerts/MASAlertToastGroup.tsx","webpack://kas-ui/./src/app/common/MASErrorBoundary/MASErrorBoundary.tsx","webpack://kas-ui/./src/app/common/MASLoading/MASLoading.tsx","webpack://kas-ui/./src/app/contexts/federated.ts","webpack://kas-ui/./src/app/modules/InstanceDrawer/contexts/InstanceDrawerContext.tsx","webpack://kas-ui/./src/app/utils/useDocumentTitle.ts","webpack://kas-ui/./src/app/modules/ServiceAccounts/components/UserUnauthorized.tsx","webpack://kas-ui/./src/app/modules/ServiceAccounts/components/ServiceAccountsEmpty.tsx","webpack://kas-ui/./src/app/modules/ServiceAccounts/components/ServiceAccountsTableView/ServiceAccountsToolbar.tsx","webpack://kas-ui/./src/app/modules/ServiceAccounts/components/ServiceAccountsTableView/ServiceAccountsTableView.tsx","webpack://kas-ui/./src/app/modules/ServiceAccounts/components/ServiceAccountsTableSection.tsx","webpack://kas-ui/./src/app/modules/ServiceAccounts/components/ServiceAccountsTableConnected.tsx","webpack://kas-ui/./src/app/modules/ServiceAccounts/ServiceAccounts.tsx","webpack://kas-ui/./src/app/routes.tsx","webpack://kas-ui/./src/app/modules/OpenshiftStreams/OpenshiftStreamsStandalone.tsx","webpack://kas-ui/./src/app/modules/ServiceAccounts/ServiceAccountsConnected.tsx","webpack://kas-ui/./src/app/bgimages/Patternfly-Logo.svg","webpack://kas-ui/./src/app/auth/keycloak/keycloakAuth.ts","webpack://kas-ui/./src/app/auth/keycloak/KeycloakContext.tsx","webpack://kas-ui/./src/app/AppLayout/AppLayout.tsx","webpack://kas-ui/./src/app/index.tsx","webpack://kas-ui/./src/bootstrap.tsx"],"sourcesContent":["import { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { PageSection, Button } from \"@patternfly/react-core\";\nimport { useHistory } from \"react-router-dom\";\nimport { MASEmptyState, MASEmptyStateVariant } from \"@app/common\";\n\nconst MASPageNotFound: FunctionComponent = () => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n\n  function GoHomeBtn() {\n    const history = useHistory();\n    function handleClick() {\n      history.push(\"/\");\n    }\n    return <Button onClick={handleClick}>{t(\"return_to_home_page\")}</Button>;\n  }\n\n  return (\n    <PageSection padding={{ default: \"noPadding\" }} isFilled>\n      <MASEmptyState\n        emptyStateProps={{ variant: MASEmptyStateVariant.PageNotFound }}\n        titleProps={{ title: t(\"404_page_does_not_exist\") }}\n        emptyStateBodyProps={{\n          body: t(\"we_cannot_find_the_page_you_are_looking_for\"),\n        }}\n      >\n        <GoHomeBtn />\n      </MASEmptyState>\n    </PageSection>\n  );\n};\n\nexport { MASPageNotFound };\n","import { FunctionComponent, useEffect, useState } from \"react\";\nimport { MASAlertToastGroup } from \"@app/common\";\nimport { AlertContext, AlertProps } from \"@rhoas/app-services-ui-shared\";\n\ntype TimeOut = {\n  key: string | undefined;\n  timeOut: ReturnType<typeof setTimeout> | undefined;\n};\n\nexport const AlertProvider: FunctionComponent = ({ children }) => {\n  const [alerts, setAlerts] = useState<AlertProps[]>([]);\n  const [timers, setTimers] = useState<TimeOut[]>([]);\n\n  useEffect(() => {\n    const timersKeys = timers.map((timer) => timer.key);\n    const timeOuts = alerts\n      .filter((alert) => !timersKeys.includes(alert?.id))\n      .map((alert) => {\n        const { id = \"\" } = alert;\n        const timeOut: ReturnType<typeof setTimeout> = setTimeout(\n          () => hideAlert(id),\n          8000\n        );\n        return { key: alert.id, timeOut } as TimeOut;\n      });\n    setTimers([...timers, ...timeOuts]);\n    return () =>\n      timers.forEach((timer) => timer?.timeOut && clearTimeout(timer.timeOut));\n  }, [alerts, timers]);\n\n  const createId = () => new Date().getTime();\n\n  const hideAlert = (key: string | undefined) => {\n    setAlerts((alerts) => [...alerts.filter((el) => el.id !== key)]);\n    setTimers((timers) => [...timers.filter((timer) => timer.key === key)]);\n  };\n\n  const addAlert = (props: AlertProps) => {\n    const id = createId().toString();\n    setAlerts([...alerts, { ...props, id }]);\n  };\n\n  return (\n    <AlertContext.Provider value={{ addAlert }}>\n      <MASAlertToastGroup alerts={alerts} onCloseAlert={hideAlert} />\n      {children}\n    </AlertContext.Provider>\n  );\n};\n","import { FunctionComponent } from \"react\";\nimport { AlertProps } from \"@rhoas/app-services-ui-shared\";\nimport {\n  AlertGroup,\n  Alert,\n  AlertActionCloseButton,\n  AlertVariant,\n} from \"@patternfly/react-core\";\n\ntype AlertToastGroupProps = {\n  alerts: AlertProps[];\n  onCloseAlert: (key: string | undefined) => void;\n};\n\nexport const MASAlertToastGroup: FunctionComponent<AlertToastGroupProps> = ({\n  alerts,\n  onCloseAlert,\n}: AlertToastGroupProps) => {\n  return (\n    <AlertGroup isToast>\n      {alerts.map(\n        ({ id, variant, title, description, dataTestId, ...rest }) => (\n          <Alert\n            key={id}\n            isLiveRegion\n            variant={AlertVariant[variant]}\n            variantLabel=\"\"\n            title={title}\n            actionClose={\n              <AlertActionCloseButton\n                title={title}\n                onClose={() => onCloseAlert(id)}\n              />\n            }\n            data-testid={dataTestId}\n            {...rest}\n          >\n            {description}\n          </Alert>\n        )\n      )}\n    </AlertGroup>\n  );\n};\n","import { Component, ErrorInfo, ReactNode } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { PageSection, Button } from \"@patternfly/react-core\";\nimport { MASEmptyState, MASEmptyStateVariant } from \"@app/common\";\nimport \"./MASErrorBoundary.css\";\n\ntype Props = WithTranslation &\n  RouteComponentProps & {\n    children?: ReactNode;\n  };\n\ntype State = {\n  hasError?: boolean;\n};\n\nclass MASErrorBoundary extends Component<Props, State> {\n  state: State = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error(\"error:\", error, errorInfo);\n  }\n\n  onClickButton = () => {\n    const { history } = this.props;\n    this.setState({ hasError: false });\n    history && history.push(\"/\");\n  };\n\n  render() {\n    const { t } = this.props;\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return (\n        <PageSection padding={{ default: \"noPadding\" }} isFilled>\n          <MASEmptyState\n            emptyStateProps={{\n              variant: MASEmptyStateVariant.UnexpectedError,\n            }}\n            emptyStateIconProps={{\n              className: \"icon-color\",\n            }}\n            titleProps={{\n              title: t(\"common.something_went_wrong\"),\n            }}\n            emptyStateBodyProps={{\n              body: t(\"unexpected_error\"),\n            }}\n          >\n            <Button onClick={this.onClickButton}>\n              {t(\"go_to_kafka_instances\")}\n            </Button>\n          </MASEmptyState>\n        </PageSection>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nconst MASErrorBoundaryComponent = withRouter(\n  withTranslation()(MASErrorBoundary)\n);\nexport { MASErrorBoundaryComponent as MASErrorBoundary };\n","import { FunctionComponent } from \"react\";\nimport {\n  Bullseye,\n  BullseyeProps,\n  Spinner,\n  SpinnerProps,\n} from \"@patternfly/react-core\";\n\nexport type MASLoadingProps = {\n  bullseyeProps?: Omit<BullseyeProps, \"children\">;\n  spinnerProps?: SpinnerProps;\n};\n\nexport const MASLoading: FunctionComponent<MASLoadingProps> = ({\n  bullseyeProps,\n  spinnerProps,\n}: MASLoadingProps) => (\n  <Bullseye {...bullseyeProps}>\n    <Spinner {...spinnerProps} />\n  </Bullseye>\n);\n","import { createContext, useContext } from \"react\";\nimport { Principal } from \"@rhoas/app-services-ui-shared\";\n\nexport type FederatedProps = {\n  preCreateInstance?: (isOpen: boolean) => Promise<boolean>;\n  shouldOpenCreateModal: () => Promise<boolean>;\n  getAllUserAccounts?: () => Principal[];\n};\n\nexport const FederatedContext = createContext<FederatedProps | undefined>(\n  undefined\n);\nexport const useFederated = (): FederatedProps | undefined =>\n  useContext(FederatedContext);\n","import { FunctionComponent, createContext, useContext } from \"react\";\nimport { InstanceDrawerTab } from \"@app/modules/InstanceDrawer/tabs\";\nimport { KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport { SupportedKafkaSize } from \"@rhoas/kafka-management-sdk/dist/generated/model/supported-kafka-size\";\n\nexport type InstanceDrawerContextProps = {\n  isDrawerOpen: boolean;\n  drawerInstance:\n    | Required<KafkaRequest & { size: Required<SupportedKafkaSize> }>\n    | undefined;\n  setDrawerInstance: (id: string) => void;\n  drawerActiveTab: InstanceDrawerTab | undefined;\n  setDrawerActiveTab: (tab: InstanceDrawerTab) => void;\n  openDrawer: (tab?: InstanceDrawerTab) => void;\n  closeDrawer: () => void;\n  tokenEndPointUrl: string;\n};\n\nexport const InstanceDrawerContext = createContext<\n  InstanceDrawerContextProps | undefined\n>(undefined);\n\nexport const useInstanceDrawer = (): InstanceDrawerContextProps => {\n  const answer = useContext(InstanceDrawerContext);\n  if (answer === undefined) {\n    throw new Error(\"must be used inside a InstanceDrawerContext provider\");\n  }\n  return answer;\n};\n\nexport const InstanceDrawerContextProvider: FunctionComponent<\n  InstanceDrawerContextProps\n> = ({ children, ...props }) => {\n  return (\n    <InstanceDrawerContext.Provider value={props}>\n      {children}\n    </InstanceDrawerContext.Provider>\n  );\n};\n","import { useEffect } from \"react\";\n\n// a custom hook for setting the page title\nexport function useDocumentTitle(title: string): void {\n  useEffect(() => {\n    const originalTitle = document.title;\n    document.title = title;\n\n    return () => {\n      document.title = originalTitle;\n    };\n  }, [title]);\n}\n","import { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { PageSection, PageSectionVariants } from \"@patternfly/react-core\";\nimport { MASEmptyState } from \"@app/common\";\nimport LockIcon from \"@patternfly/react-icons/dist/js/icons/lock-icon\";\n\nexport const UserUnauthorized: FunctionComponent = () => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n  return (\n    <PageSection\n      variant={PageSectionVariants.default}\n      padding={{ default: \"noPadding\" }}\n      isFilled\n    >\n      <MASEmptyState\n        titleProps={{\n          title: t(\n            \"serviceAccount.unauthorized_access_to_service_accounts_title\"\n          ),\n          headingLevel: \"h2\",\n        }}\n        emptyStateIconProps={{\n          icon: LockIcon,\n        }}\n        emptyStateBodyProps={{\n          body: t(\n            \"serviceAccount.unauthorized_access_to_service_accounts_info\"\n          ),\n        }}\n      />\n    </PageSection>\n  );\n};\n","import { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { PageSection } from \"@patternfly/react-core\";\nimport { MASEmptyState, MASEmptyStateVariant } from \"@app/common\";\nimport { ModalType, useModal } from \"@rhoas/app-services-ui-shared\";\n\nexport type ServiceAccountsEmptyProps = {\n  fetchServiceAccounts: () => Promise<void>;\n};\nexport const ServiceAccountsEmpty: FunctionComponent<\n  ServiceAccountsEmptyProps\n> = ({ fetchServiceAccounts }) => {\n  const { showModal } = useModal<ModalType.KasCreateServiceAccount>();\n\n  const handleCreateModal = () => {\n    showModal(ModalType.KasCreateServiceAccount, {\n      onCreate: fetchServiceAccounts,\n    });\n  };\n\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n  return (\n    <PageSection padding={{ default: \"noPadding\" }} isFilled>\n      <MASEmptyState\n        emptyStateProps={{\n          variant: MASEmptyStateVariant.NoItems,\n        }}\n        titleProps={{\n          title: t(\"serviceAccount.you_do_not_have_any_service_accounts_yet\"),\n        }}\n        emptyStateBodyProps={{\n          body: t(\"serviceAccount.create_service_account_to_get_started\"),\n        }}\n        buttonProps={{\n          title: t(\"serviceAccount.create_service_account\"),\n          onClick: handleCreateModal,\n          [\"data-testid\"]: \"emptyStateStreams-buttonCreateServiceAccount\",\n        }}\n      />\n    </PageSection>\n  );\n};\n","import { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"@patternfly/react-core\";\nimport { MASToolbar, ToolbarItemProps } from \"@app/common\";\n\nexport type ServiceAccountsToolbarProps = {\n  onCreateServiceAccount: () => void;\n};\n\nconst ServiceAccountsToolbar: FC<ServiceAccountsToolbarProps> = ({\n  onCreateServiceAccount: onCreateServiceAccount,\n}: ServiceAccountsToolbarProps) => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n  const toolbarItems: ToolbarItemProps[] = [\n    {\n      item: (\n        <Button\n          variant=\"primary\"\n          onClick={onCreateServiceAccount}\n          data-testid={\"tableServiceAccounts-buttonCreateServiceAccount\"}\n        >\n          {t(\"serviceAccount.create_service_account\")}\n        </Button>\n      ),\n    },\n  ];\n  /**\n   * Todo: uncomment code when API start support pagination\n   */\n  // if (total && total > 0 && toolbarItems.length === 1) {\n  //   toolbarItems.push({\n  //     item: (\n  //       <MASPagination\n  //         widgetId=\"pagination-options-menu-top\"\n  //         itemCount={total}\n  //         page={page}\n  //         perPage={perPage}\n  //         isCompact={true}\n  //         titles={{\n  //           paginationTitle: t('minimal_pagination'),\n  //           perPageSuffix: t('per_page_suffix'),\n  //           toFirstPage: t('to_first_page'),\n  //           toPreviousPage: t('to_previous_page'),\n  //           toLastPage: t('to_last_page'),\n  //           toNextPage: t('to_next_page'),\n  //           optionsToggle: t('options_toggle'),\n  //           currPage: t('curr_page'),\n  //         }}\n  //       />\n  //     ),\n  //     variant: 'pagination',\n  //     alignment: { default: 'alignRight' },\n  //   });\n  // }\n\n  return (\n    <MASToolbar\n      toolbarProps={{\n        id: \"instance-toolbar\",\n        collapseListedFiltersBreakpoint: \"md\",\n        inset: { xl: \"insetLg\" },\n      }}\n      toolbarItems={toolbarItems}\n    />\n  );\n};\n\nexport { ServiceAccountsToolbar };\n","import { FC, MouseEvent, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  cellWidth,\n  IAction,\n  IRowData,\n  ISeparator,\n  ISortBy,\n  OnSort,\n  SortByDirection,\n} from \"@patternfly/react-table\";\nimport { Skeleton } from \"@patternfly/react-core\";\nimport { MASEmptyState, MASEmptyStateVariant, MASTable } from \"@app/common\";\nimport {\n  getFormattedDate,\n  getLoadingRowsCount,\n  getSkeletonForRows,\n} from \"@app/utils\";\nimport { ServiceAccountListItem } from \"@rhoas/kafka-management-sdk\";\nimport {\n  ServiceAccountsToolbar,\n  ServiceAccountsToolbarProps,\n} from \"./ServiceAccountsToolbar\";\nimport { useAuth } from \"@rhoas/app-services-ui-shared\";\n\nexport type ServiceAccountsTableViewProps = ServiceAccountsToolbarProps & {\n  expectedTotal: number;\n  serviceAccountsDataLoaded?: boolean;\n  serviceAccountItems?: ServiceAccountListItem[];\n  orderBy?: string;\n  setOrderBy?: (order: string) => void;\n  onResetCredentials?: (serviceAccount: ServiceAccountListItem) => void;\n  onDeleteServiceAccount?: (serviceAccount: ServiceAccountListItem) => void;\n  onCreateServiceAccount: () => void;\n  page: number;\n  perPage: number;\n};\n\nconst ServiceAccountsTableView: FC<ServiceAccountsTableViewProps> = ({\n  page,\n  perPage,\n  expectedTotal,\n  serviceAccountsDataLoaded,\n  serviceAccountItems,\n  onResetCredentials,\n  onDeleteServiceAccount,\n  orderBy,\n  setOrderBy,\n  onCreateServiceAccount,\n}: ServiceAccountsTableViewProps) => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n  const auth = useAuth();\n\n  const [loggedInUser, setLoggedInUser] = useState<string | undefined>(\n    undefined\n  );\n  const [isOrgAdmin, setIsOrgAdmin] = useState<boolean>();\n\n  useEffect(() => {\n    auth?.getUsername()?.then((username) => setLoggedInUser(username));\n  }, [auth]);\n\n  useEffect(() => {\n    auth?.isOrgAdmin()?.then((isOrgAdmin) => setIsOrgAdmin(isOrgAdmin));\n  }, [auth]);\n\n  const tableColumns = [\n    { title: t(\"common.name\") },\n    { title: t(\"common.clientID\") },\n    { title: t(\"common.owner\"), transforms: [cellWidth(20)] },\n    { title: t(\"time_created\") },\n  ];\n\n  const resetCredentials = (\n    event: MouseEvent,\n    originalData: ServiceAccountListItem\n  ) => {\n    onResetCredentials && onResetCredentials(originalData);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    event?.target?.parentElement?.parentElement?.previousSibling?.focus();\n  };\n\n  const deleteAccount = (\n    event: MouseEvent,\n    originalData: ServiceAccountListItem\n  ) => {\n    onDeleteServiceAccount && onDeleteServiceAccount(originalData);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    event?.target?.parentElement?.parentElement?.previousSibling?.focus();\n  };\n\n  const preparedTableCells = () => {\n    const tableRow: (IRowData | string[])[] | undefined = [];\n    const loadingCount: number = getLoadingRowsCount(\n      page,\n      perPage,\n      expectedTotal\n    );\n    if (!serviceAccountsDataLoaded) {\n      return getSkeletonForRows({\n        loadingCount,\n        skeleton: <Skeleton />,\n        length: tableColumns.length,\n      });\n    }\n\n    serviceAccountItems?.forEach((row: IRowData) => {\n      const { name, owner, client_id, created_at } = row;\n      tableRow.push({\n        cells: [\n          name,\n          client_id,\n          owner,\n          { title: getFormattedDate(created_at, t(\"ago\")) },\n        ],\n        originalData: row,\n      });\n    });\n    return tableRow;\n  };\n\n  const buildActionResolver = (rowData: IRowData) => {\n    if (!serviceAccountsDataLoaded) {\n      return [];\n    }\n\n    const originalData: ServiceAccountListItem = rowData.originalData;\n    const isUserSameAsLoggedIn =\n      originalData.owner === loggedInUser || isOrgAdmin;\n    let additionalProps: Partial<IAction> = {};\n\n    if (!isUserSameAsLoggedIn) {\n      additionalProps = {\n        tooltip: true,\n        isDisabled: true,\n        style: {\n          pointerEvents: \"auto\",\n          cursor: \"default\",\n        },\n      };\n    }\n\n    const resolver: (IAction | ISeparator)[] = [\n      {\n        title: t(\"common.reset_credentials\"),\n        id: \"reset-credentials\",\n        [\"data-testid\"]: \"tableServiceAccounts-actionResetCredentials\",\n        onClick: (event) =>\n          isUserSameAsLoggedIn && resetCredentials(event, originalData),\n        ...additionalProps,\n        tooltipProps: {\n          position: \"left\",\n          content: t(\"serviceAccount.no_permission_to_reset_service_account\"),\n        },\n      } as IAction,\n      {\n        title: t(\"serviceAccount.delete_service_account\"),\n        id: \"delete-account\",\n        [\"data-testid\"]: \"tableServiceAccounts-actionDeleteAccount\",\n        onClick: (event) =>\n          isUserSameAsLoggedIn && deleteAccount(event, originalData),\n        ...additionalProps,\n        tooltipProps: {\n          position: \"left\",\n          content: t(\"serviceAccount.no_permission_to_delete_service_account\"),\n        },\n      } as IAction,\n    ];\n    return resolver;\n  };\n\n  const getParameterForSortIndex = (index: number) => {\n    switch (index) {\n      case 0:\n        return \"name\";\n      case 1:\n        return \"client_id\";\n      case 2:\n        return \"owner\";\n      case 3:\n        return \"description\";\n      case 4:\n        return \"created_at\";\n      default:\n        return \"\";\n    }\n  };\n\n  const getindexForSortParameter = (parameter: string) => {\n    switch (parameter.toLowerCase()) {\n      case \"name\":\n        return 0;\n      case \"client_id\":\n        return 1;\n      case \"owner\":\n        return 2;\n      case \"description\":\n        return 3;\n      case \"created_at\":\n        return 4;\n      default:\n        return undefined;\n    }\n  };\n\n  const onSort: OnSort = (_event, columnIndex, sortByDirection) => {\n    setOrderBy &&\n      setOrderBy(`${getParameterForSortIndex(columnIndex)} ${sortByDirection}`);\n  };\n\n  const sortBy = (): ISortBy | undefined => {\n    const sort: string[] = orderBy?.split(\" \") || [];\n    if (sort.length > 1) {\n      return {\n        index: getindexForSortParameter(sort[0]),\n        direction:\n          sort[1] === SortByDirection.asc\n            ? SortByDirection.asc\n            : SortByDirection.desc,\n      };\n    }\n    return;\n  };\n\n  return (\n    <>\n      <ServiceAccountsToolbar onCreateServiceAccount={onCreateServiceAccount} />\n      <MASTable\n        tableProps={{\n          cells: tableColumns,\n          rows: preparedTableCells(),\n          \"aria-label\": t(\"serviceAccount.service_account_list\"),\n          actionResolver: (rowData) => buildActionResolver(rowData),\n          onSort: onSort,\n          sortBy: sortBy(),\n        }}\n      />\n      {serviceAccountItems &&\n        serviceAccountItems?.length < 1 &&\n        serviceAccountsDataLoaded && (\n          <MASEmptyState\n            emptyStateProps={{\n              variant: MASEmptyStateVariant.NoResult,\n            }}\n            titleProps={{\n              title: t(\"no_results_found\"),\n            }}\n            emptyStateBodyProps={{\n              body: t(\"adjust_your_filters_and_try_again\"),\n            }}\n          />\n        )}\n      {/* {total && total > 0 && (\n        <MASPagination\n          widgetId=\"pagination-options-menu-bottom\"\n          itemCount={total}\n          variant={PaginationVariant.bottom}\n          page={page}\n          perPage={perPage}\n          titles={{\n            paginationTitle: t('full_pagination'),\n            perPageSuffix: t('per_page_suffix'),\n            toFirstPage: t('to_first_page'),\n            toPreviousPage: t('to_previous_page'),\n            toLastPage: t('to_last_page'),\n            toNextPage: t('to_next_page'),\n            optionsToggle: t('options_toggle'),\n            currPage: t('curr_page'),\n          }}\n        />\n      )} */}\n    </>\n  );\n};\n\nexport { ServiceAccountsTableView };\n","import { ServiceAccountListItem } from \"@rhoas/kafka-management-sdk\";\nimport { usePagination } from \"@app/common\";\nimport { FunctionComponent, useState } from \"react\";\nimport { Card, PageSection, PageSectionVariants } from \"@patternfly/react-core\";\nimport { ServiceAccountsTableView } from \"@app/modules/ServiceAccounts/components/ServiceAccountsTableView\";\nimport { ModalType, useModal } from \"@rhoas/app-services-ui-shared\";\n\nexport type ServiceAccountTableSectionProps = {\n  fetchServiceAccounts: () => Promise<void>;\n  serviceAccountItems: ServiceAccountListItem[];\n};\n\nexport const ServiceAccountsTableSection: FunctionComponent<\n  ServiceAccountTableSectionProps\n> = ({ fetchServiceAccounts, serviceAccountItems }) => {\n  const { showModal: showResetCredentialsModal } =\n    useModal<ModalType.KasResetServiceAccountCredentials>();\n  const { showModal: showCreateServiceAccountModal } =\n    useModal<ModalType.KasCreateServiceAccount>();\n  const { showModal: showDeleteServiceAccountModal } =\n    useModal<ModalType.KasDeleteServiceAccount>();\n\n  const [orderBy, setOrderBy] = useState<string>(\"name asc\");\n\n  const { page = 1, perPage = 10 } = usePagination() || {};\n\n  const onResetCredentials = (serviceAccount: ServiceAccountListItem) => {\n    showResetCredentialsModal(ModalType.KasResetServiceAccountCredentials, {\n      serviceAccount,\n    });\n  };\n\n  const onCreateServiceAccount = () => {\n    showCreateServiceAccountModal(ModalType.KasCreateServiceAccount, {\n      onCreate: fetchServiceAccounts,\n    });\n  };\n\n  const onDeleteServiceAccount = (serviceAccount: ServiceAccountListItem) => {\n    showDeleteServiceAccountModal(ModalType.KasDeleteServiceAccount, {\n      serviceAccount,\n      onDelete: fetchServiceAccounts,\n    });\n  };\n\n  return (\n    <PageSection\n      className=\"mk--main-page__page-section--table pf-m-padding-on-xl\"\n      variant={PageSectionVariants.default}\n      padding={{ default: \"noPadding\" }}\n    >\n      <Card>\n        <ServiceAccountsTableView\n          page={page}\n          perPage={perPage}\n          expectedTotal={0}\n          serviceAccountsDataLoaded={true}\n          serviceAccountItems={serviceAccountItems}\n          orderBy={orderBy}\n          setOrderBy={setOrderBy}\n          onResetCredentials={onResetCredentials}\n          onDeleteServiceAccount={onDeleteServiceAccount}\n          onCreateServiceAccount={onCreateServiceAccount}\n        />\n      </Card>\n    </PageSection>\n  );\n};\n","import { useAuth, useConfig } from \"@rhoas/app-services-ui-shared\";\nimport { FunctionComponent, useCallback, useEffect, useState } from \"react\";\nimport {\n  Configuration,\n  SecurityApi,\n  ServiceAccountList,\n  ServiceAccountListItem,\n} from \"@rhoas/kafka-management-sdk\";\nimport { ErrorCodes, isServiceApiError } from \"@app/utils\";\nimport { PageSection, PageSectionVariants } from \"@patternfly/react-core\";\nimport { UserUnauthorized } from \"@app/modules/ServiceAccounts/components/UserUnauthorized\";\nimport { MASLoading } from \"@app/common\";\nimport { ServiceAccountsEmpty } from \"@app/modules/ServiceAccounts/components/ServiceAccountsEmpty\";\nimport { ServiceAccountsTableSection } from \"@app/modules/ServiceAccounts/components/ServiceAccountsTableSection\";\n\nexport const ServiceAccountsTableConnected: FunctionComponent = () => {\n  const auth = useAuth();\n  const config = useConfig();\n\n  const [serviceAccountItems, setServiceAccountItems] = useState<\n    ServiceAccountListItem[] | undefined\n  >();\n  const [isUserUnauthorized, setIsUserUnauthorized] = useState<boolean>(false);\n\n  const handleServerError = (error: Error) => {\n    let errorCode: string | undefined;\n    if (isServiceApiError(error)) {\n      errorCode = error.response?.data?.code;\n    }\n    if (errorCode === ErrorCodes.UNAUTHORIZED_USER) {\n      setIsUserUnauthorized(true);\n    }\n  };\n\n  const fetchServiceAccounts = useCallback(async () => {\n    const accessToken = await auth?.kas.getToken();\n    if (accessToken && config) {\n      try {\n        const apisService = new SecurityApi(\n          new Configuration({\n            accessToken,\n            basePath: config?.ams?.apiBasePath,\n          })\n        );\n        await apisService.getServiceAccounts().then((response) => {\n          const serviceAccounts: ServiceAccountList = response?.data;\n          const items = serviceAccounts?.items || [];\n          const sortedServiceAccounts: ServiceAccountListItem[] | undefined =\n            items?.sort((a, b) =>\n              a.created_at && b.created_at\n                ? b.created_at.localeCompare(a.created_at)\n                : -1\n            );\n          setServiceAccountItems(sortedServiceAccounts);\n        });\n      } catch (error: unknown) {\n        if (error instanceof Error) {\n          handleServerError(error);\n        }\n      }\n    }\n  }, [auth, config]);\n\n  useEffect(() => {\n    fetchServiceAccounts();\n  }, [fetchServiceAccounts]);\n\n  if (isUserUnauthorized) {\n    return <UserUnauthorized />;\n  }\n\n  if (serviceAccountItems === undefined) {\n    return (\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n      >\n        <MASLoading />\n      </PageSection>\n    );\n  }\n  if (serviceAccountItems.length < 1) {\n    return <ServiceAccountsEmpty fetchServiceAccounts={fetchServiceAccounts} />;\n  }\n  return (\n    <ServiceAccountsTableSection\n      fetchServiceAccounts={fetchServiceAccounts}\n      serviceAccountItems={serviceAccountItems}\n    />\n  );\n};\n","import { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { ServiceAccountsTableConnected } from \"@app/modules/ServiceAccounts/components/ServiceAccountsTableConnected\";\nimport \"@app/modules/styles.css\";\n\nconst ServiceAccounts: FC = () => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n  return (\n    <>\n      <PageSection\n        variant={PageSectionVariants.light}\n        className=\"pf-m-padding-on-xl\"\n        padding={{ default: \"noPadding\" }}\n      >\n        <TextContent>\n          <Text component=\"h1\"> {t(\"serviceAccount.service_accounts\")}</Text>\n          <Text component=\"p\">\n            {t(\"serviceAccount.service_accounts_title_header_info\")}\n          </Text>\n        </TextContent>\n      </PageSection>\n      <ServiceAccountsTableConnected />\n    </>\n  );\n};\n\nexport { ServiceAccounts };\n","import { ComponentType, ReactElement } from \"react\";\nimport { Route, RouteComponentProps, Switch } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { MASPageNotFound } from \"@app/common/MASPageNotFound/MASPageNotFound\";\nimport { useDocumentTitle } from \"@app/utils/useDocumentTitle\";\n// import {\n//   LastLocationProvider,\n//   useLastLocation,\n// } from 'react-router-last-location';\nimport { OpenshiftStreamsStandalone } from \"@app/modules/OpenshiftStreams\";\nimport { ServiceAccountsConnected } from \"@app/modules/ServiceAccounts\";\n\nexport interface IAppRoute {\n  label?: string; // Excluding the label will exclude the route from the nav sidebar in AppLayout\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n  exact?: boolean;\n  path: string;\n  title: string;\n  isAsync?: boolean;\n  routes?: undefined;\n}\n\nexport interface IAppRouteGroup {\n  label: string;\n  routes: IAppRoute[];\n}\n\nexport type AppRouteConfig = IAppRoute | IAppRouteGroup;\n\nconst routes: AppRouteConfig[] = [\n  {\n    component: OpenshiftStreamsStandalone,\n    exact: true,\n    // t('kafka_instances')\n    label: \"Kafka Instances\",\n    path: \"/\",\n    title: \"Kafka Instances\",\n  },\n  {\n    component: ServiceAccountsConnected,\n    exact: true,\n    label: \"Service Accounts\",\n    path: \"/service-accounts\",\n    title: \"Service Accounts\",\n  },\n];\n\n// a custom hook for sending focus to the primary content container\n// after a view has loaded so that subsequent press of tab key\n// sends focus directly to relevant content\n\n// TODO: restore when react-router-last-location officially supports react 17\n\n// const useA11yRouteChange = (isAsync: boolean) => {\n//   const lastNavigation = useLastLocation();\n//   React.useEffect(() => {\n//     if (!isAsync && lastNavigation !== null) {\n//       routeFocusTimer = accessibleRouteChangeHandler();\n//     }\n//     return () => {\n//       window.clearTimeout(routeFocusTimer);\n//     };\n//   }, [isAsync, lastNavigation]);\n// };\n\nconst RouteWithTitleUpdates = ({\n  component: Component,\n  // isAsync = false,\n  title,\n  ...rest\n}: IAppRoute) => {\n  // useA11yRouteChange(isAsync);\n  useDocumentTitle(title);\n\n  function routeWithTitle(routeProps: RouteComponentProps) {\n    return <Component {...rest} {...routeProps} />;\n  }\n\n  return <Route render={routeWithTitle} />;\n};\n\nconst PageNotFound = ({ title }: { title: string }) => {\n  useDocumentTitle(title);\n  return <Route component={MASPageNotFound} />;\n};\n\nconst flattenedRoutes: IAppRoute[] = routes.reduce(\n  (flattened, route) => [\n    ...flattened,\n    ...(route.routes ? route.routes : [route]),\n  ],\n  [] as IAppRoute[]\n);\n\nconst AppRoutes = (): ReactElement => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n  return (\n    // <LastLocationProvider>\n    <Switch>\n      {flattenedRoutes.map(\n        ({ path, exact, component, title, isAsync }, idx) => (\n          <RouteWithTitleUpdates\n            path={path}\n            exact={exact}\n            component={component}\n            key={idx}\n            title={title}\n            isAsync={isAsync}\n          />\n        )\n      )}\n      <PageNotFound title={t(\"404_page_does_not_exist\")} />\n    </Switch>\n    // </LastLocationProvider>\n  );\n};\n\nexport { AppRoutes, routes };\n","import { FunctionComponent } from \"react\";\nimport { ModalProvider } from \"@rhoas/app-services-ui-components\";\nimport { KasModalLoader } from \"@app/modals\";\nimport { KasLayout } from \"@app/modules/OpenshiftStreams/components\";\nimport { StreamsTableConnected } from \"@app/modules/OpenshiftStreams/components/StreamsTableConnected\";\n\nexport const OpenshiftStreamsStandalone: FunctionComponent = () => {\n  return (\n    <ModalProvider>\n      <KasLayout data-ouia-app-id={\"dummy\"}>\n        <StreamsTableConnected\n          preCreateInstance={(open) => Promise.resolve(open)}\n        />\n      </KasLayout>\n      <KasModalLoader />\n    </ModalProvider>\n  );\n};\n","import { FunctionComponent } from \"react\";\nimport { ServiceAccounts } from \"./ServiceAccounts\";\n\nexport const ServiceAccountsConnected: FunctionComponent = () => {\n  return <ServiceAccounts />;\n};\n","export default __webpack_public_path__ + \"f940137c.svg\";","import Keycloak, { KeycloakInstance, KeycloakTokenParsed } from \"keycloak-js\";\n\nexport let keycloak: KeycloakInstance | undefined;\n\n/**\n * Get keycloak instance\n *\n * @return an initiated keycloak instance or `undefined`\n * if keycloak isn't configured\n *\n */\nexport const getKeycloakInstance = async (): Promise<\n  KeycloakInstance | undefined\n> => {\n  if (!keycloak) await init();\n  return keycloak;\n};\n\n/**\n * Initiate keycloak instance.\n *\n * Set keycloak to undefined if\n * keycloak isn't configured\n *\n */\nexport const init = async (): Promise<void> => {\n  try {\n    keycloak = Keycloak();\n    if (keycloak) {\n      await keycloak.init({\n        onLoad: \"login-required\",\n      });\n    }\n  } catch {\n    keycloak = undefined;\n    console.warn(\n      \"Auth: Unable to initialize keycloak. Client side will not be configured to use authentication\"\n    );\n  }\n};\n\n/**\n * Use keycloak update token function to retrieve\n * keycloak token\n *\n * @return keycloak token or empty string if keycloak\n * isn't configured\n *\n */\nexport const getKeyCloakToken = async (): Promise<string> => {\n  await keycloak?.updateToken(50);\n  if (keycloak?.token) return keycloak.token;\n  console.error(\"No keycloak token available\");\n  return \"foo\";\n};\n\n/**\n * Use keycloak update token function to retrieve\n * keycloak token\n *\n * @return keycloak token or empty string if keycloak\n * isn't configured\n *\n */\nexport const getParsedKeyCloakToken =\n  async (): Promise<KeycloakTokenParsed> => {\n    await keycloak?.updateToken(50);\n    if (keycloak?.tokenParsed) return keycloak.tokenParsed;\n    console.error(\"No keycloak token available\");\n    return {} as KeycloakTokenParsed;\n  };\n\n/**\n * logout of keycloak, clear cache and offline store then redirect to\n * keycloak login page\n *\n * @param keycloak the keycloak instance\n * @param client offix client\n *\n */\nexport const logout = async (\n  keycloak: Keycloak.KeycloakInstance | undefined\n): Promise<void> => {\n  if (keycloak) {\n    await keycloak.logout();\n  }\n};\n","import { FunctionComponent, createContext } from \"react\";\nimport { KeycloakInstance, KeycloakProfile } from \"keycloak-js\";\nimport {\n  getKeyCloakToken,\n  getParsedKeyCloakToken,\n} from \"@app/auth/keycloak/keycloakAuth\";\nimport { Auth, AuthContext } from \"@rhoas/app-services-ui-shared\";\n\n// This is a context which can manage the keycloak\nexport interface IKeycloakContext {\n  keycloak?: KeycloakInstance | undefined;\n  profile?: KeycloakProfile | undefined;\n}\n\nexport const KeycloakContext = createContext<IKeycloakContext>({\n  keycloak: undefined,\n});\n\nexport const KeycloakAuthProvider: FunctionComponent = (props) => {\n  const getUsername = () => {\n    return getParsedKeyCloakToken().then(\n      (token) => (token as Record<string, string>)[\"username\"]\n    );\n  };\n\n  const isOrgAdmin = () => {\n    return getParsedKeyCloakToken().then(\n      (token) => (token as Record<string, boolean>)[\"is_org_admin\"]\n    );\n  };\n\n  const authTokenContext = {\n    kas: {\n      getToken: getKeyCloakToken,\n    },\n    getUsername,\n    isOrgAdmin,\n  } as Auth;\n  return (\n    <AuthContext.Provider value={authTokenContext}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n","import { FunctionComponent, useState, useContext } from \"react\";\nimport { NavLink, useLocation, useHistory } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Nav,\n  NavList,\n  NavItem,\n  NavExpandable,\n  Page,\n  PageHeader,\n  PageSidebar,\n  SkipToContent,\n  PageHeaderTools,\n} from \"@patternfly/react-core\";\nimport { routes, IAppRoute, IAppRouteGroup } from \"@app/routes\";\nimport logo from \"@app/bgimages/Patternfly-Logo.svg\";\nimport { KeycloakContext } from \"@app/auth/keycloak/KeycloakContext\";\n\nconst AppLayout: FunctionComponent = ({ children }) => {\n  const [isNavOpen, setIsNavOpen] = useState(true);\n  const [isMobileView, setIsMobileView] = useState(true);\n  const [isNavOpenMobile, setIsNavOpenMobile] = useState(false);\n\n  const keycloakContext = useContext(KeycloakContext);\n\n  const location = useLocation();\n\n  const onNavToggleMobile = () => {\n    setIsNavOpenMobile(!isNavOpenMobile);\n  };\n  const onNavToggle = () => {\n    setIsNavOpen(!isNavOpen);\n  };\n  const onPageResize = (props: { mobileView: boolean; windowSize: number }) => {\n    setIsMobileView(props.mobileView);\n  };\n\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n\n  function LogoImg() {\n    const history = useHistory();\n    function handleClick() {\n      history.push(\"/\");\n    }\n    return <img src={logo} onClick={handleClick} alt=\"PatternFly Logo\" />;\n  }\n\n  if (!keycloakContext.keycloak) {\n    return (\n      // TODO handle this error properly!\n      <div>403 Unauthorized</div>\n    );\n  }\n\n  if (!keycloakContext.keycloak.authenticated) {\n    // force the user to log in\n    keycloakContext.keycloak?.login();\n    return <></>;\n  }\n\n  const email = keycloakContext.keycloak.profile?.email;\n\n  const HeaderTools = <PageHeaderTools>{email}</PageHeaderTools>;\n\n  const Header = (\n    <PageHeader\n      logo={<LogoImg />}\n      showNavToggle\n      isNavOpen={isNavOpen}\n      headerTools={HeaderTools}\n      onNavToggle={isMobileView ? onNavToggleMobile : onNavToggle}\n      aria-label={t(\"global_navigation\")}\n    />\n  );\n\n  const renderNavItem = (route: IAppRoute, index: number) => {\n    return (\n      <NavItem key={`${route.label}-${index}`} id={`${route.label}-${index}`}>\n        <NavLink exact to={route.path} activeClassName=\"pf-m-current\">\n          {route?.label && t(route.label)}\n        </NavLink>\n      </NavItem>\n    );\n  };\n\n  const renderNavGroup = (group: IAppRouteGroup, groupIndex: number) => (\n    <NavExpandable\n      key={`${group.label}-${groupIndex}`}\n      id={`${group.label}-${groupIndex}`}\n      title={group.label}\n      isActive={group.routes.some((route) => route.path === location.pathname)}\n      // aria-label={t()}\n    >\n      {group.routes.map(\n        (route, idx) => route.label && renderNavItem(route, idx)\n      )}\n    </NavExpandable>\n  );\n\n  const Navigation = (\n    <Nav\n      id=\"nav-primary-simple\"\n      role=\"navigation\"\n      theme=\"dark\"\n      aria-label={t(\"global\")}\n    >\n      <NavList id=\"nav-list-simple\">\n        {routes.map(\n          (route, idx) =>\n            route.label &&\n            (!route.routes\n              ? renderNavItem(route, idx)\n              : renderNavGroup(route, idx))\n        )}\n      </NavList>\n    </Nav>\n  );\n  const Sidebar = (\n    <PageSidebar\n      theme=\"dark\"\n      nav={Navigation}\n      isNavOpen={isMobileView ? isNavOpenMobile : isNavOpen}\n    />\n  );\n  const PageSkipToContent = (\n    <SkipToContent href=\"#primary-app-container\">\n      {t(\"skip_to_content\")}\n    </SkipToContent>\n  );\n  return (\n    <Page\n      mainContainerId=\"primary-app-container\"\n      role=\"main\"\n      header={Header}\n      sidebar={Sidebar}\n      onPageResize={onPageResize}\n      skipToContent={PageSkipToContent}\n    >\n      {children}\n    </Page>\n  );\n};\n\nexport { AppLayout };\n","import { FunctionComponent, useState, useEffect, Suspense } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {\n  BasenameContext,\n  Config,\n  ConfigContext,\n} from \"@rhoas/app-services-ui-shared\";\nimport \"@patternfly/patternfly/patternfly.css\";\nimport \"@patternfly/patternfly/utilities/Accessibility/accessibility.css\";\nimport \"@patternfly/patternfly/utilities/Sizing/sizing.css\";\nimport \"@patternfly/patternfly/utilities/Spacing/spacing.css\";\nimport \"@patternfly/patternfly/utilities/Display/display.css\";\nimport \"@patternfly/patternfly/utilities/Flex/flex.css\";\nimport { AppLayout } from \"@app/AppLayout/AppLayout\";\nimport { AppRoutes } from \"@app/routes\";\nimport \"@app/app.css\";\nimport { getKeycloakInstance } from \"./auth/keycloak/keycloakAuth\";\nimport { MASLoading } from \"@app/common\";\nimport {\n  KeycloakAuthProvider,\n  KeycloakContext,\n} from \"@app/auth/keycloak/KeycloakContext\";\nimport {\n  MASErrorBoundary,\n  PaginationProvider,\n  AlertProvider,\n} from \"@app/common\";\nimport { I18nProvider, ModalProvider } from \"@rhoas/app-services-ui-components\";\nimport { KasModalLoader } from \"@app/modals\";\n\nlet keycloak: Keycloak.KeycloakInstance | undefined;\ndeclare const __BASE_PATH__: string;\n\nconst App: FunctionComponent = () => {\n  const [initialized, setInitialized] = useState(false);\n\n  // Initialize the client\n  useEffect(() => {\n    const init = async () => {\n      keycloak = await getKeycloakInstance();\n      setInitialized(true);\n    };\n    init();\n  }, []);\n\n  if (!initialized) return <MASLoading />;\n\n  return (\n    <BasenameContext.Provider value={{ getBasename: () => \"\" }}>\n      <ConfigContext.Provider\n        value={\n          {\n            kas: {\n              apiBasePath: __BASE_PATH__,\n            },\n            ams: {\n              apiBasePath: __BASE_PATH__,\n            },\n          } as Config\n        }\n      >\n        <I18nProvider\n          lng=\"en\"\n          resources={{\n            en: {\n              common: () =>\n                import(\n                  \"@rhoas/app-services-ui-components/locales/en/common.json\"\n                ),\n              \"create-kafka-instance\": () =>\n                import(\n                  \"@rhoas/app-services-ui-components/locales/en/create-kafka-instance.json\"\n                ),\n              kafka: () =>\n                import(\n                  \"@rhoas/app-services-ui-components/locales/en/kafka.json\"\n                ),\n              metrics: () =>\n                import(\n                  \"@rhoas/app-services-ui-components/locales/en/metrics.json\"\n                ),\n              kasTemporaryFixMe: () =>\n                import(\"./kas-ui-dont-modify-temporay.json\"),\n            },\n          }}\n          debug={true}\n        >\n          {\" \"}\n          <KeycloakContext.Provider\n            value={{ keycloak, profile: keycloak?.profile }}\n          >\n            <KeycloakAuthProvider>\n              <AlertProvider>\n                <Router>\n                  <Suspense fallback={<MASLoading />}>\n                    <MASErrorBoundary>\n                      <PaginationProvider>\n                        <ModalProvider>\n                          <AppLayout>\n                            <AppRoutes />\n                          </AppLayout>\n                          <KasModalLoader />\n                        </ModalProvider>\n                      </PaginationProvider>\n                    </MASErrorBoundary>\n                  </Suspense>\n                </Router>\n              </AlertProvider>\n            </KeycloakAuthProvider>\n          </KeycloakContext.Provider>\n        </I18nProvider>\n      </ConfigContext.Provider>\n    </BasenameContext.Provider>\n  );\n};\nexport { App };\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"@app/index\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  const config = {\n    rules: [\n      {\n        id: \"color-contrast\",\n        enabled: false,\n      },\n    ],\n  };\n  // eslint-disable-next-line @typescript-eslint/no-var-requires, no-undef\n  const axe = require(\"react-axe\");\n  axe(React, ReactDOM, 1000, config);\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n"],"names":["MASPageNotFound","t","useTranslation","PageSection","padding","default","isFilled","emptyStateProps","variant","titleProps","title","emptyStateBodyProps","body","history","useHistory","Button","onClick","push","AlertProvider","children","alerts","setAlerts","useState","timers","setTimers","useEffect","timersKeys","map","timer","key","timeOuts","filter","alert","includes","id","timeOut","setTimeout","hideAlert","forEach","clearTimeout","el","AlertContext","value","addAlert","props","Date","getTime","toString","MASAlertToastGroup","onCloseAlert","AlertGroup","isToast","description","dataTestId","rest","Alert","isLiveRegion","AlertVariant","variantLabel","actionClose","AlertActionCloseButton","onClose","Component","state","hasError","onClickButton","this","setState","static","componentDidCatch","error","errorInfo","console","render","MASEmptyState","emptyStateIconProps","className","MASErrorBoundaryComponent","withRouter","withTranslation","bullseyeProps","spinnerProps","Bullseye","Spinner","FederatedContext","createContext","undefined","useFederated","useContext","InstanceDrawerContext","useInstanceDrawer","answer","Error","useDocumentTitle","originalTitle","document","UserUnauthorized","PageSectionVariants","headingLevel","icon","ServiceAccountsEmpty","fetchServiceAccounts","showModal","useModal","buttonProps","ModalType","onCreate","ServiceAccountsToolbar","onCreateServiceAccount","toolbarItems","item","toolbarProps","collapseListedFiltersBreakpoint","inset","xl","ServiceAccountsTableView","page","perPage","expectedTotal","serviceAccountsDataLoaded","serviceAccountItems","onResetCredentials","onDeleteServiceAccount","orderBy","setOrderBy","auth","useAuth","loggedInUser","setLoggedInUser","isOrgAdmin","setIsOrgAdmin","getUsername","then","username","tableColumns","transforms","cellWidth","buildActionResolver","rowData","originalData","isUserSameAsLoggedIn","owner","additionalProps","tooltip","isDisabled","style","pointerEvents","cursor","resolver","event","target","parentElement","previousSibling","focus","resetCredentials","tooltipProps","position","content","deleteAccount","getindexForSortParameter","parameter","toLowerCase","tableProps","cells","rows","tableRow","loadingCount","row","name","client_id","created_at","skeleton","Skeleton","length","preparedTableCells","actionResolver","onSort","_event","columnIndex","sortByDirection","index","getParameterForSortIndex","sortBy","sort","split","direction","SortByDirection","ServiceAccountsTableSection","showResetCredentialsModal","showCreateServiceAccountModal","showDeleteServiceAccountModal","Card","serviceAccount","onDelete","ServiceAccountsTableConnected","config","useConfig","setServiceAccountItems","isUserUnauthorized","setIsUserUnauthorized","useCallback","accessToken","kas","getToken","apisService","SecurityApi","Configuration","basePath","ams","apiBasePath","getServiceAccounts","response","serviceAccounts","data","items","sortedServiceAccounts","a","b","localeCompare","errorCode","code","handleServerError","TextContent","Text","component","routes","ModalProvider","StreamsTableConnected","preCreateInstance","open","Promise","resolve","exact","label","path","RouteWithTitleUpdates","Route","routeProps","PageNotFound","flattenedRoutes","reduce","flattened","route","AppRoutes","Switch","isAsync","idx","getKeycloakInstance","init","onLoad","warn","getKeyCloakToken","updateToken","token","getParsedKeyCloakToken","tokenParsed","KeycloakContext","keycloak","KeycloakAuthProvider","authTokenContext","AuthContext","AppLayout","isNavOpen","setIsNavOpen","isMobileView","setIsMobileView","isNavOpenMobile","setIsNavOpenMobile","keycloakContext","location","useLocation","authenticated","login","email","profile","HeaderTools","PageHeaderTools","Header","PageHeader","logo","src","alt","showNavToggle","headerTools","onNavToggle","renderNavItem","NavItem","NavLink","to","activeClassName","Navigation","Nav","role","theme","NavList","group","groupIndex","NavExpandable","isActive","some","pathname","Sidebar","PageSidebar","nav","PageSkipToContent","SkipToContent","href","Page","mainContainerId","header","sidebar","onPageResize","mobileView","skipToContent","initialized","setInitialized","BasenameContext","getBasename","ConfigContext","__BASE_PATH__","I18nProvider","lng","resources","en","common","kafka","metrics","kasTemporaryFixMe","debug","Provider","Suspense","fallback","getElementById"],"sourceRoot":""}