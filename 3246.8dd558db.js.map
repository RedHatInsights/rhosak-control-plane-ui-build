{"version":3,"file":"3246.8dd558db.js","mappings":"yIAQaA,E,MAAmB,sBAC9BC,GAEWC,EAAe,WAC1B,WAAAC,YAAWH,K,4HCqBb,QAnBE,SAAC,G,IAAEI,EAAiB,oBAAEC,EAAqB,wBAAEC,EAAgB,mBAC3D,OACE,kBAAC,EAAAC,gBAAe,CAACC,MAAM,UACrB,kBAAC,aAAyB,CACxBC,MAAO,CAAEH,iBAAgB,EAAEF,kBAAiB,EAAEC,sBAAqB,IAEnE,kBAAC,KAAS,KACR,kBAAC,KAAkB,KACjB,kBAAC,IAAgB,CACfD,kBAAmBA,EACnBE,iBAAkBA","sources":["webpack://kas-ui/./src/app/contexts/federated.ts","webpack://kas-ui/./src/app/modules/OpenshiftStreams/OpenshiftStreamsFederated.tsx"],"sourcesContent":["import React, { useContext } from 'react';\n\nexport type FederatedProps = {\n  tokenEndPointUrl: string;\n  preCreateInstance?: (isOpen: boolean) => Promise<boolean>;\n  shouldOpenCreateModal: () => Promise<boolean>;\n};\n\nexport const FederatedContext = React.createContext<FederatedProps | undefined>(\n  undefined\n);\nexport const useFederated = (): FederatedProps | undefined =>\n  useContext(FederatedContext);\n","import React from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport {\n  OpenshiftStreams,\n  OpenShiftStreamsProps,\n} from '@app/modules/OpenshiftStreams/OpenshiftStreams';\nimport { RootModal, PaginationProvider } from '@app/common';\nimport { initI18N } from '@i18n/i18n';\nimport { FederatedContext, FederatedProps } from '@app/contexts';\n\n// Version of OpenshiftStreams for federation\ntype OpenshiftStreamsFederatedProps = OpenShiftStreamsProps & FederatedProps;\n\nconst OpenshiftStreamsFederated: React.FunctionComponent<OpenshiftStreamsFederatedProps> =\n  ({ preCreateInstance, shouldOpenCreateModal, tokenEndPointUrl }) => {\n    return (\n      <I18nextProvider i18n={initI18N()}>\n        <FederatedContext.Provider\n          value={{ tokenEndPointUrl, preCreateInstance, shouldOpenCreateModal }}\n        >\n          <RootModal>\n            <PaginationProvider>\n              <OpenshiftStreams\n                preCreateInstance={preCreateInstance}\n                tokenEndPointUrl={tokenEndPointUrl}\n              />\n            </PaginationProvider>\n          </RootModal>\n        </FederatedContext.Provider>\n      </I18nextProvider>\n    );\n  };\n\nexport default OpenshiftStreamsFederated;\n"],"names":["FederatedContext","undefined","useFederated","useContext","preCreateInstance","shouldOpenCreateModal","tokenEndPointUrl","I18nextProvider","i18n","value"],"sourceRoot":""}