{"version":3,"file":"6783.8122caa8.js","mappings":"+FAEAA,EAAQ,GAAgB,CACtBC,KAAM,UACNC,OAAQ,KACRC,MAAO,KACPC,QAAS,gfACTC,QAAS,EACTC,QAAS,GAEXN,EAAQ,GAAU,oBAAoCA,EAAQ,IAC9DA,EAAA,GAAqBA,EAAQ,I,kOCevBO,EAA4C,WACxC,IAAAC,GAAM,IAAAC,kBAAgB,EACxB,GAAuB,UAArBC,EAAK,QAAEC,EAAS,YAClB,GAAgDD,MAAAA,OAAK,EAALA,EAAOE,aAAc,GAAnEC,EAAc,iBAAaC,EAAO,YAAEC,EAAK,QAMjD,OACE,kBAAC,EAAAC,MAAK,CACJC,QAAS,EAAAC,aAAA,OACTH,MAAOA,GAASP,EAAE,2CAClBW,QAAQ,EACRC,QATgB,WAClBT,KASEU,WAAW,EACXC,SAAU,MAEV,kBAACC,EAAW,CACVT,QAASA,EACTD,eAAgBA,EAChBW,MAAOb,MAYTY,EAAyD,SAAC,G,IAC9DT,EAAO,UACPD,EAAc,iBACdW,EAAK,QAEGhB,GAAM,IAAAC,kBAAgB,EAExB,GAAkD,IAAAgB,WAAS,GAA1DC,EAAoB,KAAEC,EAAuB,KAMpD,OAAIb,EACK,kBAAC,KAAU,MAGlB,oCACE,kBAAC,KAAa,CACZc,gBAAiB,CACfX,QAAS,EAAAY,kBAAA,OAEXC,oBAAqB,CACnBC,KAAM,MAERC,WAAY,CACVjB,MAAOP,EAAE,sCACTyB,aAAc,KACdC,KAAM,EAAAC,WAAA,KAGR,kBAAC,EAAAC,YAAW,KACV,kBAAC,EAAAC,KAAI,CAACC,UAAW,EAAAC,aAAA,MAAoBC,UAAU,cAC5ChC,EAAE,kEAGP,kBAAC,EAAAiC,WAAU,CAACD,UAAU,cACpB,kBAAC,EAAAE,eAAc,CAACF,UAAU,qDACvBhC,EAAE,cAEL,kBAAC,EAAAmC,cAAa,CACZC,YAAU,EACVJ,UAAU,aAAY,cACV,gCACZK,cAAerC,EAAE,cAEhBK,MAAAA,OAAc,EAAdA,EAAgBiC,YAGrB,kBAAC,EAAAL,WAAU,CAACD,UAAU,cACpB,kBAAC,EAAAE,eAAc,CAACF,UAAU,qDACvBhC,EAAE,yBAEL,kBAAC,EAAAmC,cAAa,CACZC,YAAU,EACVJ,UAAU,aAAY,cACV,oCACZK,cAAerC,EAAE,yBAEhBK,MAAAA,OAAc,EAAdA,EAAgBkC,gBAGrB,kBAAC,EAAAX,YAAW,KACV,kBAAC,EAAAC,KAAI,CAACC,UAAW,EAAAC,aAAA,MAAoBC,UAAU,cAC5ChC,EAAE,wDAGP,kBAAC,EAAAwC,SAAQ,CAACR,UAAU,cAClB,kBAAC,EAAAS,SAAQ,CACPC,MAAO1C,EAAE,yCACT2C,UAAWzB,EACX0B,SA9DM,SAACC,GACf1B,EAAwB0B,IA8DhBC,GAAG,UACHrD,KAAK,YAGT,kBAAC,EAAAsD,OAAM,CACLtC,QAAQ,UACRuC,YAAa9B,EACb+B,QAASjC,EAAK,cACF,gCAEXhB,EAAE,aASb","sources":["webpack://kas-ui/./node_modules/@patternfly/react-icons/dist/js/icons/key-icon.js","webpack://kas-ui/./src/app/modules/ServiceAccounts/dialogs/CreateServiceAccount/CredentialsModal.tsx"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.KeyIconConfig = {\n  name: 'KeyIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M802,320 C748.980664,320 706,277.019336 706,224 C706,170.980664 748.980664,128 802,128 C855.019336,128 898,170.980664 898,224 C898,277.019336 855.019336,320 802,320 M704,0 C527.3,0 384,143.3 384,320 C383.937788,357.490503 390.505571,394.696657 403.4,429.9 L0,824.1 L0,1024 L192,1024 L192,896 L320,896 L320,768 L448,768 L597,622 C596.906403,621.881923 596.838304,621.745723 596.8,621.6 C631.220126,633.811107 667.47802,640.034477 704,640 C880.7,640 1024,496.7 1024,320 C1024,143.3 880.7,0 704,0',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.KeyIcon = require('../createIcon').createIcon(exports.KeyIconConfig);\nexports[\"default\"] = exports.KeyIcon;","import React, { useState } from 'react';\nimport {\n  Bullseye,\n  Button,\n  Checkbox,\n  ClipboardCopy,\n  EmptyStateVariant,\n  InputGroup,\n  InputGroupText,\n  Modal,\n  ModalVariant,\n  Text,\n  TextContent,\n  TextVariants,\n  TitleSizes,\n} from '@patternfly/react-core';\nimport KeyIcon from '@patternfly/react-icons/dist/js/icons/key-icon';\nimport '@patternfly/react-styles/css/utilities/Spacing/spacing.css';\nimport '@patternfly/react-styles/css/utilities/Flex/flex.css';\nimport '@patternfly/react-styles/css/utilities/Sizing/sizing.css';\nimport { useTranslation } from 'react-i18next';\nimport { MASEmptyState, MASLoading, useRootModalContext } from '@app/common';\nimport { getModalAppendTo } from '@app/utils/utils';\nimport './CredentialsModal.css';\nimport { ServiceAccount } from '@rhoas/kafka-management-sdk';\n\nconst CredentialsModal: React.FunctionComponent = () => {\n  const { t } = useTranslation();\n  const { store, hideModal } = useRootModalContext();\n  const { serviceAccount, isLoading: loading, title } = store?.modalProps || {};\n\n  const handleClose = () => {\n    hideModal();\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={title || t('serviceAccount.create_a_service_account')}\n      isOpen={true}\n      onClose={handleClose}\n      showClose={false}\n      appendTo={getModalAppendTo}\n    >\n      <Credentials\n        loading={loading}\n        serviceAccount={serviceAccount}\n        close={hideModal}\n      />\n    </Modal>\n  );\n};\n\ntype CredentialsProps = {\n  loading: boolean;\n  serviceAccount: ServiceAccount;\n  close: () => void;\n};\n\nconst Credentials: React.FunctionComponent<CredentialsProps> = ({\n  loading,\n  serviceAccount,\n  close,\n}) => {\n  const { t } = useTranslation();\n\n  const [confirmationCheckbox, setConfirmationCheckbox] = useState(false);\n\n  const confirm = (checked: boolean) => {\n    setConfirmationCheckbox(checked);\n  };\n\n  if (loading) {\n    return <MASLoading />;\n  }\n  return (\n    <>\n      <MASEmptyState\n        emptyStateProps={{\n          variant: EmptyStateVariant.large,\n        }}\n        emptyStateIconProps={{\n          icon: KeyIcon,\n        }}\n        titleProps={{\n          title: t('credentials_successfully_generated'),\n          headingLevel: 'h2',\n          size: TitleSizes.lg,\n        }}\n      >\n        <TextContent>\n          <Text component={TextVariants.small} className='pf-u-mt-lg'>\n            {t('connect_to_the_kafka_instance_using_this_clientID_and_secret')}\n          </Text>\n        </TextContent>\n        <InputGroup className='pf-u-mt-lg'>\n          <InputGroupText className='mk--generate-credential__empty-state--input-group'>\n            {t('client_id')}\n          </InputGroupText>\n          <ClipboardCopy\n            isReadOnly\n            className='pf-u-w-100'\n            data-testid='modalCredentials-copyClientID'\n            textAriaLabel={t('client_id')}\n          >\n            {serviceAccount?.client_id}\n          </ClipboardCopy>\n        </InputGroup>\n        <InputGroup className='pf-u-mt-md'>\n          <InputGroupText className='mk--generate-credential__empty-state--input-group'>\n            {t('common.client_secret')}\n          </InputGroupText>\n          <ClipboardCopy\n            isReadOnly\n            className='pf-u-w-100'\n            data-testid='modalCredentials-copyClientSecret'\n            textAriaLabel={t('common.client_secret')}\n          >\n            {serviceAccount?.client_secret}\n          </ClipboardCopy>\n        </InputGroup>\n        <TextContent>\n          <Text component={TextVariants.small} className='pf-u-mt-lg'>\n            {t('create_service_account_credentials_warning_message')}\n          </Text>\n        </TextContent>\n        <Bullseye className='pf-u-mt-lg'>\n          <Checkbox\n            label={t('client_id_confirmation_checkbox_label')}\n            isChecked={confirmationCheckbox}\n            onChange={confirm}\n            id='check-1'\n            name='check1'\n          />\n        </Bullseye>\n        <Button\n          variant='primary'\n          isDisabled={!confirmationCheckbox}\n          onClick={close}\n          data-testid='modalCredentials-buttonClose'\n        >\n          {t('close')}\n        </Button>\n      </MASEmptyState>\n    </>\n  );\n};\n\nexport { CredentialsModal };\n\nexport default CredentialsModal;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","CredentialsModal","t","useTranslation","store","hideModal","modalProps","serviceAccount","loading","title","Modal","variant","ModalVariant","isOpen","onClose","showClose","appendTo","Credentials","close","useState","confirmationCheckbox","setConfirmationCheckbox","emptyStateProps","EmptyStateVariant","emptyStateIconProps","icon","titleProps","headingLevel","size","TitleSizes","TextContent","Text","component","TextVariants","className","InputGroup","InputGroupText","ClipboardCopy","isReadOnly","textAriaLabel","client_id","client_secret","Bullseye","Checkbox","label","isChecked","onChange","checked","id","Button","isDisabled","onClick"],"sourceRoot":""}