{"version":3,"file":"2302.a84faa56.js","mappings":"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","sources":["webpack://kas-ui/./src/app/common/MASErrorBoundary/MASErrorBoundary.tsx","webpack://kas-ui/./src/app/common/MASLoading/MASLoading.tsx","webpack://kas-ui/./src/app/common/MASDrawer/MASDrawer.tsx","webpack://kas-ui/./src/app/modules/InstanceDrawer/InstanceDrawerContent.tsx","webpack://kas-ui/./src/app/modules/InstanceDrawer/InstanceDrawer.tsx","webpack://kas-ui/./src/app/modules/InstanceDrawer/InstanceDrawerFederated.tsx","webpack://kas-ui/./src/app/modules/OpenshiftStreams/components/StreamsTableConnected/useKafkaInstances.ts"],"sourcesContent":["import { Component, ErrorInfo, ReactNode } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { PageSection, Button } from \"@patternfly/react-core\";\nimport { MASEmptyState, MASEmptyStateVariant } from \"@app/common\";\nimport \"./MASErrorBoundary.css\";\n\ntype Props = WithTranslation &\n  RouteComponentProps & {\n    children?: ReactNode;\n  };\n\ntype State = {\n  hasError?: boolean;\n};\n\nclass MASErrorBoundary extends Component<Props, State> {\n  state: State = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error(\"error:\", error, errorInfo);\n  }\n\n  onClickButton = () => {\n    const { history } = this.props;\n    this.setState({ hasError: false });\n    history && history.push(\"/\");\n  };\n\n  render() {\n    const { t } = this.props;\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return (\n        <PageSection padding={{ default: \"noPadding\" }} isFilled>\n          <MASEmptyState\n            emptyStateProps={{\n              variant: MASEmptyStateVariant.UnexpectedError,\n            }}\n            emptyStateIconProps={{\n              className: \"icon-color\",\n            }}\n            titleProps={{\n              title: t(\"common.something_went_wrong\"),\n            }}\n            emptyStateBodyProps={{\n              body: t(\"unexpected_error\"),\n            }}\n          >\n            <Button onClick={this.onClickButton}>\n              {t(\"go_to_kafka_instances\")}\n            </Button>\n          </MASEmptyState>\n        </PageSection>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nconst MASErrorBoundaryComponent = withRouter(\n  withTranslation()(MASErrorBoundary)\n);\nexport { MASErrorBoundaryComponent as MASErrorBoundary };\n","import { FunctionComponent } from \"react\";\nimport {\n  Bullseye,\n  BullseyeProps,\n  Spinner,\n  SpinnerProps,\n} from \"@patternfly/react-core\";\n\nexport type MASLoadingProps = {\n  bullseyeProps?: Omit<BullseyeProps, \"children\">;\n  spinnerProps?: SpinnerProps;\n};\n\nexport const MASLoading: FunctionComponent<MASLoadingProps> = ({\n  bullseyeProps,\n  spinnerProps,\n}: MASLoadingProps) => (\n  <Bullseye {...bullseyeProps}>\n    <Spinner {...spinnerProps} />\n  </Bullseye>\n);\n","import { ReactNode, FC } from \"react\";\nimport {\n  Drawer,\n  DrawerProps,\n  DrawerContent,\n  DrawerPanelContent,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerActions,\n  DrawerCloseButton,\n  TextContent,\n  Text,\n  TextVariants,\n  Title,\n  TitleSizes,\n  DrawerPanelContentProps,\n  TextProps,\n  TitleProps,\n  DrawerContentBody,\n} from \"@patternfly/react-core\";\nimport { MASLoading } from \"@app/common\";\nimport \"./MASDrawer.css\";\n\nexport type MASDrawerProps = DrawerProps & {\n  children: ReactNode;\n  panelBodyContent?: ReactNode;\n  onClose: () => void;\n  drawerData?: unknown;\n  isLoading?: boolean;\n  drawerPanelContentProps?: Omit<DrawerPanelContentProps, \"children\">;\n  drawerHeaderProps?: {\n    text?: Omit<TextProps, \"children\" | \"ref\"> & {\n      label: string | undefined;\n    };\n    title?: Omit<TitleProps, \"children\"> & {\n      value: string | undefined;\n    };\n  };\n  [\"data-ouia-app-id\"]?: string;\n  notRequiredDrawerContentBackground?: boolean | undefined;\n  inlineAlertMessage?: ReactNode;\n};\n\nexport const MASDrawer: FC<MASDrawerProps> = ({\n  onClose,\n  isLoading = true,\n  drawerPanelContentProps,\n  drawerHeaderProps,\n  isExpanded,\n  children,\n  panelBodyContent,\n  onExpand,\n  notRequiredDrawerContentBackground,\n  \"data-ouia-app-id\": dataOuiaAppId,\n  inlineAlertMessage,\n}: MASDrawerProps) => {\n  const { widths, ...restDrawerPanelContentProps } =\n    drawerPanelContentProps || {};\n  const { text, title } = drawerHeaderProps || {};\n\n  const panelContent = (\n    <DrawerPanelContent\n      widths={widths || { default: \"width_50\" }}\n      {...restDrawerPanelContentProps}\n    >\n      {isLoading ? (\n        <MASLoading />\n      ) : (\n        <>\n          <DrawerHead>\n            <TextContent>\n              {text?.label && (\n                <Text\n                  component={text?.component || TextVariants.small}\n                  className={text?.className || \"pf-u-mb-0\"}\n                >\n                  {text?.label}\n                </Text>\n              )}\n              {title?.value && (\n                <Title\n                  headingLevel={title?.headingLevel || \"h2\"}\n                  size={title?.size || TitleSizes[\"xl\"]}\n                  className={title?.className || \"pf-u-mt-0\"}\n                >\n                  {title?.value}\n                </Title>\n              )}\n            </TextContent>\n            <DrawerActions>\n              <DrawerCloseButton onClick={onClose} />\n            </DrawerActions>\n          </DrawerHead>\n          <DrawerPanelBody>\n            {inlineAlertMessage}\n            {panelBodyContent}\n          </DrawerPanelBody>\n        </>\n      )}\n    </DrawerPanelContent>\n  );\n\n  return (\n    <Drawer\n      isExpanded={isExpanded}\n      onExpand={onExpand}\n      data-ouia-app-id={dataOuiaAppId}\n      data-testid=\"mk--instance__drawer\"\n      className=\"kas-drawer\"\n    >\n      <DrawerContent\n        panelContent={panelContent}\n        className={\n          notRequiredDrawerContentBackground ? \"pf-m-no-background\" : \"\"\n        }\n      >\n        <DrawerContentBody className=\"pf-u-display-flex pf-u-flex-direction-column\">\n          {\" \"}\n          {children}\n        </DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n\nexport default MASDrawer;\n","import { FunctionComponent, lazy, Suspense, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { parseISO } from \"date-fns\";\nimport { InstanceStatus } from \"@app/utils\";\nimport { MASLoading } from \"@app/common\";\nimport { Tab, Tabs, TabTitleText } from \"@patternfly/react-core\";\nimport { InstanceDrawerTab } from \"@app/modules/InstanceDrawer/tabs\";\nimport { KafkaDetailsTab } from \"@rhoas/app-services-ui-components\";\nimport { InstanceDrawerContextProps } from \"@app/modules/InstanceDrawer/contexts/InstanceDrawerContext\";\nimport { useEnrichedKafkaInstance } from \"@app/modules/OpenshiftStreams/components/StreamsTableConnected/useKafkaInstances\";\nimport { KafkaRequest, SupportedKafkaSize } from \"@rhoas/kafka-management-sdk\";\n\nexport type KafkaRequestWithSize = KafkaRequest & {\n  size: SupportedKafkaSize;\n};\nexport const ResourcesTab = lazy(() => import(\"./ConnectionTab\"));\n\nexport type InstanceDrawerContentProps = {\n  instance: NonNullable<InstanceDrawerContextProps[\"drawerInstance\"]>;\n  activeTab: InstanceDrawerTab;\n  setActiveTab: (tab: InstanceDrawerTab) => void;\n  tokenEndPointUrl: string;\n};\n\nexport const InstanceDrawerContent: FunctionComponent<\n  InstanceDrawerContentProps\n> = ({ instance, ...props }) => {\n  const { kafkaRequestToKafkaInstance } = useEnrichedKafkaInstance();\n\n  const [enrichedInstance, setEnrichedInstance] = useState(\n    instance.request ? instance : undefined\n  );\n\n  useEffect(() => {\n    async function enrichInstance() {\n      const enrichedInstance = await kafkaRequestToKafkaInstance(\n        instance as unknown as KafkaRequestWithSize\n      );\n      setEnrichedInstance(enrichedInstance);\n    }\n    if (!enrichedInstance) {\n      void enrichInstance();\n    }\n  }, [enrichedInstance, instance, kafkaRequestToKafkaInstance]);\n\n  if (enrichedInstance) {\n    return (\n      <InstanceDrawerContentConnected instance={enrichedInstance} {...props} />\n    );\n  }\n\n  return <MASLoading />;\n};\nexport const InstanceDrawerContentConnected: FunctionComponent<\n  InstanceDrawerContentProps\n> = ({ instance, activeTab, setActiveTab, tokenEndPointUrl }) => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n\n  const getExternalServer = () => {\n    const { bootstrap_server_host } = instance.request;\n    return bootstrap_server_host?.endsWith(\":443\")\n      ? bootstrap_server_host\n      : `${bootstrap_server_host}:443`;\n  };\n\n  const getAdminServerUrl = () => {\n    const { admin_api_server_url } = instance.request;\n    return admin_api_server_url ? `${admin_api_server_url}/openapi` : undefined;\n  };\n\n  const isKafkaPending =\n    instance.status === InstanceStatus.ACCEPTED ||\n    instance.status === InstanceStatus.PREPARING;\n\n  return (\n    <Suspense fallback={<MASLoading />}>\n      <Tabs\n        activeKey={activeTab}\n        onSelect={(_, tab) => setActiveTab(tab as InstanceDrawerTab)}\n      >\n        <Tab\n          eventKey={InstanceDrawerTab.DETAILS}\n          title={<TabTitleText>{t(\"details\")}</TabTitleText>}\n        >\n          <KafkaDetailsTab\n            id={instance.id}\n            owner={instance.owner}\n            createdAt={parseISO(instance.createdAt)}\n            updatedAt={parseISO(instance.updatedAt)}\n            expiryDate={\n              instance.expiryDate ? parseISO(instance.expiryDate) : undefined\n            }\n            size={instance.size}\n            ingress={instance.ingress}\n            egress={instance.egress}\n            storage={instance.storage}\n            maxPartitions={instance.maxPartitions}\n            connections={instance.connections}\n            connectionRate={instance.connectionRate}\n            messageSize={instance.messageSize}\n            region={t(instance.region)}\n            instanceType={instance.plan === \"standard\" ? \"standard\" : \"eval\"}\n            billing={instance.billing}\n            kafkaVersion={instance.request.version || \"\"}\n          />\n        </Tab>\n        <Tab\n          eventKey={InstanceDrawerTab.CONNECTION.toString()}\n          title={<TabTitleText>{t(\"connection\")}</TabTitleText>}\n          data-testid=\"drawerStreams-tabConnect\"\n        >\n          <ResourcesTab\n            externalServer={getExternalServer()}\n            adminServerUrl={getAdminServerUrl()}\n            isKafkaPending={isKafkaPending}\n            tokenEndPointUrl={tokenEndPointUrl}\n            instanceId={instance.id}\n          />\n        </Tab>\n      </Tabs>\n    </Suspense>\n  );\n};\n","import { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { InstanceDrawerContent } from \"@app/modules/InstanceDrawer/InstanceDrawerContent\";\n\nimport \"./InstanceDrawer.css\";\nimport { MASDrawer } from \"@app/common\";\nimport { InstanceDrawerTab } from \"@app/modules/InstanceDrawer/tabs\";\nimport { InstanceDrawerContextProps } from \"@app/modules/InstanceDrawer/contexts/InstanceDrawerContext\";\n\nexport type InstanceDrawerProps = {\n  \"data-ouia-app-id\": string;\n} & InstanceDrawerContextProps;\n\nexport const InstanceDrawer: FunctionComponent<InstanceDrawerProps> = ({\n  \"data-ouia-app-id\": dataOuiaAppId,\n  isDrawerOpen,\n  drawerInstance,\n  setDrawerActiveTab,\n  drawerActiveTab,\n  closeDrawer,\n  tokenEndPointUrl,\n  children,\n}) => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n\n  return (\n    <MASDrawer\n      isExpanded={isDrawerOpen}\n      isLoading={drawerInstance === undefined}\n      onClose={closeDrawer}\n      panelBodyContent={\n        drawerInstance && (\n          <InstanceDrawerContent\n            tokenEndPointUrl={tokenEndPointUrl}\n            activeTab={drawerActiveTab || InstanceDrawerTab.DETAILS}\n            instance={drawerInstance}\n            setActiveTab={setDrawerActiveTab}\n          />\n        )\n      }\n      drawerHeaderProps={{\n        text: { label: t(\"instance_name\") },\n        title: { value: drawerInstance?.name, headingLevel: \"h1\" },\n      }}\n      data-ouia-app-id={dataOuiaAppId}\n      notRequiredDrawerContentBackground={drawerInstance === undefined}\n    >\n      {children}\n    </MASDrawer>\n  );\n};\n","import { FunctionComponent } from \"react\";\nimport {\n  InstanceDrawer,\n  InstanceDrawerProps,\n} from \"@app/modules/InstanceDrawer/InstanceDrawer\";\nimport { ModalProvider } from \"@rhoas/app-services-ui-components\";\nimport { KasModalLoader } from \"@app/modals\";\n\nexport type InstanceDrawerFederatedProps = InstanceDrawerProps;\n\nconst InstanceDrawerFederated: FunctionComponent<\n  InstanceDrawerFederatedProps\n> = ({ children, ...props }) => {\n  return (\n    <ModalProvider>\n      <InstanceDrawer {...props}>{children}</InstanceDrawer>\n      <KasModalLoader />\n    </ModalProvider>\n  );\n};\n\nexport default InstanceDrawerFederated;\n","import { useKms } from \"@app/api\";\nimport { useCallback } from \"react\";\nimport type {\n  CloudProvider,\n  KafkaInstance,\n  KafkaInstancesProps,\n  Plan,\n  Status,\n} from \"@rhoas/app-services-ui-components\";\nimport { SimplifiedStatuses } from \"@rhoas/app-services-ui-components\";\nimport { KafkaRequest } from \"@rhoas/kafka-management-sdk\";\nimport { AxiosCacheRequestConfig } from \"axios-simple-cache-adapter\";\nimport {\n  useGetSizes,\n  useStandardQuota,\n} from \"@app/modules/OpenshiftStreams/dialogs/CreateInstance/hooks\";\n\nexport type KafkaInstanceEnhanced = Required<KafkaInstance> & {\n  request: KafkaRequest;\n};\n\nexport function useKafkaInstances() {\n  const getKms = useKms();\n  const { kafkaRequestToKafkaInstance } = useEnrichedKafkaInstance();\n  return useCallback<\n    KafkaInstancesProps<KafkaInstanceEnhanced>[\"getInstances\"]\n  >(\n    async (page, perPage, query, sort, direction) => {\n      // const filterQuery = getFilterQuery();\n      const apisService = getKms();\n\n      type columns = NonNullable<typeof sort>;\n      const uiColumnMapping: { [key in columns]: string } = {\n        name: \"name\",\n        owner: \"owner\",\n        provider: \"cloud_provider\",\n        region: \"region\",\n        createdAt: \"created_at\",\n      };\n\n      try {\n        const { name, status, owner } = query;\n\n        const querystring = [\n          valuesToQuery(\"name\", name, \"%\"),\n          valuesToQuery(\"owner\", owner, \"%\"),\n          valuesToQuery(\n            \"status\",\n            status.flatMap((s) => SimplifiedStatuses[s]),\n            \"=\"\n          ),\n        ]\n          .filter(Boolean)\n          .map((q) => `(${q})`)\n          .join(\" and \");\n\n        const res = await apisService.getKafkas(\n          page.toString(10),\n          perPage.toString(10),\n          sort ? `${uiColumnMapping[sort]} ${direction}` : undefined,\n          querystring,\n          {\n            cache: false,\n          } as AxiosCacheRequestConfig\n        );\n        const rawInstances = res.data.items;\n        const count = res.data.total;\n        const instances = await Promise.all(\n          rawInstances.map(kafkaRequestToKafkaInstance)\n        );\n        return {\n          instances,\n          count,\n        };\n      } catch (error) {\n        // handleServerError(error);\n        return {\n          instances: [],\n          count: 0,\n        };\n      }\n    },\n    [getKms, kafkaRequestToKafkaInstance]\n  );\n}\n\nexport function useEnrichedKafkaInstance() {\n  const getQuota = useStandardQuota();\n  const getDeveloperSizes = useGetSizes(\"developer\");\n  const getStandardSizes = useGetSizes(\"standard\");\n\n  const kafkaRequestToKafkaInstance = useCallback(\n    async (data: KafkaRequest): Promise<KafkaInstanceEnhanced> => {\n      const d = data as Required<KafkaRequest>;\n\n      const { marketplaceSubscriptions } = await getQuota();\n\n      const enhancedInstance: KafkaInstanceEnhanced = {\n        billing: undefined,\n        connectionRate: 0,\n        connections: 0,\n        createdAt: d.created_at,\n        egress: 0,\n        expiryDate: d.expires_at as string | undefined,\n        id: d.id,\n        ingress: 0,\n        maxPartitions: 0,\n        messageSize: 0,\n        name: d.name,\n        owner: d.owner,\n        plan: d.billing_model as Plan,\n        provider: d.cloud_provider as CloudProvider,\n        region: d.region,\n        size: \"1\",\n        status: apiStatusToUIStatus(d.status),\n        storage: 0,\n        updatedAt: d.updated_at,\n        request: d,\n      };\n\n      // update the billing info\n      try {\n        const marketplaceForBilling = marketplaceSubscriptions.find((ms) =>\n          ms.subscriptions.find((s) => s === d.billing_cloud_account_id)\n        )?.marketplace;\n\n        const billing: KafkaInstanceEnhanced[\"billing\"] =\n          d.billing_model === \"standard\"\n            ? \"prepaid\"\n            : marketplaceForBilling\n            ? {\n                marketplace: marketplaceForBilling,\n                subscription: d.billing_cloud_account_id,\n              }\n            : undefined;\n        enhancedInstance.billing = billing;\n      } catch (e) {\n        console.warn(\n          \"kafkaRequestToKafkaInstance\",\n          `couldn't retrieve the billing info for`,\n          d\n        );\n      }\n\n      // update the limits\n      try {\n        const limits =\n          d.instance_type === \"developer\"\n            ? await getDeveloperSizes(\n                d.cloud_provider as CloudProvider,\n                d.region\n              )\n            : await getStandardSizes(\n                d.cloud_provider as CloudProvider,\n                d.region\n              );\n        const thisInstanceLimits = limits.find((l) => l.id === d.size_id);\n        if (thisInstanceLimits) {\n          enhancedInstance.size = thisInstanceLimits.displayName;\n          enhancedInstance.ingress = thisInstanceLimits.ingress;\n          enhancedInstance.egress = thisInstanceLimits.egress;\n          enhancedInstance.storage = d.max_data_retention_size.bytes;\n          enhancedInstance.connections = thisInstanceLimits.connections;\n          enhancedInstance.connectionRate = thisInstanceLimits.connectionRate;\n          enhancedInstance.maxPartitions = thisInstanceLimits.maxPartitions;\n          enhancedInstance.messageSize = thisInstanceLimits.messageSize;\n        }\n      } catch (e) {\n        console.warn(\n          \"kafkaRequestToKafkaInstance\",\n          `couldn't retrieve the limits info for`,\n          d\n        );\n      }\n\n      return enhancedInstance;\n    },\n    [getDeveloperSizes, getQuota, getStandardSizes]\n  );\n\n  return {\n    kafkaRequestToKafkaInstance,\n  };\n}\n\nfunction valuesToQuery(\n  field: string,\n  values: string[],\n  comparison: \"%\" | \"=\"\n): string | undefined {\n  return values\n    .map((v) =>\n      comparison === \"%\"\n        ? `${field} like %${v.trim()}%`\n        : `${field} = ${v.trim()}`\n    )\n    .join(\" or \");\n}\n\nfunction apiStatusToUIStatus(status: string): Status {\n  const mapping: { [key: string]: Status } = {\n    accepted: \"accepted\",\n    preparing: \"preparing\",\n    provisioning: \"provisioning\",\n    ready: \"ready\",\n    failed: \"degraded\",\n    deprovision: \"deprovision\",\n    deleting: \"deleting\",\n  };\n  return mapping[status] || \"degraded\";\n}\n"],"names":["Component","state","hasError","onClickButton","history","this","props","setState","push","static","componentDidCatch","error","errorInfo","console","render","t","PageSection","padding","default","isFilled","MASEmptyState","emptyStateProps","variant","emptyStateIconProps","className","titleProps","title","emptyStateBodyProps","body","Button","onClick","children","withRouter","withTranslation","MASLoading","bullseyeProps","spinnerProps","Bullseye","Spinner","onClose","isLoading","drawerPanelContentProps","drawerHeaderProps","isExpanded","panelBodyContent","onExpand","notRequiredDrawerContentBackground","dataOuiaAppId","inlineAlertMessage","widths","restDrawerPanelContentProps","text","panelContent","DrawerPanelContent","DrawerHead","TextContent","label","Text","component","TextVariants","value","Title","headingLevel","size","TitleSizes","DrawerActions","DrawerCloseButton","DrawerPanelBody","Drawer","DrawerContent","DrawerContentBody","ResourcesTab","lazy","InstanceDrawerContent","instance","kafkaRequestToKafkaInstance","enrichedInstance","setEnrichedInstance","useState","request","undefined","useEffect","enrichInstance","InstanceDrawerContentConnected","activeTab","setActiveTab","tokenEndPointUrl","useTranslation","isKafkaPending","status","Suspense","fallback","Tabs","activeKey","onSelect","_","tab","Tab","eventKey","TabTitleText","KafkaDetailsTab","id","owner","createdAt","parseISO","updatedAt","expiryDate","ingress","egress","storage","maxPartitions","connections","connectionRate","messageSize","region","instanceType","plan","billing","kafkaVersion","version","externalServer","bootstrap_server_host","endsWith","getExternalServer","adminServerUrl","admin_api_server_url","getAdminServerUrl","instanceId","InstanceDrawer","isDrawerOpen","drawerInstance","setDrawerActiveTab","drawerActiveTab","closeDrawer","name","ModalProvider","useKafkaInstances","getKms","useEnrichedKafkaInstance","useCallback","page","perPage","query","sort","direction","apisService","uiColumnMapping","provider","querystring","valuesToQuery","flatMap","s","SimplifiedStatuses","filter","Boolean","map","q","join","res","getKafkas","toString","cache","rawInstances","data","items","count","total","instances","Promise","all","getQuota","getDeveloperSizes","getStandardSizes","d","marketplaceSubscriptions","enhancedInstance","created_at","expires_at","billing_model","cloud_provider","apiStatusToUIStatus","updated_at","marketplaceForBilling","find","ms","subscriptions","billing_cloud_account_id","marketplace","subscription","e","warn","thisInstanceLimits","instance_type","l","size_id","displayName","max_data_retention_size","bytes","field","values","comparison","v","trim","accepted","preparing","provisioning","ready","failed","deprovision","deleting"],"sourceRoot":""}