{"version":3,"sources":["webpack://kas-ui/./src/app/modules/OpenshiftStreams/components/InstanceDrawer/InstanceDrawer.tsx","webpack://kas-ui/./src/app/modules/OpenshiftStreams/components/InstanceDrawer/InstanceDrawerConnected.tsx","webpack://kas-ui/./src/app/modules/OpenshiftStreams/components/InstanceDrawer/InstanceDrawerFederated.tsx"],"names":["ConnectionTab","DetailsTab","MASDrawer","InstanceDrawer","mainToggle","onClose","activeTab","instanceDetail","isExpanded","isLoading","children","dataOuiaAppId","getConnectToRoutePath","onConnectToRoute","tokenEndPointUrl","notRequiredDrawerContentBackground","t","useTranslation","name","status","useState","activeTab1Key","setActiveTab1Key","activeTab2Key","setActiveTab2Key","useEffect","selectedTab","toLowerCase","bootstrap_server_host","handleTab1Click","_","eventKey","onSelectConnectionTab","isKafkaPending","fallback","panelBodyContent","Tabs","activeKey","onSelect","Tab","title","TabTitleText","instance","externalServer","endsWith","drawerHeaderProps","text","label","value","headingLevel","inlineAlertMessage","Alert","isInline","variant","AlertVariant","className","InstanceDrawerConnected","isOpenDeleteInstanceModal","setIsOpenDeleteInstanceModal","showModal","selectedItemData","I18nextProvider","i18n","undefined"],"mappings":"mPAaaA,EAAgB,UAAW,WAAM,0CACjCC,EAAa,UAAW,WAAM,0CAC9BC,EAAY,UAAW,WAAM,kDAWpCC,EAA+D,SAAC,G,IACpEC,EAAU,aACVC,EAAO,UACPC,EAAS,YACTC,EAAc,iBACdC,EAAU,aACVC,EAAS,YACTC,EAAQ,WACYC,EAAa,sBACjCC,EAAqB,wBACrBC,EAAgB,mBAChBC,EAAgB,mBAChBC,EAAkC,qCAElC,WAAa,KACL,IAAAC,GAAM,IAAAC,kBAAgB,EACxB,EAAmBV,GAAkB,GAAnCW,EAAI,OAAEC,EAAM,SAEd,GAAoC,IAAAC,UAA0B,GAA7DC,EAAa,KAAEC,EAAgB,KAChC,GAAoC,IAAAF,UAA0B,GAA7DG,EAAa,KAAEC,EAAgB,MAEtC,IAAAC,YAAU,WACR,IAAMC,EAA2C,aAA7BpB,aAAS,EAATA,EAAWqB,eAA8B,EAAI,EACjEL,EAAiBI,GACjBF,EAAiB,KAChB,CAAClB,IAEJ,IASUsB,EATJC,EAAkB,SAACC,EAAGC,GAC1BT,EAAiBS,IAGbC,EAAwB,SAACF,EAAGC,GAChCP,EAAiBO,IAQbE,EAAiBd,IAAW,eAA2BA,IAAW,eAyCxE,OACE,kBAAC,aAAc,CAACe,SAAU,kBAAC,KAAU,OACnC,kBAAChC,EAAS,CACRM,WAAYA,EACZC,UAAWA,EACXJ,QAASA,EACT8B,iBA3CF,kBAAC,aAAc,CAACD,SAAU,kBAAC,KAAU,OACnC,kBAAC,EAAAE,KAAI,CAACC,UAAWhB,EAAeiB,SAAUT,GACxC,kBAAC,EAAAU,IAAG,CAACR,SAAU,EAAGS,MAAO,kBAAC,EAAAC,aAAY,KAAEzB,EAAE,aACxC,kBAACf,EAAU,CAACG,WAAYA,EAAYG,eAAgBA,KAEtD,kBAAC,EAAAgC,IAAG,CAACR,SAAU,EAAGS,MAAO,kBAAC,EAAAC,aAAY,KAAEzB,EAAE,eAA6B,cAAc,4BACnF,kBAAChB,EAAa,CACZI,WAAYA,EACZiC,UAAWd,EACXmB,SAAUnC,EACVoC,gBAlBFf,GAA0BrB,GAAkB,IAAE,uBAC/CqB,aAAqB,EAArBA,EAAuBgB,SAAS,SAAUhB,EAA2BA,EAAqB,QAkBvFU,SAAUN,EACVC,eAAgBA,EAChBrB,sBAAuBA,EACvBC,iBAAkBA,EAClBC,iBAAkBA,OA6BxB+B,kBAAmB,CACjBC,KAAM,CAAEC,MAAO/B,EAAE,kBACjBwB,MAAO,CAAEQ,MAAO9B,EAAM+B,aAAc,OACrC,mBACiBtC,EAClBuC,mBAzBAjB,EAEA,kBAAC,EAAAkB,MAAK,CACJC,UAAQ,EACRC,QAAS,EAAAC,aAAA,KACTd,MAAOxB,EAAE,2CACTuC,UAAU,eAIT,qCAgBHxC,mCAAoCA,GAEnCL,M,mKCjHH8C,EAAkE,SAAC,G,IACvEhD,EAAU,aACVF,EAAS,YACTD,EAAO,UACaM,EAAa,sBACjCC,EAAqB,wBACrBC,EAAgB,mBAChBC,EAAgB,mBAChBJ,EAAQ,WACRN,EAAU,aACVG,EAAc,iBACdE,EAAS,YACTgD,EAAyB,4BACzBC,EAA4B,+BAEpBC,GAAc,UAAqB,UAgB3C,OANA,IAAAlC,YAAU,WACJgC,GARJE,EAAU,6BAAqC,CAC7CC,iBAAkBrD,EAClBmD,6BAA4B,EAC5B7C,iBAAgB,MAQjB,CAAC4C,IAGF,kBAACtD,EAAA,GAAc,CACbK,WAAYA,EACZF,UAAWA,EACXD,QAASA,EAAO,mBACEM,EAClBC,sBAAuBA,EACvBC,iBAAkBA,EAClBC,iBAAkBA,EAClBV,WAAYA,EACZK,UAAWA,EACXF,eAAgBA,GAEfG,I,WCHP,QAtCgC,SAAC,G,IAC/BF,EAAU,aACVF,EAAS,YACTD,EAAO,UACaM,EAAa,sBACjCC,EAAqB,wBACrBC,EAAgB,mBAChBC,EAAgB,mBAChBJ,EAAQ,WACRN,EAAU,aACVG,EAAc,iBACdmD,EAA4B,+BAC5BD,EAAyB,4BAEzB,OACE,kBAAC,EAAAI,gBAAe,CAACC,MAAM,UACrB,kBAAC,KAAS,KACR,kBAACN,EAAuB,CACtBhD,WAAYA,EACZF,UAAWA,EACXD,QAASA,EAAO,mBACEM,EAClBC,sBAAuBA,EACvBC,iBAAkBA,EAClBC,iBAAkBA,EAClBV,WAAYA,EACZK,eAA8BsD,IAAnBxD,EACXA,eAAgBA,EAChBmD,6BAA8BA,EAC9BD,0BAA2BA,GAE1B/C","file":"6142.a8967ce0.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport dayjs from 'dayjs';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport { Tabs, Tab, TabTitleText, Alert, AlertVariant } from '@patternfly/react-core';\nimport '@patternfly/react-styles/css/utilities/Spacing/spacing.css';\nimport '@patternfly/react-styles/css/utilities/Alignment/alignment.css';\nimport { MASDrawerProps, MASLoading } from '@app/common';\nimport { InstanceStatus } from '@app/utils';\nimport { ConnectionTabProps } from './ConnectionTab';\nimport { DetailsTabProps } from './DetailsTab';\nimport './InstanceDrawer.css';\n\nexport const ConnectionTab = React.lazy(() => import('./ConnectionTab'));\nexport const DetailsTab = React.lazy(() => import('./DetailsTab'));\nexport const MASDrawer = React.lazy(() => import('@app/common/MASDrawer/MASDrawer'));\n\nexport type InstanceDrawerProps = Pick<\n  ConnectionTabProps,\n  'getConnectToRoutePath' | 'onConnectToRoute' | 'tokenEndPointUrl'\n> &\n  Omit<MASDrawerProps, 'drawerHeaderProps' | 'panelBodyContent' | '[data-ouia-app-id]'> &\n  DetailsTabProps & {\n    activeTab?: string;\n  };\n\nconst InstanceDrawer: React.FunctionComponent<InstanceDrawerProps> = ({\n  mainToggle,\n  onClose,\n  activeTab,\n  instanceDetail,\n  isExpanded,\n  isLoading,\n  children,\n  'data-ouia-app-id': dataOuiaAppId,\n  getConnectToRoutePath,\n  onConnectToRoute,\n  tokenEndPointUrl,\n  notRequiredDrawerContentBackground,\n}) => {\n  dayjs.extend(localizedFormat);\n  const { t } = useTranslation();\n  const { name, status } = instanceDetail || {};\n\n  const [activeTab1Key, setActiveTab1Key] = useState<string | number>(0);\n  const [activeTab2Key, setActiveTab2Key] = useState<string | number>(0);\n\n  useEffect(() => {\n    const selectedTab = activeTab?.toLowerCase() === 'details' ? 0 : 1;\n    setActiveTab1Key(selectedTab);\n    setActiveTab2Key(0);\n  }, [activeTab]);\n\n  const handleTab1Click = (_, eventKey: string | number) => {\n    setActiveTab1Key(eventKey);\n  };\n\n  const onSelectConnectionTab = (_, eventKey: string | number) => {\n    setActiveTab2Key(eventKey);\n  };\n\n  const getExternalServer = () => {\n    const { bootstrap_server_host } = instanceDetail || {};\n    return bootstrap_server_host?.endsWith(':443') ? bootstrap_server_host : `${bootstrap_server_host}:443`;\n  };\n\n  const isKafkaPending = status === InstanceStatus.ACCEPTED || status === InstanceStatus.PREPARING;\n\n  const panelBodyContent = () => {\n    return (\n      <React.Suspense fallback={<MASLoading />}>\n        <Tabs activeKey={activeTab1Key} onSelect={handleTab1Click}>\n          <Tab eventKey={0} title={<TabTitleText>{t('details')}</TabTitleText>}>\n            <DetailsTab mainToggle={mainToggle} instanceDetail={instanceDetail} />\n          </Tab>\n          <Tab eventKey={1} title={<TabTitleText>{t('connection')}</TabTitleText>} data-testid=\"drawerStreams-tabConnect\">\n            <ConnectionTab\n              mainToggle={mainToggle}\n              activeKey={activeTab2Key}\n              instance={instanceDetail}\n              externalServer={getExternalServer()}\n              onSelect={onSelectConnectionTab}\n              isKafkaPending={isKafkaPending}\n              getConnectToRoutePath={getConnectToRoutePath}\n              onConnectToRoute={onConnectToRoute}\n              tokenEndPointUrl={tokenEndPointUrl}\n            />\n          </Tab>\n        </Tabs>\n      </React.Suspense>\n    );\n  };\n\n  const alertMessage = () => {\n    if (isKafkaPending) {\n      return (\n        <Alert\n          isInline\n          variant={AlertVariant.info}\n          title={t('kafka_instance_not_ready_inline_message')}\n          className=\"pf-u-mt-sm\"\n        />\n      );\n    }\n    return <></>;\n  };\n\n  return (\n    <React.Suspense fallback={<MASLoading />}>\n      <MASDrawer\n        isExpanded={isExpanded}\n        isLoading={isLoading}\n        onClose={onClose}\n        panelBodyContent={panelBodyContent()}\n        drawerHeaderProps={{\n          text: { label: t('instance_name') },\n          title: { value: name, headingLevel: 'h1' },\n        }}\n        data-ouia-app-id={dataOuiaAppId}\n        inlineAlertMessage={alertMessage()}\n        notRequiredDrawerContentBackground={notRequiredDrawerContentBackground}\n      >\n        {children}\n      </MASDrawer>\n    </React.Suspense>\n  );\n};\n\nexport { InstanceDrawer };\n","import React, { useEffect } from 'react';\nimport { InstanceDrawer, InstanceDrawerProps } from './InstanceDrawer';\nimport { useRootModalContext, MODAL_TYPES } from '@app/common';\n\nexport type InstanceDrawerConnectedProps = InstanceDrawerProps & {\n  isOpenDeleteInstanceModal: boolean;\n  setIsOpenDeleteInstanceModal: (isopen: boolean) => void;\n};\n\nconst InstanceDrawerConnected: React.FC<InstanceDrawerConnectedProps> = ({\n  isExpanded,\n  activeTab,\n  onClose,\n  'data-ouia-app-id': dataOuiaAppId,\n  getConnectToRoutePath,\n  onConnectToRoute,\n  tokenEndPointUrl,\n  children,\n  mainToggle,\n  instanceDetail,\n  isLoading,\n  isOpenDeleteInstanceModal,\n  setIsOpenDeleteInstanceModal,\n}) => {\n  const { showModal } = useRootModalContext();\n\n  const showDeleteInstanceModal = () => {\n    showModal(MODAL_TYPES.DELETE_KAFKA_EXTERNALLY, {\n      selectedItemData: instanceDetail,\n      setIsOpenDeleteInstanceModal,\n      onConnectToRoute,\n    });\n  };\n\n  useEffect(() => {\n    if (isOpenDeleteInstanceModal) {\n      showDeleteInstanceModal();\n    }\n  }, [isOpenDeleteInstanceModal]);\n\n  return (\n    <InstanceDrawer\n      isExpanded={isExpanded}\n      activeTab={activeTab}\n      onClose={onClose}\n      data-ouia-app-id={dataOuiaAppId}\n      getConnectToRoutePath={getConnectToRoutePath}\n      onConnectToRoute={onConnectToRoute}\n      tokenEndPointUrl={tokenEndPointUrl}\n      mainToggle={mainToggle}\n      isLoading={isLoading}\n      instanceDetail={instanceDetail}\n    >\n      {children}\n    </InstanceDrawer>\n  );\n};\n\nexport { InstanceDrawerConnected };\n","import React from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport { BrowserRouter } from 'react-router-dom';\nimport '@patternfly/patternfly/utilities/Accessibility/accessibility.css';\nimport '@patternfly/patternfly/utilities/Sizing/sizing.css';\nimport '@patternfly/patternfly/utilities/Spacing/spacing.css';\nimport '@patternfly/patternfly/utilities/Display/display.css';\nimport '@patternfly/patternfly/utilities/Flex/flex.css';\nimport { InstanceDrawerConnected } from './InstanceDrawerConnected';\nimport { RootModal, AlertProvider } from '@app/common';\nimport { initI18N } from '@i18n/i18n';\n\nconst InstanceDrawerFederated = ({\n  isExpanded,\n  activeTab,\n  onClose,\n  'data-ouia-app-id': dataOuiaAppId,\n  getConnectToRoutePath,\n  onConnectToRoute,\n  tokenEndPointUrl,\n  children,\n  mainToggle,\n  instanceDetail,\n  setIsOpenDeleteInstanceModal,\n  isOpenDeleteInstanceModal,\n}) => {\n  return (\n    <I18nextProvider i18n={initI18N()}>\n      <RootModal>\n        <InstanceDrawerConnected\n          isExpanded={isExpanded}\n          activeTab={activeTab}\n          onClose={onClose}\n          data-ouia-app-id={dataOuiaAppId}\n          getConnectToRoutePath={getConnectToRoutePath}\n          onConnectToRoute={onConnectToRoute}\n          tokenEndPointUrl={tokenEndPointUrl}\n          mainToggle={mainToggle}\n          isLoading={instanceDetail === undefined}\n          instanceDetail={instanceDetail}\n          setIsOpenDeleteInstanceModal={setIsOpenDeleteInstanceModal}\n          isOpenDeleteInstanceModal={isOpenDeleteInstanceModal}\n        >\n          {children}\n        </InstanceDrawerConnected>\n      </RootModal>\n    </I18nextProvider>\n  );\n};\n\nexport default InstanceDrawerFederated;\n"],"sourceRoot":""}